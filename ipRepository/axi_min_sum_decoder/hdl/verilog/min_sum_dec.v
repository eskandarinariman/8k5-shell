// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="min_sum_dec,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=36624,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=90,HLS_SYN_FF=20336,HLS_SYN_LUT=40193}" *)

module min_sum_dec (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        variance,
        m_axi_noisy_input_AWVALID,
        m_axi_noisy_input_AWREADY,
        m_axi_noisy_input_AWADDR,
        m_axi_noisy_input_AWID,
        m_axi_noisy_input_AWLEN,
        m_axi_noisy_input_AWSIZE,
        m_axi_noisy_input_AWBURST,
        m_axi_noisy_input_AWLOCK,
        m_axi_noisy_input_AWCACHE,
        m_axi_noisy_input_AWPROT,
        m_axi_noisy_input_AWQOS,
        m_axi_noisy_input_AWREGION,
        m_axi_noisy_input_AWUSER,
        m_axi_noisy_input_WVALID,
        m_axi_noisy_input_WREADY,
        m_axi_noisy_input_WDATA,
        m_axi_noisy_input_WSTRB,
        m_axi_noisy_input_WLAST,
        m_axi_noisy_input_WID,
        m_axi_noisy_input_WUSER,
        m_axi_noisy_input_ARVALID,
        m_axi_noisy_input_ARREADY,
        m_axi_noisy_input_ARADDR,
        m_axi_noisy_input_ARID,
        m_axi_noisy_input_ARLEN,
        m_axi_noisy_input_ARSIZE,
        m_axi_noisy_input_ARBURST,
        m_axi_noisy_input_ARLOCK,
        m_axi_noisy_input_ARCACHE,
        m_axi_noisy_input_ARPROT,
        m_axi_noisy_input_ARQOS,
        m_axi_noisy_input_ARREGION,
        m_axi_noisy_input_ARUSER,
        m_axi_noisy_input_RVALID,
        m_axi_noisy_input_RREADY,
        m_axi_noisy_input_RDATA,
        m_axi_noisy_input_RLAST,
        m_axi_noisy_input_RID,
        m_axi_noisy_input_RUSER,
        m_axi_noisy_input_RRESP,
        m_axi_noisy_input_BVALID,
        m_axi_noisy_input_BREADY,
        m_axi_noisy_input_BRESP,
        m_axi_noisy_input_BID,
        m_axi_noisy_input_BUSER,
        m_axi_soft_dec_out_AWVALID,
        m_axi_soft_dec_out_AWREADY,
        m_axi_soft_dec_out_AWADDR,
        m_axi_soft_dec_out_AWID,
        m_axi_soft_dec_out_AWLEN,
        m_axi_soft_dec_out_AWSIZE,
        m_axi_soft_dec_out_AWBURST,
        m_axi_soft_dec_out_AWLOCK,
        m_axi_soft_dec_out_AWCACHE,
        m_axi_soft_dec_out_AWPROT,
        m_axi_soft_dec_out_AWQOS,
        m_axi_soft_dec_out_AWREGION,
        m_axi_soft_dec_out_AWUSER,
        m_axi_soft_dec_out_WVALID,
        m_axi_soft_dec_out_WREADY,
        m_axi_soft_dec_out_WDATA,
        m_axi_soft_dec_out_WSTRB,
        m_axi_soft_dec_out_WLAST,
        m_axi_soft_dec_out_WID,
        m_axi_soft_dec_out_WUSER,
        m_axi_soft_dec_out_ARVALID,
        m_axi_soft_dec_out_ARREADY,
        m_axi_soft_dec_out_ARADDR,
        m_axi_soft_dec_out_ARID,
        m_axi_soft_dec_out_ARLEN,
        m_axi_soft_dec_out_ARSIZE,
        m_axi_soft_dec_out_ARBURST,
        m_axi_soft_dec_out_ARLOCK,
        m_axi_soft_dec_out_ARCACHE,
        m_axi_soft_dec_out_ARPROT,
        m_axi_soft_dec_out_ARQOS,
        m_axi_soft_dec_out_ARREGION,
        m_axi_soft_dec_out_ARUSER,
        m_axi_soft_dec_out_RVALID,
        m_axi_soft_dec_out_RREADY,
        m_axi_soft_dec_out_RDATA,
        m_axi_soft_dec_out_RLAST,
        m_axi_soft_dec_out_RID,
        m_axi_soft_dec_out_RUSER,
        m_axi_soft_dec_out_RRESP,
        m_axi_soft_dec_out_BVALID,
        m_axi_soft_dec_out_BREADY,
        m_axi_soft_dec_out_BRESP,
        m_axi_soft_dec_out_BID,
        m_axi_soft_dec_out_BUSER,
        m_axi_hard_dec_out_AWVALID,
        m_axi_hard_dec_out_AWREADY,
        m_axi_hard_dec_out_AWADDR,
        m_axi_hard_dec_out_AWID,
        m_axi_hard_dec_out_AWLEN,
        m_axi_hard_dec_out_AWSIZE,
        m_axi_hard_dec_out_AWBURST,
        m_axi_hard_dec_out_AWLOCK,
        m_axi_hard_dec_out_AWCACHE,
        m_axi_hard_dec_out_AWPROT,
        m_axi_hard_dec_out_AWQOS,
        m_axi_hard_dec_out_AWREGION,
        m_axi_hard_dec_out_AWUSER,
        m_axi_hard_dec_out_WVALID,
        m_axi_hard_dec_out_WREADY,
        m_axi_hard_dec_out_WDATA,
        m_axi_hard_dec_out_WSTRB,
        m_axi_hard_dec_out_WLAST,
        m_axi_hard_dec_out_WID,
        m_axi_hard_dec_out_WUSER,
        m_axi_hard_dec_out_ARVALID,
        m_axi_hard_dec_out_ARREADY,
        m_axi_hard_dec_out_ARADDR,
        m_axi_hard_dec_out_ARID,
        m_axi_hard_dec_out_ARLEN,
        m_axi_hard_dec_out_ARSIZE,
        m_axi_hard_dec_out_ARBURST,
        m_axi_hard_dec_out_ARLOCK,
        m_axi_hard_dec_out_ARCACHE,
        m_axi_hard_dec_out_ARPROT,
        m_axi_hard_dec_out_ARQOS,
        m_axi_hard_dec_out_ARREGION,
        m_axi_hard_dec_out_ARUSER,
        m_axi_hard_dec_out_RVALID,
        m_axi_hard_dec_out_RREADY,
        m_axi_hard_dec_out_RDATA,
        m_axi_hard_dec_out_RLAST,
        m_axi_hard_dec_out_RID,
        m_axi_hard_dec_out_RUSER,
        m_axi_hard_dec_out_RRESP,
        m_axi_hard_dec_out_BVALID,
        m_axi_hard_dec_out_BREADY,
        m_axi_hard_dec_out_BRESP,
        m_axi_hard_dec_out_BID,
        m_axi_hard_dec_out_BUSER
);

parameter    ap_ST_fsm_state1 = 63'b1;
parameter    ap_ST_fsm_state2 = 63'b10;
parameter    ap_ST_fsm_state3 = 63'b100;
parameter    ap_ST_fsm_state4 = 63'b1000;
parameter    ap_ST_fsm_state5 = 63'b10000;
parameter    ap_ST_fsm_state6 = 63'b100000;
parameter    ap_ST_fsm_state7 = 63'b1000000;
parameter    ap_ST_fsm_state8 = 63'b10000000;
parameter    ap_ST_fsm_state9 = 63'b100000000;
parameter    ap_ST_fsm_state10 = 63'b1000000000;
parameter    ap_ST_fsm_state11 = 63'b10000000000;
parameter    ap_ST_fsm_state12 = 63'b100000000000;
parameter    ap_ST_fsm_state13 = 63'b1000000000000;
parameter    ap_ST_fsm_state14 = 63'b10000000000000;
parameter    ap_ST_fsm_state15 = 63'b100000000000000;
parameter    ap_ST_fsm_state16 = 63'b1000000000000000;
parameter    ap_ST_fsm_state17 = 63'b10000000000000000;
parameter    ap_ST_fsm_state18 = 63'b100000000000000000;
parameter    ap_ST_fsm_state19 = 63'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 63'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 63'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 63'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 63'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 63'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 63'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 63'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 63'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 63'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 63'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 63'b100000000000000000000000000000;
parameter    ap_ST_fsm_pp0_stage0 = 63'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 63'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp1_stage0 = 63'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 63'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state48 = 63'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state49 = 63'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 63'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 63'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 63'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 63'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 63'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 63'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 63'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 63'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 63'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 63'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 63'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 63'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 63'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 63'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 63'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 63'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 63'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 63'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 63'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 63'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 63'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 63'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 63'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 63'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 63'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 63'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 63'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    C_M_AXI_NOISY_INPUT_ID_WIDTH = 1;
parameter    C_M_AXI_NOISY_INPUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_NOISY_INPUT_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_M_AXI_NOISY_INPUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_NOISY_INPUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_NOISY_INPUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_NOISY_INPUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_NOISY_INPUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_NOISY_INPUT_TARGET_ADDR = 0;
parameter    C_M_AXI_NOISY_INPUT_USER_VALUE = 0;
parameter    C_M_AXI_NOISY_INPUT_PROT_VALUE = 0;
parameter    C_M_AXI_NOISY_INPUT_CACHE_VALUE = 3;
parameter    C_M_AXI_SOFT_DEC_OUT_ID_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH = 32;
parameter    C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_SOFT_DEC_OUT_TARGET_ADDR = 0;
parameter    C_M_AXI_SOFT_DEC_OUT_USER_VALUE = 0;
parameter    C_M_AXI_SOFT_DEC_OUT_PROT_VALUE = 0;
parameter    C_M_AXI_SOFT_DEC_OUT_CACHE_VALUE = 3;
parameter    C_M_AXI_HARD_DEC_OUT_ID_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_HARD_DEC_OUT_DATA_WIDTH = 32;
parameter    C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_HARD_DEC_OUT_TARGET_ADDR = 0;
parameter    C_M_AXI_HARD_DEC_OUT_USER_VALUE = 0;
parameter    C_M_AXI_HARD_DEC_OUT_PROT_VALUE = 0;
parameter    C_M_AXI_HARD_DEC_OUT_CACHE_VALUE = 3;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_A7 = 32'b10100111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_C0000000 = 32'b11000000000000000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv8_A7 = 8'b10100111;
parameter    ap_const_lv8_59 = 8'b1011001;
parameter    ap_const_lv10_A7 = 10'b10100111;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv9_A6 = 9'b10100110;
parameter    ap_const_lv9_159 = 9'b101011001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv9_73 = 9'b1110011;
parameter    ap_const_lv9_A7 = 9'b10100111;
parameter    ap_const_lv8_CC = 8'b11001100;
parameter    ap_const_lv8_D = 8'b1101;
parameter    ap_const_lv8_66 = 8'b1100110;
parameter    ap_const_lv8_19 = 8'b11001;
parameter    ap_const_lv8_72 = 8'b1110010;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv8_11 = 8'b10001;
parameter    ap_const_lv8_6A = 8'b1101010;
parameter    ap_const_lv9_81 = 9'b10000001;
parameter    ap_const_lv9_1DA = 9'b111011010;
parameter    ap_const_lv9_7C = 9'b1111100;
parameter    ap_const_lv8_D5 = 8'b11010101;
parameter    ap_const_lv8_26 = 8'b100110;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv9_89 = 9'b10001001;
parameter    ap_const_lv9_1E2 = 9'b111100010;
parameter    ap_const_lv9_A0 = 9'b10100000;
parameter    ap_const_lv9_1F9 = 9'b111111001;
parameter    ap_const_lv9_88 = 9'b10001000;
parameter    ap_const_lv9_1E1 = 9'b111100001;
parameter    ap_const_lv8_4B = 8'b1001011;
parameter    ap_const_lv8_A4 = 8'b10100100;
parameter    ap_const_lv9_98 = 9'b10011000;
parameter    ap_const_lv9_1F1 = 9'b111110001;
parameter    ap_const_lv8_B2 = 8'b10110010;
parameter    ap_const_lv8_49 = 8'b1001001;
parameter    ap_const_lv8_A2 = 8'b10100010;
parameter    ap_const_lv9_91 = 9'b10010001;
parameter    ap_const_lv9_1EA = 9'b111101010;
parameter    ap_const_lv5_4 = 5'b100;

parameter C_M_AXI_NOISY_INPUT_WSTRB_WIDTH = (C_M_AXI_NOISY_INPUT_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_SOFT_DEC_OUT_WSTRB_WIDTH = (C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_HARD_DEC_OUT_WSTRB_WIDTH = (C_M_AXI_HARD_DEC_OUT_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] variance;
output   m_axi_noisy_input_AWVALID;
input   m_axi_noisy_input_AWREADY;
output  [C_M_AXI_NOISY_INPUT_ADDR_WIDTH - 1 : 0] m_axi_noisy_input_AWADDR;
output  [C_M_AXI_NOISY_INPUT_ID_WIDTH - 1 : 0] m_axi_noisy_input_AWID;
output  [7:0] m_axi_noisy_input_AWLEN;
output  [2:0] m_axi_noisy_input_AWSIZE;
output  [1:0] m_axi_noisy_input_AWBURST;
output  [1:0] m_axi_noisy_input_AWLOCK;
output  [3:0] m_axi_noisy_input_AWCACHE;
output  [2:0] m_axi_noisy_input_AWPROT;
output  [3:0] m_axi_noisy_input_AWQOS;
output  [3:0] m_axi_noisy_input_AWREGION;
output  [C_M_AXI_NOISY_INPUT_AWUSER_WIDTH - 1 : 0] m_axi_noisy_input_AWUSER;
output   m_axi_noisy_input_WVALID;
input   m_axi_noisy_input_WREADY;
output  [C_M_AXI_NOISY_INPUT_DATA_WIDTH - 1 : 0] m_axi_noisy_input_WDATA;
output  [C_M_AXI_NOISY_INPUT_WSTRB_WIDTH - 1 : 0] m_axi_noisy_input_WSTRB;
output   m_axi_noisy_input_WLAST;
output  [C_M_AXI_NOISY_INPUT_ID_WIDTH - 1 : 0] m_axi_noisy_input_WID;
output  [C_M_AXI_NOISY_INPUT_WUSER_WIDTH - 1 : 0] m_axi_noisy_input_WUSER;
output   m_axi_noisy_input_ARVALID;
input   m_axi_noisy_input_ARREADY;
output  [C_M_AXI_NOISY_INPUT_ADDR_WIDTH - 1 : 0] m_axi_noisy_input_ARADDR;
output  [C_M_AXI_NOISY_INPUT_ID_WIDTH - 1 : 0] m_axi_noisy_input_ARID;
output  [7:0] m_axi_noisy_input_ARLEN;
output  [2:0] m_axi_noisy_input_ARSIZE;
output  [1:0] m_axi_noisy_input_ARBURST;
output  [1:0] m_axi_noisy_input_ARLOCK;
output  [3:0] m_axi_noisy_input_ARCACHE;
output  [2:0] m_axi_noisy_input_ARPROT;
output  [3:0] m_axi_noisy_input_ARQOS;
output  [3:0] m_axi_noisy_input_ARREGION;
output  [C_M_AXI_NOISY_INPUT_ARUSER_WIDTH - 1 : 0] m_axi_noisy_input_ARUSER;
input   m_axi_noisy_input_RVALID;
output   m_axi_noisy_input_RREADY;
input  [C_M_AXI_NOISY_INPUT_DATA_WIDTH - 1 : 0] m_axi_noisy_input_RDATA;
input   m_axi_noisy_input_RLAST;
input  [C_M_AXI_NOISY_INPUT_ID_WIDTH - 1 : 0] m_axi_noisy_input_RID;
input  [C_M_AXI_NOISY_INPUT_RUSER_WIDTH - 1 : 0] m_axi_noisy_input_RUSER;
input  [1:0] m_axi_noisy_input_RRESP;
input   m_axi_noisy_input_BVALID;
output   m_axi_noisy_input_BREADY;
input  [1:0] m_axi_noisy_input_BRESP;
input  [C_M_AXI_NOISY_INPUT_ID_WIDTH - 1 : 0] m_axi_noisy_input_BID;
input  [C_M_AXI_NOISY_INPUT_BUSER_WIDTH - 1 : 0] m_axi_noisy_input_BUSER;
output   m_axi_soft_dec_out_AWVALID;
input   m_axi_soft_dec_out_AWREADY;
output  [C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH - 1 : 0] m_axi_soft_dec_out_AWADDR;
output  [C_M_AXI_SOFT_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_soft_dec_out_AWID;
output  [7:0] m_axi_soft_dec_out_AWLEN;
output  [2:0] m_axi_soft_dec_out_AWSIZE;
output  [1:0] m_axi_soft_dec_out_AWBURST;
output  [1:0] m_axi_soft_dec_out_AWLOCK;
output  [3:0] m_axi_soft_dec_out_AWCACHE;
output  [2:0] m_axi_soft_dec_out_AWPROT;
output  [3:0] m_axi_soft_dec_out_AWQOS;
output  [3:0] m_axi_soft_dec_out_AWREGION;
output  [C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH - 1 : 0] m_axi_soft_dec_out_AWUSER;
output   m_axi_soft_dec_out_WVALID;
input   m_axi_soft_dec_out_WREADY;
output  [C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH - 1 : 0] m_axi_soft_dec_out_WDATA;
output  [C_M_AXI_SOFT_DEC_OUT_WSTRB_WIDTH - 1 : 0] m_axi_soft_dec_out_WSTRB;
output   m_axi_soft_dec_out_WLAST;
output  [C_M_AXI_SOFT_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_soft_dec_out_WID;
output  [C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH - 1 : 0] m_axi_soft_dec_out_WUSER;
output   m_axi_soft_dec_out_ARVALID;
input   m_axi_soft_dec_out_ARREADY;
output  [C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH - 1 : 0] m_axi_soft_dec_out_ARADDR;
output  [C_M_AXI_SOFT_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_soft_dec_out_ARID;
output  [7:0] m_axi_soft_dec_out_ARLEN;
output  [2:0] m_axi_soft_dec_out_ARSIZE;
output  [1:0] m_axi_soft_dec_out_ARBURST;
output  [1:0] m_axi_soft_dec_out_ARLOCK;
output  [3:0] m_axi_soft_dec_out_ARCACHE;
output  [2:0] m_axi_soft_dec_out_ARPROT;
output  [3:0] m_axi_soft_dec_out_ARQOS;
output  [3:0] m_axi_soft_dec_out_ARREGION;
output  [C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH - 1 : 0] m_axi_soft_dec_out_ARUSER;
input   m_axi_soft_dec_out_RVALID;
output   m_axi_soft_dec_out_RREADY;
input  [C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH - 1 : 0] m_axi_soft_dec_out_RDATA;
input   m_axi_soft_dec_out_RLAST;
input  [C_M_AXI_SOFT_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_soft_dec_out_RID;
input  [C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH - 1 : 0] m_axi_soft_dec_out_RUSER;
input  [1:0] m_axi_soft_dec_out_RRESP;
input   m_axi_soft_dec_out_BVALID;
output   m_axi_soft_dec_out_BREADY;
input  [1:0] m_axi_soft_dec_out_BRESP;
input  [C_M_AXI_SOFT_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_soft_dec_out_BID;
input  [C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH - 1 : 0] m_axi_soft_dec_out_BUSER;
output   m_axi_hard_dec_out_AWVALID;
input   m_axi_hard_dec_out_AWREADY;
output  [C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH - 1 : 0] m_axi_hard_dec_out_AWADDR;
output  [C_M_AXI_HARD_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_hard_dec_out_AWID;
output  [7:0] m_axi_hard_dec_out_AWLEN;
output  [2:0] m_axi_hard_dec_out_AWSIZE;
output  [1:0] m_axi_hard_dec_out_AWBURST;
output  [1:0] m_axi_hard_dec_out_AWLOCK;
output  [3:0] m_axi_hard_dec_out_AWCACHE;
output  [2:0] m_axi_hard_dec_out_AWPROT;
output  [3:0] m_axi_hard_dec_out_AWQOS;
output  [3:0] m_axi_hard_dec_out_AWREGION;
output  [C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH - 1 : 0] m_axi_hard_dec_out_AWUSER;
output   m_axi_hard_dec_out_WVALID;
input   m_axi_hard_dec_out_WREADY;
output  [C_M_AXI_HARD_DEC_OUT_DATA_WIDTH - 1 : 0] m_axi_hard_dec_out_WDATA;
output  [C_M_AXI_HARD_DEC_OUT_WSTRB_WIDTH - 1 : 0] m_axi_hard_dec_out_WSTRB;
output   m_axi_hard_dec_out_WLAST;
output  [C_M_AXI_HARD_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_hard_dec_out_WID;
output  [C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH - 1 : 0] m_axi_hard_dec_out_WUSER;
output   m_axi_hard_dec_out_ARVALID;
input   m_axi_hard_dec_out_ARREADY;
output  [C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH - 1 : 0] m_axi_hard_dec_out_ARADDR;
output  [C_M_AXI_HARD_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_hard_dec_out_ARID;
output  [7:0] m_axi_hard_dec_out_ARLEN;
output  [2:0] m_axi_hard_dec_out_ARSIZE;
output  [1:0] m_axi_hard_dec_out_ARBURST;
output  [1:0] m_axi_hard_dec_out_ARLOCK;
output  [3:0] m_axi_hard_dec_out_ARCACHE;
output  [2:0] m_axi_hard_dec_out_ARPROT;
output  [3:0] m_axi_hard_dec_out_ARQOS;
output  [3:0] m_axi_hard_dec_out_ARREGION;
output  [C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH - 1 : 0] m_axi_hard_dec_out_ARUSER;
input   m_axi_hard_dec_out_RVALID;
output   m_axi_hard_dec_out_RREADY;
input  [C_M_AXI_HARD_DEC_OUT_DATA_WIDTH - 1 : 0] m_axi_hard_dec_out_RDATA;
input   m_axi_hard_dec_out_RLAST;
input  [C_M_AXI_HARD_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_hard_dec_out_RID;
input  [C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH - 1 : 0] m_axi_hard_dec_out_RUSER;
input  [1:0] m_axi_hard_dec_out_RRESP;
input   m_axi_hard_dec_out_BVALID;
output   m_axi_hard_dec_out_BREADY;
input  [1:0] m_axi_hard_dec_out_BRESP;
input  [C_M_AXI_HARD_DEC_OUT_ID_WIDTH - 1 : 0] m_axi_hard_dec_out_BID;
input  [C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH - 1 : 0] m_axi_hard_dec_out_BUSER;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [4:0] H_proto_shift_address0;
reg    H_proto_shift_ce0;
wire   [7:0] H_proto_shift_q0;
reg   [9:0] var2chk_shift_idx_0_1;
reg   [9:0] var2chk_shift_idx_0_2;
reg   [9:0] var2chk_shift_idx_0_3;
reg   [9:0] var2chk_shift_idx_0_4;
reg   [9:0] var2chk_shift_idx_0_5;
reg   [9:0] var2chk_shift_idx_0_s;
reg   [9:0] var2chk_shift_idx_1_1;
reg   [9:0] var2chk_shift_idx_1_2;
reg   [9:0] var2chk_shift_idx_1_3;
reg   [9:0] var2chk_shift_idx_1_4;
reg   [9:0] var2chk_shift_idx_1_5;
reg   [9:0] var2chk_shift_idx_1_s;
reg   [9:0] var2chk_shift_idx_2_1;
reg   [9:0] var2chk_shift_idx_2_2;
reg   [9:0] var2chk_shift_idx_2_3;
reg   [9:0] var2chk_shift_idx_2_4;
reg   [9:0] var2chk_shift_idx_2_5;
reg   [9:0] var2chk_shift_idx_2_s;
reg   [7:0] chk2var_shift_idx_1_s;
reg   [7:0] chk2var_shift_idx_2_s;
reg   [7:0] chk2var_shift_idx_0_s;
reg   [7:0] chk2var_shift_idx_1_1;
reg   [7:0] chk2var_shift_idx_2_1;
reg   [7:0] chk2var_shift_idx_0_1;
reg   [7:0] chk2var_shift_idx_1_2;
reg   [7:0] chk2var_shift_idx_2_2;
reg   [7:0] chk2var_shift_idx_0_2;
reg   [7:0] chk2var_shift_idx_1_3;
reg   [7:0] chk2var_shift_idx_2_3;
reg   [7:0] chk2var_shift_idx_0_3;
reg   [7:0] chk2var_shift_idx_1_4;
reg   [7:0] chk2var_shift_idx_2_4;
reg   [7:0] chk2var_shift_idx_0_4;
reg   [7:0] chk2var_shift_idx_1_5;
reg   [7:0] chk2var_shift_idx_2_5;
reg   [7:0] chk2var_shift_idx_0_5;
reg    noisy_input_blk_n_AR;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] tmp_2_fu_3706_p2;
reg    noisy_input_blk_n_R;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_9_fu_3729_p2;
reg    soft_dec_out_blk_n_AW;
wire   [0:0] ap_CS_fsm_state69;
wire   [0:0] tmp_38_fu_8458_p2;
reg    soft_dec_out_blk_n_W;
wire   [0:0] ap_CS_fsm_state72;
reg    soft_dec_out_blk_n_B;
wire   [0:0] ap_CS_fsm_state76;
reg    hard_dec_out_blk_n_AW;
wire   [0:0] ap_CS_fsm_state61;
wire   [0:0] tmp_36_fu_8385_p2;
reg    hard_dec_out_blk_n_W;
wire   [0:0] ap_CS_fsm_state64;
reg    hard_dec_out_blk_n_B;
wire   [0:0] ap_CS_fsm_state68;
wire    noisy_input_AWREADY;
wire    noisy_input_WREADY;
reg    noisy_input_ARVALID;
wire    noisy_input_ARREADY;
wire   [31:0] noisy_input_ARADDR;
wire    noisy_input_RVALID;
reg    noisy_input_RREADY;
wire   [31:0] noisy_input_RDATA;
wire    noisy_input_RLAST;
wire   [0:0] noisy_input_RID;
wire   [0:0] noisy_input_RUSER;
wire   [1:0] noisy_input_RRESP;
wire    noisy_input_BVALID;
wire   [1:0] noisy_input_BRESP;
wire   [0:0] noisy_input_BID;
wire   [0:0] noisy_input_BUSER;
reg    soft_dec_out_AWVALID;
wire    soft_dec_out_AWREADY;
wire   [31:0] soft_dec_out_AWADDR;
reg    soft_dec_out_WVALID;
wire    soft_dec_out_WREADY;
wire    soft_dec_out_ARREADY;
wire    soft_dec_out_RVALID;
wire   [31:0] soft_dec_out_RDATA;
wire    soft_dec_out_RLAST;
wire   [0:0] soft_dec_out_RID;
wire   [0:0] soft_dec_out_RUSER;
wire   [1:0] soft_dec_out_RRESP;
wire    soft_dec_out_BVALID;
reg    soft_dec_out_BREADY;
wire   [1:0] soft_dec_out_BRESP;
wire   [0:0] soft_dec_out_BID;
wire   [0:0] soft_dec_out_BUSER;
reg    hard_dec_out_AWVALID;
wire    hard_dec_out_AWREADY;
wire   [31:0] hard_dec_out_AWADDR;
reg    hard_dec_out_WVALID;
wire    hard_dec_out_WREADY;
wire   [31:0] hard_dec_out_WDATA;
wire    hard_dec_out_ARREADY;
wire    hard_dec_out_RVALID;
wire   [31:0] hard_dec_out_RDATA;
wire    hard_dec_out_RLAST;
wire   [0:0] hard_dec_out_RID;
wire   [0:0] hard_dec_out_RUSER;
wire   [1:0] hard_dec_out_RRESP;
wire    hard_dec_out_BVALID;
reg    hard_dec_out_BREADY;
wire   [1:0] hard_dec_out_BRESP;
wire   [0:0] hard_dec_out_BID;
wire   [0:0] hard_dec_out_BUSER;
reg   [7:0] i_assign_2_reg_2289;
reg   [7:0] ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [7:0] ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289;
reg   [7:0] ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289;
reg   [7:0] ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;
reg   [7:0] i_assign_1_reg_2301;
wire   [31:0] llr_vec_0_q0;
reg   [31:0] reg_3228;
wire   [0:0] ap_CS_fsm_state28;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] tmp_20_reg_9660;
wire   [31:0] llr_vec_1_q0;
reg   [31:0] reg_3236;
wire   [31:0] llr_vec_2_q0;
reg   [31:0] reg_3244;
wire   [31:0] llr_vec_3_q0;
reg   [31:0] reg_3252;
wire   [31:0] llr_vec_4_q0;
reg   [31:0] reg_3260;
wire   [31:0] llr_vec_5_q0;
reg   [31:0] reg_3268;
wire   [31:0] chk2var_0_0_dram_q0;
reg   [31:0] reg_3276;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3276;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3276;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3276;
wire   [0:0] ap_CS_fsm_state49;
wire   [31:0] chk2var_0_1_dram_q0;
reg   [31:0] reg_3283;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3283;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3283;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3283;
wire   [31:0] chk2var_0_2_dram_q0;
reg   [31:0] reg_3290;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3290;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3290;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3290;
wire   [31:0] chk2var_0_3_dram_q0;
reg   [31:0] reg_3297;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3297;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3297;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3297;
wire   [31:0] chk2var_0_4_dram_q0;
reg   [31:0] reg_3304;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3304;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3304;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3304;
wire   [31:0] chk2var_0_5_dram_q0;
reg   [31:0] reg_3311;
reg   [31:0] ap_pipeline_reg_pp1_iter2_reg_3311;
reg   [31:0] ap_pipeline_reg_pp1_iter3_reg_3311;
reg   [31:0] ap_pipeline_reg_pp1_iter4_reg_3311;
wire   [1:0] idx_1_fu_3324_p2;
reg   [1:0] idx_1_reg_8524;
wire   [0:0] ap_CS_fsm_state2;
wire   [5:0] tmp_5_fu_3354_p2;
reg   [5:0] tmp_5_reg_8529;
wire   [0:0] tmp_s_fu_3318_p2;
wire   [2:0] jdx_8_fu_3366_p2;
reg   [2:0] jdx_8_reg_8537;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] tmp_3_fu_3360_p2;
wire   [9:0] next_mul_fu_3700_p2;
reg   [9:0] next_mul_reg_8547;
reg    ap_sig_ioackin_noisy_input_ARREADY;
wire   [2:0] idx_3_fu_3712_p2;
reg   [2:0] idx_3_reg_8555;
wire   [7:0] jdx_6_fu_3735_p2;
reg   [7:0] jdx_6_reg_8579;
reg   [31:0] noisy_input_addr_rea_reg_8584;
reg   [7:0] noisy_input_vec_0_ad_reg_8594;
reg   [7:0] noisy_input_vec_1_ad_reg_8599;
reg   [7:0] noisy_input_vec_2_ad_reg_8604;
reg   [7:0] noisy_input_vec_3_ad_reg_8609;
reg   [7:0] noisy_input_vec_4_ad_reg_8614;
reg   [7:0] noisy_input_vec_5_ad_reg_8619;
wire   [7:0] jdx_3_fu_3757_p2;
reg   [7:0] jdx_3_reg_8627;
wire   [0:0] ap_CS_fsm_state14;
wire   [63:0] tmp_7_fu_3763_p1;
reg   [63:0] tmp_7_reg_8632;
wire   [0:0] tmp_8_fu_3751_p2;
wire   [31:0] noisy_input_vec_0_q0;
reg   [31:0] noisy_input_vec_0_lo_reg_8672;
wire   [0:0] ap_CS_fsm_state15;
wire   [31:0] noisy_input_vec_1_q0;
reg   [31:0] noisy_input_vec_1_lo_reg_8677;
wire   [31:0] noisy_input_vec_2_q0;
reg   [31:0] noisy_input_vec_2_lo_reg_8682;
wire   [31:0] noisy_input_vec_3_q0;
reg   [31:0] noisy_input_vec_3_lo_reg_8687;
wire   [31:0] noisy_input_vec_4_q0;
reg   [31:0] noisy_input_vec_4_lo_reg_8692;
wire   [31:0] noisy_input_vec_5_q0;
reg   [31:0] noisy_input_vec_5_lo_reg_8697;
wire   [31:0] grp_fu_3060_p2;
reg   [31:0] tmp_10_reg_8702;
wire   [0:0] ap_CS_fsm_state17;
wire   [31:0] grp_fu_3065_p2;
reg   [31:0] tmp_32_1_reg_8707;
wire   [31:0] grp_fu_3070_p2;
reg   [31:0] tmp_32_2_reg_8712;
wire   [31:0] grp_fu_3075_p2;
reg   [31:0] tmp_32_3_reg_8717;
wire   [31:0] grp_fu_3080_p2;
reg   [31:0] tmp_32_4_reg_8722;
wire   [31:0] grp_fu_3085_p2;
reg   [31:0] tmp_32_5_reg_8727;
wire   [31:0] grp_fu_3090_p2;
reg   [31:0] tmp_11_reg_8732;
wire   [0:0] ap_CS_fsm_state25;
wire   [31:0] grp_fu_3094_p2;
reg   [31:0] tmp_33_1_reg_8737;
wire   [31:0] grp_fu_3098_p2;
reg   [31:0] tmp_33_2_reg_8742;
wire   [31:0] grp_fu_3102_p2;
reg   [31:0] tmp_33_3_reg_8747;
wire   [31:0] grp_fu_3106_p2;
reg   [31:0] tmp_33_4_reg_8752;
wire   [31:0] grp_fu_3110_p2;
reg   [31:0] tmp_33_5_reg_8757;
wire   [7:0] idx_4_fu_3779_p2;
reg   [7:0] idx_4_reg_8765;
wire   [0:0] ap_CS_fsm_state27;
wire   [0:0] tmp_13_fu_3773_p2;
wire   [8:0] tmp_42_fu_3799_p1;
reg   [8:0] tmp_42_reg_8800;
wire   [8:0] tmp_46_fu_3807_p1;
reg   [8:0] tmp_46_reg_8805;
wire   [8:0] tmp_47_fu_3815_p1;
reg   [8:0] tmp_47_reg_8810;
wire   [8:0] tmp_49_fu_3823_p1;
reg   [8:0] tmp_49_reg_8815;
wire   [8:0] tmp_54_fu_3831_p1;
reg   [8:0] tmp_54_reg_8820;
wire   [8:0] tmp_59_fu_3839_p1;
reg   [8:0] tmp_59_reg_8825;
wire   [8:0] tmp_64_fu_3847_p1;
reg   [8:0] tmp_64_reg_8830;
wire   [8:0] tmp_69_fu_3855_p1;
reg   [8:0] tmp_69_reg_8835;
wire   [8:0] tmp_78_fu_3863_p1;
reg   [8:0] tmp_78_reg_8840;
wire   [8:0] tmp_80_fu_3871_p1;
reg   [8:0] tmp_80_reg_8845;
wire   [8:0] tmp_85_fu_3879_p1;
reg   [8:0] tmp_85_reg_8850;
wire   [8:0] tmp_90_fu_3887_p1;
reg   [8:0] tmp_90_reg_8855;
wire   [8:0] tmp_98_fu_3895_p1;
reg   [8:0] tmp_98_reg_8860;
wire   [8:0] tmp_103_fu_3903_p1;
reg   [8:0] tmp_103_reg_8865;
wire   [8:0] tmp_110_fu_3911_p1;
reg   [8:0] tmp_110_reg_8870;
wire   [8:0] tmp_115_fu_3919_p1;
reg   [8:0] tmp_115_reg_8875;
wire   [8:0] tmp_120_fu_3927_p1;
reg   [8:0] tmp_120_reg_8880;
wire   [8:0] tmp_121_fu_3935_p1;
reg   [8:0] tmp_121_reg_8885;
wire   [8:0] extLd1_fu_3943_p1;
reg   [8:0] extLd1_reg_8890;
wire   [8:0] extLd2_fu_3951_p1;
reg   [8:0] extLd2_reg_8895;
wire   [8:0] extLd_fu_3959_p1;
reg   [8:0] extLd_reg_8900;
wire   [8:0] extLd3_fu_3967_p1;
reg   [8:0] extLd3_reg_8906;
wire   [8:0] extLd4_fu_3975_p1;
reg   [8:0] extLd4_reg_8911;
wire   [8:0] extLd5_fu_3983_p1;
reg   [8:0] extLd5_reg_8916;
wire   [8:0] extLd6_fu_3991_p1;
reg   [8:0] extLd6_reg_8922;
wire   [8:0] extLd7_fu_3999_p1;
reg   [8:0] extLd7_reg_8927;
wire   [8:0] extLd8_fu_4007_p1;
reg   [8:0] extLd8_reg_8932;
wire   [8:0] extLd9_fu_4015_p1;
reg   [8:0] extLd9_reg_8938;
wire   [8:0] extLd10_fu_4023_p1;
reg   [8:0] extLd10_reg_8943;
wire   [8:0] extLd11_fu_4031_p1;
reg   [8:0] extLd11_reg_8948;
wire   [8:0] extLd12_fu_4039_p1;
reg   [8:0] extLd12_reg_8954;
wire   [8:0] extLd13_fu_4047_p1;
reg   [8:0] extLd13_reg_8959;
wire   [8:0] extLd14_fu_4055_p1;
reg   [8:0] extLd14_reg_8964;
wire   [8:0] extLd15_fu_4063_p1;
reg   [8:0] extLd15_reg_8970;
wire   [8:0] extLd16_fu_4071_p1;
reg   [8:0] extLd16_reg_8975;
wire   [8:0] extLd17_fu_4079_p1;
reg   [8:0] extLd17_reg_8980;
wire   [1:0] jdx_4_fu_4089_p2;
wire   [0:0] ap_CS_fsm_state29;
wire   [0:0] tmp_15_fu_4095_p2;
reg   [0:0] tmp_15_reg_8994;
wire   [0:0] ap_CS_fsm_state30;
wire   [4:0] n_iter_1_fu_4101_p2;
reg   [4:0] n_iter_1_reg_8998;
wire   [0:0] tmp_17_fu_4107_p2;
reg   [0:0] tmp_17_reg_9003;
wire   [7:0] idx_15_fu_4113_p2;
reg   [7:0] idx_15_reg_9007;
reg    ap_enable_reg_pp0_iter0;
wire   [30:0] tmp_122_fu_4739_p1;
reg   [30:0] tmp_122_reg_9102;
wire   [30:0] tmp_123_fu_4747_p1;
reg   [30:0] tmp_123_reg_9107;
wire   [30:0] tmp_124_fu_4755_p1;
reg   [30:0] tmp_124_reg_9112;
wire   [30:0] tmp_126_fu_4763_p1;
reg   [30:0] tmp_126_reg_9117;
wire   [30:0] tmp_131_fu_4771_p1;
reg   [30:0] tmp_131_reg_9122;
wire   [0:0] sign_product_fu_4983_p2;
reg   [0:0] sign_product_reg_9127;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_reg_9127;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_reg_9127;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_reg_9127;
wire   [30:0] tmp_158_fu_4993_p1;
reg   [30:0] tmp_158_reg_9131;
wire   [0:0] sign_product_0_1_fu_5053_p2;
reg   [0:0] sign_product_0_1_reg_9136;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136;
wire   [0:0] sign_product_0_2_fu_5077_p2;
reg   [0:0] sign_product_0_2_reg_9140;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140;
wire   [0:0] sign_product_0_3_fu_5089_p2;
reg   [0:0] sign_product_0_3_reg_9144;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144;
wire   [0:0] sign_product_0_4_fu_5101_p2;
reg   [0:0] sign_product_0_4_reg_9148;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148;
wire   [0:0] sign_product_0_5_fu_5113_p2;
reg   [0:0] sign_product_0_5_reg_9152;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152;
wire   [30:0] tmp_222_fu_5123_p1;
reg   [30:0] tmp_222_reg_9156;
wire   [30:0] tmp_223_fu_5131_p1;
reg   [30:0] tmp_223_reg_9161;
wire   [30:0] tmp_224_fu_5139_p1;
reg   [30:0] tmp_224_reg_9166;
wire   [30:0] tmp_225_fu_5147_p1;
reg   [30:0] tmp_225_reg_9171;
wire   [30:0] tmp_226_fu_5155_p1;
reg   [30:0] tmp_226_reg_9176;
wire   [0:0] sign_product_1_fu_5367_p2;
reg   [0:0] sign_product_1_reg_9181;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181;
wire   [30:0] tmp_232_fu_5377_p1;
reg   [30:0] tmp_232_reg_9185;
wire   [0:0] sign_product_1_1_fu_5437_p2;
reg   [0:0] sign_product_1_1_reg_9190;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190;
wire   [0:0] sign_product_1_2_fu_5461_p2;
reg   [0:0] sign_product_1_2_reg_9194;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194;
wire   [0:0] sign_product_1_3_fu_5473_p2;
reg   [0:0] sign_product_1_3_reg_9198;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198;
wire   [0:0] sign_product_1_4_fu_5485_p2;
reg   [0:0] sign_product_1_4_reg_9202;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202;
wire   [0:0] sign_product_1_5_fu_5497_p2;
reg   [0:0] sign_product_1_5_reg_9206;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206;
wire   [30:0] tmp_236_fu_5507_p1;
reg   [30:0] tmp_236_reg_9210;
wire   [30:0] tmp_237_fu_5515_p1;
reg   [30:0] tmp_237_reg_9215;
wire   [30:0] tmp_238_fu_5523_p1;
reg   [30:0] tmp_238_reg_9220;
wire   [30:0] tmp_239_fu_5531_p1;
reg   [30:0] tmp_239_reg_9225;
wire   [30:0] tmp_240_fu_5539_p1;
reg   [30:0] tmp_240_reg_9230;
wire   [0:0] sign_product_2_fu_5751_p2;
reg   [0:0] sign_product_2_reg_9235;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235;
wire   [30:0] tmp_246_fu_5761_p1;
reg   [30:0] tmp_246_reg_9239;
wire   [0:0] sign_product_2_1_fu_5821_p2;
reg   [0:0] sign_product_2_1_reg_9244;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244;
wire   [0:0] sign_product_2_2_fu_5845_p2;
reg   [0:0] sign_product_2_2_reg_9248;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248;
wire   [0:0] sign_product_2_3_fu_5857_p2;
reg   [0:0] sign_product_2_3_reg_9252;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252;
wire   [0:0] sign_product_2_4_fu_5869_p2;
reg   [0:0] sign_product_2_4_reg_9256;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256;
wire   [0:0] sign_product_2_5_fu_5881_p2;
reg   [0:0] sign_product_2_5_reg_9260;
reg   [0:0] ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260;
reg   [0:0] ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260;
reg   [0:0] ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260;
wire   [31:0] x_assign_s_fu_5894_p1;
reg   [31:0] x_assign_s_reg_9264;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264;
wire   [31:0] y_assign_9_fu_5907_p1;
reg   [31:0] y_assign_9_reg_9269;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269;
wire   [31:0] x_assign_1_fminf_fu_2448_ap_return;
reg   [31:0] x_assign_1_reg_9274;
wire   [31:0] x_assign_2_fu_5920_p1;
reg   [31:0] x_assign_2_reg_9280;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280;
wire   [31:0] y_assign_s_fu_5933_p1;
reg   [31:0] y_assign_s_reg_9285;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285;
wire   [31:0] y_assign_fminf_fu_2454_ap_return;
reg   [31:0] y_assign_reg_9290;
wire   [31:0] y_assign_1_fu_5946_p1;
reg   [31:0] y_assign_1_reg_9296;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296;
wire   [31:0] x_assign_3_fminf_fu_2460_ap_return;
reg   [31:0] x_assign_3_reg_9301;
wire   [31:0] y_assign_2_fminf_fu_2466_ap_return;
reg   [31:0] y_assign_2_reg_9307;
wire   [31:0] y_assign_3_fu_5959_p1;
reg   [31:0] y_assign_3_reg_9313;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313;
wire   [31:0] y_assign_4_fminf_fu_2472_ap_return;
reg   [31:0] y_assign_4_reg_9318;
wire   [31:0] y_assign_5_fminf_fu_2478_ap_return;
reg   [31:0] y_assign_5_reg_9324;
wire   [31:0] x_assign_10_fu_5972_p1;
reg   [31:0] x_assign_10_reg_9330;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330;
wire   [31:0] y_assign_6_fu_5985_p1;
reg   [31:0] y_assign_6_reg_9335;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335;
wire   [31:0] x_assign_11_fminf_fu_2484_ap_return;
reg   [31:0] x_assign_11_reg_9340;
wire   [31:0] x_assign_12_fu_5998_p1;
reg   [31:0] x_assign_12_reg_9346;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346;
wire   [31:0] y_assign_7_fu_6011_p1;
reg   [31:0] y_assign_7_reg_9351;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351;
wire   [31:0] y_assign_8_fminf_fu_2490_ap_return;
reg   [31:0] y_assign_8_reg_9356;
wire   [31:0] y_assign_10_fu_6024_p1;
reg   [31:0] y_assign_10_reg_9362;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362;
wire   [31:0] x_assign_14_fminf_fu_2496_ap_return;
reg   [31:0] x_assign_14_reg_9367;
wire   [31:0] y_assign_11_fminf_fu_2502_ap_return;
reg   [31:0] y_assign_11_reg_9373;
wire   [31:0] y_assign_12_fu_6037_p1;
reg   [31:0] y_assign_12_reg_9379;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379;
wire   [31:0] y_assign_13_fminf_fu_2508_ap_return;
reg   [31:0] y_assign_13_reg_9384;
wire   [31:0] y_assign_14_fminf_fu_2514_ap_return;
reg   [31:0] y_assign_14_reg_9390;
wire   [31:0] x_assign_20_fu_6050_p1;
reg   [31:0] x_assign_20_reg_9396;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396;
wire   [31:0] y_assign_15_fu_6063_p1;
reg   [31:0] y_assign_15_reg_9401;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401;
wire   [31:0] x_assign_21_fminf_fu_2520_ap_return;
reg   [31:0] x_assign_21_reg_9406;
wire   [31:0] x_assign_22_fu_6076_p1;
reg   [31:0] x_assign_22_reg_9412;
reg   [31:0] ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412;
wire   [31:0] y_assign_16_fu_6089_p1;
reg   [31:0] y_assign_16_reg_9417;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417;
wire   [31:0] y_assign_17_fminf_fu_2526_ap_return;
reg   [31:0] y_assign_17_reg_9422;
wire   [31:0] y_assign_18_fu_6102_p1;
reg   [31:0] y_assign_18_reg_9428;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428;
wire   [31:0] x_assign_24_fminf_fu_2532_ap_return;
reg   [31:0] x_assign_24_reg_9433;
wire   [31:0] y_assign_19_fminf_fu_2538_ap_return;
reg   [31:0] y_assign_19_reg_9439;
wire   [31:0] y_assign_20_fu_6115_p1;
reg   [31:0] y_assign_20_reg_9445;
reg   [31:0] ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445;
wire   [31:0] y_assign_21_fminf_fu_2544_ap_return;
reg   [31:0] y_assign_21_reg_9450;
wire   [31:0] y_assign_22_fminf_fu_2550_ap_return;
reg   [31:0] y_assign_22_reg_9456;
wire   [31:0] x_assign_6_fminf_fu_2556_ap_return;
reg   [31:0] x_assign_6_reg_9462;
wire   [31:0] x_assign_4_fminf_fu_2562_ap_return;
reg   [31:0] x_assign_4_reg_9467;
wire   [31:0] x_assign_5_fminf_fu_2568_ap_return;
reg   [31:0] x_assign_5_reg_9472;
wire   [31:0] x_assign_7_fminf_fu_2574_ap_return;
reg   [31:0] x_assign_7_reg_9477;
wire   [31:0] x_assign_8_fminf_fu_2580_ap_return;
reg   [31:0] x_assign_8_reg_9482;
wire   [31:0] x_assign_9_fminf_fu_2586_ap_return;
reg   [31:0] x_assign_9_reg_9487;
wire   [31:0] x_assign_13_fminf_fu_2592_ap_return;
reg   [31:0] x_assign_13_reg_9492;
wire   [31:0] x_assign_15_fminf_fu_2598_ap_return;
reg   [31:0] x_assign_15_reg_9497;
wire   [31:0] x_assign_16_fminf_fu_2604_ap_return;
reg   [31:0] x_assign_16_reg_9502;
wire   [31:0] x_assign_17_fminf_fu_2610_ap_return;
reg   [31:0] x_assign_17_reg_9507;
wire   [31:0] x_assign_18_fminf_fu_2616_ap_return;
reg   [31:0] x_assign_18_reg_9512;
wire   [31:0] x_assign_19_fminf_fu_2622_ap_return;
reg   [31:0] x_assign_19_reg_9517;
wire   [31:0] x_assign_23_fminf_fu_2628_ap_return;
reg   [31:0] x_assign_23_reg_9522;
wire   [31:0] x_assign_25_fminf_fu_2634_ap_return;
reg   [31:0] x_assign_25_reg_9527;
wire   [31:0] x_assign_26_fminf_fu_2640_ap_return;
reg   [31:0] x_assign_26_reg_9532;
wire   [31:0] x_assign_27_fminf_fu_2646_ap_return;
reg   [31:0] x_assign_27_reg_9537;
wire   [31:0] x_assign_28_fminf_fu_2652_ap_return;
reg   [31:0] x_assign_28_reg_9542;
wire   [31:0] x_assign_29_fminf_fu_2658_ap_return;
reg   [31:0] x_assign_29_reg_9547;
wire   [31:0] tmp_i_fminf_fu_2664_ap_return;
reg   [31:0] tmp_i_reg_9552;
wire   [31:0] tmp_i5_fminf_fu_2670_ap_return;
reg   [31:0] tmp_i5_reg_9558;
wire   [31:0] tmp_i8_fminf_fu_2676_ap_return;
reg   [31:0] tmp_i8_reg_9564;
wire   [31:0] tmp_i1_fminf_fu_2682_ap_return;
reg   [31:0] tmp_i1_reg_9570;
wire   [31:0] tmp_i2_fminf_fu_2688_ap_return;
reg   [31:0] tmp_i2_reg_9576;
wire   [31:0] tmp_i3_fminf_fu_2694_ap_return;
reg   [31:0] tmp_i3_reg_9582;
wire   [31:0] tmp_i4_fminf_fu_2700_ap_return;
reg   [31:0] tmp_i4_reg_9588;
wire   [31:0] tmp_i6_fminf_fu_2706_ap_return;
reg   [31:0] tmp_i6_reg_9594;
wire   [31:0] tmp_i7_fminf_fu_2712_ap_return;
reg   [31:0] tmp_i7_reg_9600;
wire   [31:0] tmp_i9_fminf_fu_2718_ap_return;
reg   [31:0] tmp_i9_reg_9606;
wire   [31:0] tmp_i10_fminf_fu_2724_ap_return;
reg   [31:0] tmp_i10_reg_9612;
wire   [31:0] tmp_i11_fminf_fu_2730_ap_return;
reg   [31:0] tmp_i11_reg_9618;
wire   [31:0] tmp_i12_fminf_fu_2736_ap_return;
reg   [31:0] tmp_i12_reg_9624;
wire   [31:0] tmp_i13_fminf_fu_2742_ap_return;
reg   [31:0] tmp_i13_reg_9630;
wire   [31:0] tmp_i14_fminf_fu_2748_ap_return;
reg   [31:0] tmp_i14_reg_9636;
wire   [31:0] tmp_i15_fminf_fu_2754_ap_return;
reg   [31:0] tmp_i15_reg_9642;
wire   [31:0] tmp_i16_fminf_fu_2760_ap_return;
reg   [31:0] tmp_i16_reg_9648;
wire   [31:0] tmp_i17_fminf_fu_2766_ap_return;
reg   [31:0] tmp_i17_reg_9654;
wire   [0:0] tmp_20_fu_6553_p2;
reg   [0:0] ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660;
reg   [0:0] ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660;
wire   [7:0] idx_5_fu_6559_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_22_fu_6569_p1;
reg   [63:0] tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669;
reg   [63:0] ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
wire   [31:0] chk2var_1_0_dram_q0;
reg   [31:0] chk2var_1_0_dram_l_reg_9811;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811;
wire   [31:0] chk2var_2_0_dram_q0;
reg   [31:0] chk2var_2_0_dram_l_reg_9817;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817;
wire   [31:0] chk2var_1_1_dram_q0;
reg   [31:0] chk2var_1_1_dram_l_reg_9823;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823;
wire   [31:0] chk2var_2_1_dram_q0;
reg   [31:0] chk2var_2_1_dram_l_reg_9829;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829;
wire   [31:0] chk2var_1_2_dram_q0;
reg   [31:0] chk2var_1_2_dram_l_reg_9835;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835;
wire   [31:0] chk2var_2_2_dram_q0;
reg   [31:0] chk2var_2_2_dram_l_reg_9841;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841;
wire   [31:0] chk2var_1_3_dram_q0;
reg   [31:0] chk2var_1_3_dram_l_reg_9847;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847;
wire   [31:0] chk2var_2_3_dram_q0;
reg   [31:0] chk2var_2_3_dram_l_reg_9853;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853;
wire   [31:0] chk2var_1_4_dram_q0;
reg   [31:0] chk2var_1_4_dram_l_reg_9859;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859;
wire   [31:0] chk2var_2_4_dram_q0;
reg   [31:0] chk2var_2_4_dram_l_reg_9865;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865;
wire   [31:0] chk2var_1_5_dram_q0;
reg   [31:0] chk2var_1_5_dram_l_reg_9871;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871;
wire   [31:0] chk2var_2_5_dram_q0;
reg   [31:0] chk2var_2_5_dram_l_reg_9877;
reg   [31:0] ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877;
reg   [31:0] ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877;
reg   [31:0] ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877;
wire   [31:0] grp_fu_2844_p2;
reg   [31:0] tmp_94_reg_9883;
reg    ap_enable_reg_pp1_iter4;
wire   [31:0] grp_fu_2850_p2;
reg   [31:0] tmp_94_0_1_reg_9888;
wire   [31:0] grp_fu_2856_p2;
reg   [31:0] tmp_94_0_2_reg_9893;
wire   [31:0] grp_fu_2862_p2;
reg   [31:0] tmp_94_1_reg_9898;
wire   [31:0] grp_fu_2868_p2;
reg   [31:0] tmp_94_1_1_reg_9903;
wire   [31:0] grp_fu_2874_p2;
reg   [31:0] tmp_94_1_2_reg_9908;
wire   [31:0] grp_fu_2880_p2;
reg   [31:0] tmp_94_2_reg_9913;
wire   [31:0] grp_fu_2886_p2;
reg   [31:0] tmp_94_2_1_reg_9918;
wire   [31:0] grp_fu_2892_p2;
reg   [31:0] tmp_94_2_2_reg_9923;
wire   [31:0] grp_fu_2898_p2;
reg   [31:0] tmp_94_3_reg_9928;
wire   [31:0] grp_fu_2904_p2;
reg   [31:0] tmp_94_3_1_reg_9933;
wire   [31:0] grp_fu_2910_p2;
reg   [31:0] tmp_94_3_2_reg_9938;
wire   [31:0] grp_fu_2916_p2;
reg   [31:0] tmp_94_4_reg_9943;
wire   [31:0] grp_fu_2922_p2;
reg   [31:0] tmp_94_4_1_reg_9948;
wire   [31:0] grp_fu_2928_p2;
reg   [31:0] tmp_94_4_2_reg_9953;
wire   [31:0] grp_fu_2934_p2;
reg   [31:0] tmp_94_5_reg_9958;
wire   [31:0] grp_fu_2940_p2;
reg   [31:0] tmp_94_5_1_reg_9963;
wire   [31:0] grp_fu_2946_p2;
reg   [31:0] tmp_94_5_2_reg_9968;
wire   [7:0] idx_6_fu_7201_p2;
reg   [7:0] idx_6_reg_9976;
wire   [0:0] ap_CS_fsm_state48;
wire   [63:0] tmp_24_fu_7207_p1;
reg   [63:0] tmp_24_reg_9981;
wire   [0:0] tmp_23_fu_7195_p2;
wire   [31:0] var2chk_0_0_dram_q0;
wire   [31:0] var2chk_0_1_dram_q0;
wire   [31:0] var2chk_0_2_dram_q0;
wire   [31:0] var2chk_0_3_dram_q0;
wire   [31:0] var2chk_0_4_dram_q0;
wire   [31:0] var2chk_0_5_dram_q0;
wire   [7:0] jdx_7_fu_7427_p2;
reg   [7:0] jdx_7_reg_10084;
wire   [0:0] ap_CS_fsm_state53;
wire   [63:0] tmp_29_fu_7433_p1;
reg   [63:0] tmp_29_reg_10089;
wire   [0:0] tmp_28_fu_7421_p2;
wire   [7:0] idx_10_fu_7707_p2;
wire   [0:0] ap_CS_fsm_state55;
wire   [8:0] idx_8_cast_fu_7720_p1;
reg   [8:0] idx_8_cast_reg_10137;
wire   [0:0] ap_CS_fsm_state56;
wire   [7:0] idx_11_fu_7730_p2;
reg   [7:0] idx_11_reg_10155;
wire   [0:0] tmp_32_fu_7724_p2;
reg   [7:0] syndrome_0_V_addr_1_reg_10195;
wire   [0:0] ap_CS_fsm_state57;
wire   [0:0] hard_dec_tmp_0_V_q0;
reg   [0:0] hard_dec_tmp_0_V_lo_reg_10200;
wire   [0:0] hard_dec_tmp_1_V_q0;
reg   [0:0] hard_dec_tmp_1_V_lo_reg_10205;
wire   [0:0] hard_dec_tmp_2_V_q0;
reg   [0:0] hard_dec_tmp_2_V_lo_reg_10210;
wire   [0:0] hard_dec_tmp_3_V_q0;
reg   [0:0] hard_dec_tmp_3_V_lo_reg_10215;
wire   [0:0] hard_dec_tmp_4_V_q0;
reg   [0:0] hard_dec_tmp_4_V_lo_reg_10220;
wire   [0:0] hard_dec_tmp_5_V_q0;
reg   [0:0] hard_dec_tmp_5_V_lo_reg_10225;
reg   [7:0] syndrome_1_V_addr_1_reg_10230;
wire   [0:0] hard_dec_tmp_3_V_q1;
reg   [0:0] hard_dec_tmp_3_V_lo_1_reg_10250;
reg   [7:0] syndrome_2_V_addr_1_reg_10265;
wire   [7:0] idx_12_fu_8348_p2;
reg   [7:0] idx_12_reg_10303;
wire   [0:0] ap_CS_fsm_state59;
wire   [0:0] tmp_34_fu_8342_p2;
wire   [0:0] done_V_2_fu_8373_p2;
wire   [0:0] ap_CS_fsm_state60;
wire   [9:0] next_mul8_fu_8379_p2;
reg   [9:0] next_mul8_reg_10328;
reg    ap_sig_ioackin_hard_dec_out_AWREADY;
wire   [2:0] idx_13_fu_8391_p2;
reg   [2:0] idx_13_reg_10336;
wire   [7:0] jdx_9_fu_8414_p2;
reg   [7:0] jdx_9_reg_10349;
wire   [0:0] ap_CS_fsm_state62;
wire   [0:0] tmp_39_fu_8408_p2;
wire   [0:0] tmp_156_fu_8430_p8;
reg   [0:0] tmp_156_reg_10384;
wire   [0:0] ap_CS_fsm_state63;
wire   [9:0] next_mul1_fu_8452_p2;
reg   [9:0] next_mul1_reg_10389;
reg    ap_sig_ioackin_soft_dec_out_AWREADY;
wire   [2:0] idx_14_fu_8464_p2;
reg   [2:0] idx_14_reg_10397;
wire   [7:0] jdx_10_fu_8487_p2;
reg   [7:0] jdx_10_reg_10410;
wire   [0:0] ap_CS_fsm_state70;
wire   [0:0] tmp_44_fu_8481_p2;
wire   [31:0] tmp_157_fu_8503_p8;
reg   [31:0] tmp_157_reg_10445;
wire   [0:0] ap_CS_fsm_state71;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
wire   [0:0] ap_CS_fsm_state37;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg   [7:0] noisy_input_vec_0_address0;
reg    noisy_input_vec_0_ce0;
reg    noisy_input_vec_0_we0;
reg   [7:0] noisy_input_vec_1_address0;
reg    noisy_input_vec_1_ce0;
reg    noisy_input_vec_1_we0;
reg   [7:0] noisy_input_vec_2_address0;
reg    noisy_input_vec_2_ce0;
reg    noisy_input_vec_2_we0;
reg   [7:0] noisy_input_vec_3_address0;
reg    noisy_input_vec_3_ce0;
reg    noisy_input_vec_3_we0;
reg   [7:0] noisy_input_vec_4_address0;
reg    noisy_input_vec_4_ce0;
reg    noisy_input_vec_4_we0;
reg   [7:0] noisy_input_vec_5_address0;
reg    noisy_input_vec_5_ce0;
reg    noisy_input_vec_5_we0;
reg   [7:0] llr_vec_0_address0;
reg    llr_vec_0_ce0;
reg    llr_vec_0_we0;
reg   [7:0] llr_vec_1_address0;
reg    llr_vec_1_ce0;
reg    llr_vec_1_we0;
reg   [7:0] llr_vec_2_address0;
reg    llr_vec_2_ce0;
reg    llr_vec_2_we0;
reg   [7:0] llr_vec_3_address0;
reg    llr_vec_3_ce0;
reg    llr_vec_3_we0;
reg   [7:0] llr_vec_4_address0;
reg    llr_vec_4_ce0;
reg    llr_vec_4_we0;
reg   [7:0] llr_vec_5_address0;
reg    llr_vec_5_ce0;
reg    llr_vec_5_we0;
reg   [7:0] chk2var_0_0_dram_address0;
reg    chk2var_0_0_dram_ce0;
reg    chk2var_0_0_dram_we0;
reg   [31:0] chk2var_0_0_dram_d0;
reg   [7:0] chk2var_0_1_dram_address0;
reg    chk2var_0_1_dram_ce0;
reg    chk2var_0_1_dram_we0;
reg   [31:0] chk2var_0_1_dram_d0;
reg   [7:0] chk2var_0_2_dram_address0;
reg    chk2var_0_2_dram_ce0;
reg    chk2var_0_2_dram_we0;
reg   [31:0] chk2var_0_2_dram_d0;
reg   [7:0] chk2var_0_3_dram_address0;
reg    chk2var_0_3_dram_ce0;
reg    chk2var_0_3_dram_we0;
reg   [31:0] chk2var_0_3_dram_d0;
reg   [7:0] chk2var_0_4_dram_address0;
reg    chk2var_0_4_dram_ce0;
reg    chk2var_0_4_dram_we0;
reg   [31:0] chk2var_0_4_dram_d0;
reg   [7:0] chk2var_0_5_dram_address0;
reg    chk2var_0_5_dram_ce0;
reg    chk2var_0_5_dram_we0;
reg   [31:0] chk2var_0_5_dram_d0;
reg   [7:0] chk2var_1_0_dram_address0;
reg    chk2var_1_0_dram_ce0;
reg    chk2var_1_0_dram_we0;
reg   [31:0] chk2var_1_0_dram_d0;
reg   [7:0] chk2var_1_1_dram_address0;
reg    chk2var_1_1_dram_ce0;
reg    chk2var_1_1_dram_we0;
reg   [31:0] chk2var_1_1_dram_d0;
reg   [7:0] chk2var_1_2_dram_address0;
reg    chk2var_1_2_dram_ce0;
reg    chk2var_1_2_dram_we0;
reg   [31:0] chk2var_1_2_dram_d0;
reg   [7:0] chk2var_1_3_dram_address0;
reg    chk2var_1_3_dram_ce0;
reg    chk2var_1_3_dram_we0;
reg   [31:0] chk2var_1_3_dram_d0;
reg   [7:0] chk2var_1_4_dram_address0;
reg    chk2var_1_4_dram_ce0;
reg    chk2var_1_4_dram_we0;
reg   [31:0] chk2var_1_4_dram_d0;
reg   [7:0] chk2var_1_5_dram_address0;
reg    chk2var_1_5_dram_ce0;
reg    chk2var_1_5_dram_we0;
reg   [31:0] chk2var_1_5_dram_d0;
reg   [7:0] chk2var_2_0_dram_address0;
reg    chk2var_2_0_dram_ce0;
reg    chk2var_2_0_dram_we0;
reg   [31:0] chk2var_2_0_dram_d0;
reg   [7:0] chk2var_2_1_dram_address0;
reg    chk2var_2_1_dram_ce0;
reg    chk2var_2_1_dram_we0;
reg   [31:0] chk2var_2_1_dram_d0;
reg   [7:0] chk2var_2_2_dram_address0;
reg    chk2var_2_2_dram_ce0;
reg    chk2var_2_2_dram_we0;
reg   [31:0] chk2var_2_2_dram_d0;
reg   [7:0] chk2var_2_3_dram_address0;
reg    chk2var_2_3_dram_ce0;
reg    chk2var_2_3_dram_we0;
reg   [31:0] chk2var_2_3_dram_d0;
reg   [7:0] chk2var_2_4_dram_address0;
reg    chk2var_2_4_dram_ce0;
reg    chk2var_2_4_dram_we0;
reg   [31:0] chk2var_2_4_dram_d0;
reg   [7:0] chk2var_2_5_dram_address0;
reg    chk2var_2_5_dram_ce0;
reg    chk2var_2_5_dram_we0;
reg   [31:0] chk2var_2_5_dram_d0;
reg   [7:0] var2chk_0_0_dram_address0;
reg    var2chk_0_0_dram_ce0;
reg    var2chk_0_0_dram_we0;
reg   [31:0] var2chk_0_0_dram_d0;
reg   [7:0] var2chk_0_1_dram_address0;
reg    var2chk_0_1_dram_ce0;
reg    var2chk_0_1_dram_we0;
reg   [31:0] var2chk_0_1_dram_d0;
reg   [7:0] var2chk_0_2_dram_address0;
reg    var2chk_0_2_dram_ce0;
reg    var2chk_0_2_dram_we0;
reg   [31:0] var2chk_0_2_dram_d0;
reg   [7:0] var2chk_0_3_dram_address0;
reg    var2chk_0_3_dram_ce0;
reg    var2chk_0_3_dram_we0;
reg   [31:0] var2chk_0_3_dram_d0;
reg   [7:0] var2chk_0_4_dram_address0;
reg    var2chk_0_4_dram_ce0;
reg    var2chk_0_4_dram_we0;
reg   [31:0] var2chk_0_4_dram_d0;
reg   [7:0] var2chk_0_5_dram_address0;
reg    var2chk_0_5_dram_ce0;
reg    var2chk_0_5_dram_we0;
reg   [31:0] var2chk_0_5_dram_d0;
reg   [7:0] var2chk_1_0_dram_address0;
reg    var2chk_1_0_dram_ce0;
reg    var2chk_1_0_dram_we0;
reg   [31:0] var2chk_1_0_dram_d0;
wire   [31:0] var2chk_1_0_dram_q0;
reg   [7:0] var2chk_1_1_dram_address0;
reg    var2chk_1_1_dram_ce0;
reg    var2chk_1_1_dram_we0;
reg   [31:0] var2chk_1_1_dram_d0;
wire   [31:0] var2chk_1_1_dram_q0;
reg   [7:0] var2chk_1_2_dram_address0;
reg    var2chk_1_2_dram_ce0;
reg    var2chk_1_2_dram_we0;
reg   [31:0] var2chk_1_2_dram_d0;
wire   [31:0] var2chk_1_2_dram_q0;
reg   [7:0] var2chk_1_3_dram_address0;
reg    var2chk_1_3_dram_ce0;
reg    var2chk_1_3_dram_we0;
reg   [31:0] var2chk_1_3_dram_d0;
wire   [31:0] var2chk_1_3_dram_q0;
reg   [7:0] var2chk_1_4_dram_address0;
reg    var2chk_1_4_dram_ce0;
reg    var2chk_1_4_dram_we0;
reg   [31:0] var2chk_1_4_dram_d0;
wire   [31:0] var2chk_1_4_dram_q0;
reg   [7:0] var2chk_1_5_dram_address0;
reg    var2chk_1_5_dram_ce0;
reg    var2chk_1_5_dram_we0;
reg   [31:0] var2chk_1_5_dram_d0;
wire   [31:0] var2chk_1_5_dram_q0;
reg   [7:0] var2chk_2_0_dram_address0;
reg    var2chk_2_0_dram_ce0;
reg    var2chk_2_0_dram_we0;
reg   [31:0] var2chk_2_0_dram_d0;
wire   [31:0] var2chk_2_0_dram_q0;
reg   [7:0] var2chk_2_1_dram_address0;
reg    var2chk_2_1_dram_ce0;
reg    var2chk_2_1_dram_we0;
reg   [31:0] var2chk_2_1_dram_d0;
wire   [31:0] var2chk_2_1_dram_q0;
reg   [7:0] var2chk_2_2_dram_address0;
reg    var2chk_2_2_dram_ce0;
reg    var2chk_2_2_dram_we0;
reg   [31:0] var2chk_2_2_dram_d0;
wire   [31:0] var2chk_2_2_dram_q0;
reg   [7:0] var2chk_2_3_dram_address0;
reg    var2chk_2_3_dram_ce0;
reg    var2chk_2_3_dram_we0;
reg   [31:0] var2chk_2_3_dram_d0;
wire   [31:0] var2chk_2_3_dram_q0;
reg   [7:0] var2chk_2_4_dram_address0;
reg    var2chk_2_4_dram_ce0;
reg    var2chk_2_4_dram_we0;
reg   [31:0] var2chk_2_4_dram_d0;
wire   [31:0] var2chk_2_4_dram_q0;
reg   [7:0] var2chk_2_5_dram_address0;
reg    var2chk_2_5_dram_ce0;
reg    var2chk_2_5_dram_we0;
reg   [31:0] var2chk_2_5_dram_d0;
wire   [31:0] var2chk_2_5_dram_q0;
reg   [7:0] soft_dec_tmp_0_address0;
reg    soft_dec_tmp_0_ce0;
reg    soft_dec_tmp_0_we0;
wire   [31:0] soft_dec_tmp_0_q0;
reg   [7:0] soft_dec_tmp_1_address0;
reg    soft_dec_tmp_1_ce0;
reg    soft_dec_tmp_1_we0;
wire   [31:0] soft_dec_tmp_1_q0;
reg   [7:0] soft_dec_tmp_2_address0;
reg    soft_dec_tmp_2_ce0;
reg    soft_dec_tmp_2_we0;
wire   [31:0] soft_dec_tmp_2_q0;
reg   [7:0] soft_dec_tmp_3_address0;
reg    soft_dec_tmp_3_ce0;
reg    soft_dec_tmp_3_we0;
wire   [31:0] soft_dec_tmp_3_q0;
reg   [7:0] soft_dec_tmp_4_address0;
reg    soft_dec_tmp_4_ce0;
reg    soft_dec_tmp_4_we0;
wire   [31:0] soft_dec_tmp_4_q0;
reg   [7:0] soft_dec_tmp_5_address0;
reg    soft_dec_tmp_5_ce0;
reg    soft_dec_tmp_5_we0;
wire   [31:0] soft_dec_tmp_5_q0;
reg   [7:0] hard_dec_tmp_0_V_address0;
reg    hard_dec_tmp_0_V_ce0;
reg    hard_dec_tmp_0_V_we0;
wire   [0:0] hard_dec_tmp_0_V_d0;
reg   [7:0] hard_dec_tmp_0_V_address1;
reg    hard_dec_tmp_0_V_ce1;
wire   [0:0] hard_dec_tmp_0_V_q1;
reg   [7:0] hard_dec_tmp_1_V_address0;
reg    hard_dec_tmp_1_V_ce0;
reg    hard_dec_tmp_1_V_we0;
wire   [0:0] hard_dec_tmp_1_V_d0;
reg   [7:0] hard_dec_tmp_1_V_address1;
reg    hard_dec_tmp_1_V_ce1;
wire   [0:0] hard_dec_tmp_1_V_q1;
reg   [7:0] hard_dec_tmp_2_V_address0;
reg    hard_dec_tmp_2_V_ce0;
reg    hard_dec_tmp_2_V_we0;
wire   [0:0] hard_dec_tmp_2_V_d0;
reg   [7:0] hard_dec_tmp_2_V_address1;
reg    hard_dec_tmp_2_V_ce1;
wire   [0:0] hard_dec_tmp_2_V_q1;
reg   [7:0] hard_dec_tmp_3_V_address0;
reg    hard_dec_tmp_3_V_ce0;
reg    hard_dec_tmp_3_V_we0;
wire   [0:0] hard_dec_tmp_3_V_d0;
reg   [7:0] hard_dec_tmp_3_V_address1;
reg    hard_dec_tmp_3_V_ce1;
reg   [7:0] hard_dec_tmp_4_V_address0;
reg    hard_dec_tmp_4_V_ce0;
reg    hard_dec_tmp_4_V_we0;
wire   [0:0] hard_dec_tmp_4_V_d0;
reg   [7:0] hard_dec_tmp_4_V_address1;
reg    hard_dec_tmp_4_V_ce1;
wire   [0:0] hard_dec_tmp_4_V_q1;
reg   [7:0] hard_dec_tmp_5_V_address0;
reg    hard_dec_tmp_5_V_ce0;
reg    hard_dec_tmp_5_V_we0;
wire   [0:0] hard_dec_tmp_5_V_d0;
reg   [7:0] hard_dec_tmp_5_V_address1;
reg    hard_dec_tmp_5_V_ce1;
wire   [0:0] hard_dec_tmp_5_V_q1;
reg   [7:0] syndrome_0_V_address0;
reg    syndrome_0_V_ce0;
reg    syndrome_0_V_we0;
reg   [0:0] syndrome_0_V_d0;
wire   [0:0] syndrome_0_V_q0;
reg   [7:0] syndrome_1_V_address0;
reg    syndrome_1_V_ce0;
reg    syndrome_1_V_we0;
reg   [0:0] syndrome_1_V_d0;
wire   [0:0] syndrome_1_V_q0;
reg   [7:0] syndrome_2_V_address0;
reg    syndrome_2_V_ce0;
reg    syndrome_2_V_we0;
reg   [0:0] syndrome_2_V_d0;
wire   [0:0] syndrome_2_V_q0;
wire   [7:0] StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0;
wire   [31:0] StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0;
wire   [7:0] StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0;
wire   [31:0] StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0;
wire   [7:0] StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0;
wire    StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0;
wire   [31:0] StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0;
wire   [7:0] StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0;
wire   [31:0] StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0;
wire   [7:0] StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0;
wire   [31:0] StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0;
wire   [7:0] StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0;
wire    StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0;
wire   [31:0] StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0;
wire   [7:0] StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0;
wire   [31:0] StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0;
wire   [7:0] StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0;
wire   [31:0] StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0;
wire   [7:0] StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0;
wire    StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0;
wire   [31:0] StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0;
wire   [7:0] StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0;
wire   [31:0] StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0;
wire   [7:0] StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0;
wire   [31:0] StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0;
wire   [7:0] StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0;
wire    StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0;
wire   [31:0] StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0;
wire   [7:0] StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0;
wire   [31:0] StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0;
wire   [7:0] StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0;
wire   [31:0] StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0;
wire   [7:0] StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0;
wire    StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0;
wire   [31:0] StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0;
wire   [7:0] StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0;
wire   [31:0] StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0;
wire   [7:0] StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0;
wire   [31:0] StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0;
wire   [7:0] StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0;
wire    StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0;
wire   [31:0] StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0;
reg   [1:0] idx_reg_2186;
reg   [2:0] jdx_reg_2198;
wire   [0:0] ap_CS_fsm_state4;
reg   [2:0] idx_0_i_reg_2210;
reg   [9:0] phi_mul_reg_2222;
reg   [7:0] jdx_0_i_reg_2233;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] ap_CS_fsm_state11;
reg   [7:0] jdx_1_reg_2244;
wire   [0:0] ap_CS_fsm_state26;
reg   [7:0] idx_2_reg_2255;
wire   [0:0] tmp_16_fu_4083_p2;
reg   [1:0] jdx_2_reg_2267;
reg   [4:0] n_iter_reg_2278;
wire   [0:0] p_1_phi_fu_2361_p4;
reg   [7:0] i_assign_2_phi_fu_2293_p4;
reg   [7:0] i_assign_reg_2312;
wire   [0:0] ap_CS_fsm_state52;
wire   [0:0] ap_CS_fsm_state47;
reg   [7:0] jdx_5_reg_2323;
wire   [0:0] ap_CS_fsm_state54;
reg   [7:0] idx_7_reg_2334;
wire   [0:0] tmp_30_fu_7701_p2;
reg   [7:0] idx_8_reg_2345;
wire   [0:0] ap_CS_fsm_state58;
reg   [0:0] p_1_reg_2357;
reg   [7:0] idx_9_reg_2369;
reg   [2:0] idx_0_i1_reg_2380;
reg   [9:0] phi_mul7_reg_2392;
reg   [7:0] jdx_0_i1_reg_2403;
reg    ap_sig_ioackin_hard_dec_out_WREADY;
reg   [2:0] idx_1_i_reg_2414;
reg   [9:0] phi_mul9_reg_2426;
reg   [7:0] jdx_1_i_reg_2437;
reg    ap_sig_ioackin_soft_dec_out_WREADY;
wire  signed [63:0] tmp_197_cast_fu_3381_p1;
wire   [63:0] tmp_12_fu_3741_p1;
wire   [63:0] tmp_14_fu_3785_p1;
wire   [63:0] tmp_76_fu_4152_p1;
wire   [63:0] tmp_76_0_0_1_fu_4186_p1;
wire   [63:0] tmp_76_0_0_2_fu_4220_p1;
wire   [63:0] tmp_76_0_0_3_fu_4254_p1;
wire   [63:0] tmp_76_0_0_4_fu_4288_p1;
wire   [63:0] tmp_76_0_1_4_fu_4322_p1;
wire   [63:0] tmp_76_1_fu_4356_p1;
wire   [63:0] tmp_76_1_0_1_fu_4390_p1;
wire   [63:0] tmp_76_1_0_2_fu_4424_p1;
wire   [63:0] tmp_76_1_0_3_fu_4458_p1;
wire   [63:0] tmp_76_1_0_4_fu_4492_p1;
wire   [63:0] tmp_76_1_1_4_fu_4526_p1;
wire   [63:0] tmp_76_2_fu_4560_p1;
wire   [63:0] tmp_76_2_0_1_fu_4594_p1;
wire   [63:0] tmp_76_2_0_2_fu_4628_p1;
wire   [63:0] tmp_76_2_0_3_fu_4662_p1;
wire   [63:0] tmp_76_2_0_4_fu_4696_p1;
wire   [63:0] tmp_76_2_1_4_fu_4730_p1;
wire   [63:0] tmp_77_fu_6121_p1;
wire   [63:0] tmp_74_fu_6140_p1;
wire   [63:0] tmp_86_0_1_fu_6145_p1;
wire   [63:0] tmp_84_0_1_fu_6164_p1;
wire   [63:0] tmp_86_0_2_fu_6169_p1;
wire   [63:0] tmp_84_0_2_fu_6188_p1;
wire   [63:0] tmp_86_0_3_fu_6193_p1;
wire   [63:0] tmp_84_0_3_fu_6212_p1;
wire   [63:0] tmp_86_0_4_fu_6217_p1;
wire   [63:0] tmp_84_0_4_fu_6236_p1;
wire   [63:0] tmp_86_0_5_fu_6241_p1;
wire   [63:0] tmp_84_0_5_fu_6260_p1;
wire   [63:0] tmp_86_1_fu_6265_p1;
wire   [63:0] tmp_84_1_fu_6284_p1;
wire   [63:0] tmp_86_1_1_fu_6289_p1;
wire   [63:0] tmp_84_1_1_fu_6308_p1;
wire   [63:0] tmp_86_1_2_fu_6313_p1;
wire   [63:0] tmp_84_1_2_fu_6332_p1;
wire   [63:0] tmp_86_1_3_fu_6337_p1;
wire   [63:0] tmp_84_1_3_fu_6356_p1;
wire   [63:0] tmp_86_1_4_fu_6361_p1;
wire   [63:0] tmp_84_1_4_fu_6380_p1;
wire   [63:0] tmp_86_1_5_fu_6385_p1;
wire   [63:0] tmp_84_1_5_fu_6404_p1;
wire   [63:0] tmp_86_2_fu_6409_p1;
wire   [63:0] tmp_84_2_fu_6428_p1;
wire   [63:0] tmp_86_2_1_fu_6433_p1;
wire   [63:0] tmp_84_2_1_fu_6452_p1;
wire   [63:0] tmp_86_2_2_fu_6457_p1;
wire   [63:0] tmp_84_2_2_fu_6476_p1;
wire   [63:0] tmp_86_2_3_fu_6481_p1;
wire   [63:0] tmp_84_2_3_fu_6500_p1;
wire   [63:0] tmp_86_2_4_fu_6505_p1;
wire   [63:0] tmp_84_2_4_fu_6524_p1;
wire   [63:0] tmp_86_2_5_fu_6529_p1;
wire   [63:0] tmp_84_2_5_fu_6548_p1;
wire   [63:0] tmp_93_fu_6608_p1;
wire   [63:0] tmp_93_0_0_1_fu_6642_p1;
wire   [63:0] tmp_93_0_1_1_fu_6676_p1;
wire   [63:0] tmp_93_1_fu_6710_p1;
wire   [63:0] tmp_93_1_0_1_fu_6744_p1;
wire   [63:0] tmp_93_1_1_1_fu_6778_p1;
wire   [63:0] tmp_93_2_fu_6812_p1;
wire   [63:0] tmp_93_2_0_1_fu_6846_p1;
wire   [63:0] tmp_93_2_1_1_fu_6880_p1;
wire   [63:0] tmp_93_3_fu_6914_p1;
wire   [63:0] tmp_93_3_0_1_fu_6948_p1;
wire   [63:0] tmp_93_3_1_1_fu_6982_p1;
wire   [63:0] tmp_93_4_fu_7016_p1;
wire   [63:0] tmp_93_4_0_1_fu_7050_p1;
wire   [63:0] tmp_93_4_1_1_fu_7084_p1;
wire   [63:0] tmp_93_5_fu_7118_p1;
wire   [63:0] tmp_93_5_0_1_fu_7152_p1;
wire   [63:0] tmp_93_5_1_1_fu_7186_p1;
wire   [63:0] tmp_26_fu_7246_p1;
wire   [63:0] tmp_56_1_fu_7280_p1;
wire   [63:0] tmp_56_2_fu_7314_p1;
wire   [63:0] tmp_56_3_fu_7348_p1;
wire   [63:0] tmp_56_4_fu_7382_p1;
wire   [63:0] tmp_56_5_fu_7416_p1;
wire   [63:0] tmp_31_fu_7713_p1;
wire   [63:0] tmp_109_fu_7766_p1;
wire   [63:0] tmp_109_0_1_fu_7797_p1;
wire   [63:0] tmp_109_0_2_fu_7829_p1;
wire   [63:0] tmp_109_0_3_fu_7860_p1;
wire   [63:0] tmp_109_0_4_fu_7891_p1;
wire   [63:0] tmp_109_0_5_fu_7922_p1;
wire   [63:0] tmp_33_fu_7927_p1;
wire   [63:0] tmp_109_1_fu_7964_p1;
wire   [63:0] tmp_109_1_1_fu_7995_p1;
wire   [63:0] tmp_109_1_2_fu_8024_p1;
wire   [63:0] tmp_109_1_4_fu_8053_p1;
wire   [63:0] tmp_109_1_5_fu_8082_p1;
wire   [63:0] tmp_109_2_fu_8113_p1;
wire   [63:0] tmp_109_2_1_fu_8142_p1;
wire   [63:0] tmp_109_2_2_fu_8173_p1;
wire   [63:0] tmp_109_2_3_fu_8204_p1;
wire   [63:0] tmp_109_2_5_fu_8233_p1;
wire   [63:0] tmp_35_fu_8354_p1;
wire   [63:0] tmp_41_fu_8420_p1;
wire   [63:0] tmp_45_fu_8493_p1;
wire   [63:0] tmp_18_fu_3718_p1;
wire   [63:0] tmp_234_fu_8397_p1;
wire   [63:0] tmp_235_fu_8470_p1;
reg    ap_reg_ioackin_noisy_input_ARREADY;
reg    ap_reg_ioackin_hard_dec_out_AWREADY;
reg    ap_reg_ioackin_hard_dec_out_WREADY;
reg    ap_reg_ioackin_soft_dec_out_AWREADY;
reg    ap_reg_ioackin_soft_dec_out_WREADY;
wire   [9:0] H_proto_shift_load_c_1_fu_3610_p1;
wire   [9:0] H_proto_shift_load_c_2_fu_3600_p1;
wire   [9:0] H_proto_shift_load_c_3_fu_3590_p1;
wire   [9:0] H_proto_shift_load_c_4_fu_3580_p1;
wire   [9:0] H_proto_shift_load_c_5_fu_3630_p1;
wire   [9:0] H_proto_shift_load_c_fu_3620_p1;
wire   [9:0] H_proto_shift_load_c_7_fu_3550_p1;
wire   [9:0] H_proto_shift_load_c_8_fu_3540_p1;
wire   [9:0] H_proto_shift_load_c_9_fu_3530_p1;
wire   [9:0] H_proto_shift_load_c_10_fu_3520_p1;
wire   [9:0] H_proto_shift_load_c_11_fu_3570_p1;
wire   [9:0] H_proto_shift_load_c_6_fu_3560_p1;
wire   [9:0] H_proto_shift_load_c_13_fu_3670_p1;
wire   [9:0] H_proto_shift_load_c_14_fu_3660_p1;
wire   [9:0] H_proto_shift_load_c_15_fu_3650_p1;
wire   [9:0] H_proto_shift_load_c_16_fu_3640_p1;
wire   [9:0] H_proto_shift_load_c_17_fu_3690_p1;
wire   [9:0] H_proto_shift_load_c_12_fu_3680_p1;
wire   [7:0] idx_assign_fu_3404_p3;
wire   [31:0] grp_fu_2967_p2;
wire   [31:0] grp_fu_2982_p2;
wire   [31:0] grp_fu_2997_p2;
wire   [31:0] grp_fu_3012_p2;
wire   [31:0] grp_fu_3027_p2;
wire   [31:0] grp_fu_2952_p2;
wire   [31:0] grp_fu_2972_p2;
wire   [31:0] grp_fu_2987_p2;
wire   [31:0] grp_fu_3002_p2;
wire   [31:0] grp_fu_3017_p2;
wire   [31:0] grp_fu_3032_p2;
wire   [31:0] grp_fu_2957_p2;
wire   [31:0] grp_fu_2977_p2;
wire   [31:0] grp_fu_2992_p2;
wire   [31:0] grp_fu_3007_p2;
wire   [31:0] grp_fu_3022_p2;
wire   [31:0] grp_fu_3037_p2;
wire   [31:0] grp_fu_2962_p2;
wire   [31:0] tmp_73_fu_6135_p1;
wire   [31:0] tmp_82_0_1_fu_6159_p1;
wire   [31:0] tmp_82_0_2_fu_6183_p1;
wire   [31:0] tmp_82_0_3_fu_6207_p1;
wire   [31:0] tmp_82_0_4_fu_6231_p1;
wire   [31:0] tmp_82_0_5_fu_6255_p1;
wire   [31:0] tmp_82_1_fu_6279_p1;
wire   [31:0] tmp_82_1_1_fu_6303_p1;
wire   [31:0] tmp_82_1_2_fu_6327_p1;
wire   [31:0] tmp_82_1_3_fu_6351_p1;
wire   [31:0] tmp_82_1_4_fu_6375_p1;
wire   [31:0] tmp_82_1_5_fu_6399_p1;
wire   [31:0] tmp_82_2_fu_6423_p1;
wire   [31:0] tmp_82_2_1_fu_6447_p1;
wire   [31:0] tmp_82_2_2_fu_6471_p1;
wire   [31:0] tmp_82_2_3_fu_6495_p1;
wire   [31:0] tmp_82_2_4_fu_6519_p1;
wire   [31:0] tmp_82_2_5_fu_6543_p1;
wire   [0:0] tmp_110_0_5_fu_8262_p2;
wire   [0:0] tmp_110_1_5_fu_8298_p2;
wire   [0:0] tmp_110_2_5_fu_8335_p2;
reg   [31:0] grp_fu_2844_p0;
reg   [31:0] grp_fu_2844_p1;
reg   [31:0] grp_fu_2850_p0;
reg   [31:0] grp_fu_2850_p1;
reg   [31:0] grp_fu_2856_p0;
reg   [31:0] grp_fu_2856_p1;
reg   [31:0] grp_fu_2862_p0;
reg   [31:0] grp_fu_2862_p1;
reg   [31:0] grp_fu_2868_p0;
reg   [31:0] grp_fu_2868_p1;
reg   [31:0] grp_fu_2874_p0;
reg   [31:0] grp_fu_2874_p1;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state18;
reg   [31:0] grp_fu_3114_p0;
reg   [31:0] grp_fu_3120_p0;
reg   [31:0] grp_fu_3126_p0;
reg   [31:0] grp_fu_3132_p0;
reg   [31:0] grp_fu_3138_p0;
reg   [31:0] grp_fu_3144_p0;
wire   [4:0] tmp_1_fu_3330_p3;
wire   [2:0] tmp_4_fu_3342_p3;
wire   [5:0] p_shl_cast_fu_3338_p1;
wire   [5:0] p_shl6_cast_fu_3350_p1;
wire   [5:0] tmp_5_cast_fu_3372_p1;
wire   [5:0] tmp_19_fu_3376_p2;
wire   [7:0] tmp_6_fu_3386_p2;
wire   [0:0] tmp_37_fu_3392_p2;
wire   [7:0] tmp_40_fu_3398_p2;
wire   [8:0] i_assign_2_cast_fu_4119_p1;
wire   [8:0] tmp_idx_10_fu_4123_p2;
wire   [0:0] tmp_75_fu_4128_p2;
wire   [8:0] tmp_idx_11_fu_4134_p2;
wire   [8:0] tmp_idx_12_fu_4140_p3;
wire  signed [31:0] tmp_idx_5_0_cast_fu_4148_p1;
wire   [8:0] tmp_idx_3_0_0_1_fu_4157_p2;
wire   [0:0] tmp_75_0_0_1_fu_4162_p2;
wire   [8:0] tmp_idx_4_0_0_1_fu_4168_p2;
wire   [8:0] tmp_idx_5_0_0_1_fu_4174_p3;
wire  signed [31:0] tmp_idx_5_0_0_1_cast_fu_4182_p1;
wire   [8:0] tmp_idx_3_0_0_2_fu_4191_p2;
wire   [0:0] tmp_75_0_0_2_fu_4196_p2;
wire   [8:0] tmp_idx_4_0_0_2_fu_4202_p2;
wire   [8:0] tmp_idx_5_0_0_2_fu_4208_p3;
wire  signed [31:0] tmp_idx_5_0_0_2_cast_fu_4216_p1;
wire   [8:0] tmp_idx_3_0_0_3_fu_4225_p2;
wire   [0:0] tmp_75_0_0_3_fu_4230_p2;
wire   [8:0] tmp_idx_4_0_0_3_fu_4236_p2;
wire   [8:0] tmp_idx_5_0_0_3_fu_4242_p3;
wire  signed [31:0] tmp_idx_5_0_0_3_cast_fu_4250_p1;
wire   [8:0] tmp_idx_3_0_0_4_fu_4259_p2;
wire   [0:0] tmp_75_0_0_4_fu_4264_p2;
wire   [8:0] tmp_idx_4_0_0_4_fu_4270_p2;
wire   [8:0] tmp_idx_5_0_0_4_fu_4276_p3;
wire  signed [31:0] tmp_idx_5_0_0_4_cast_fu_4284_p1;
wire   [8:0] tmp_idx_3_0_1_4_fu_4293_p2;
wire   [0:0] tmp_75_0_1_4_fu_4298_p2;
wire   [8:0] tmp_idx_4_0_1_4_fu_4304_p2;
wire   [8:0] tmp_idx_5_0_1_4_fu_4310_p3;
wire  signed [31:0] tmp_idx_5_0_1_4_cast_fu_4318_p1;
wire   [8:0] tmp_idx_3_1_fu_4327_p2;
wire   [0:0] tmp_75_1_fu_4332_p2;
wire   [8:0] tmp_idx_4_1_fu_4338_p2;
wire   [8:0] tmp_idx_5_1_fu_4344_p3;
wire  signed [31:0] tmp_idx_5_1_cast_fu_4352_p1;
wire   [8:0] tmp_idx_3_1_0_1_fu_4361_p2;
wire   [0:0] tmp_75_1_0_1_fu_4366_p2;
wire   [8:0] tmp_idx_4_1_0_1_fu_4372_p2;
wire   [8:0] tmp_idx_5_1_0_1_fu_4378_p3;
wire  signed [31:0] tmp_idx_5_1_0_1_cast_fu_4386_p1;
wire   [8:0] tmp_idx_3_1_0_2_fu_4395_p2;
wire   [0:0] tmp_75_1_0_2_fu_4400_p2;
wire   [8:0] tmp_idx_4_1_0_2_fu_4406_p2;
wire   [8:0] tmp_idx_5_1_0_2_fu_4412_p3;
wire  signed [31:0] tmp_idx_5_1_0_2_cast_fu_4420_p1;
wire   [8:0] tmp_idx_3_1_0_3_fu_4429_p2;
wire   [0:0] tmp_75_1_0_3_fu_4434_p2;
wire   [8:0] tmp_idx_4_1_0_3_fu_4440_p2;
wire   [8:0] tmp_idx_5_1_0_3_fu_4446_p3;
wire  signed [31:0] tmp_idx_5_1_0_3_cast_fu_4454_p1;
wire   [8:0] tmp_idx_3_1_0_4_fu_4463_p2;
wire   [0:0] tmp_75_1_0_4_fu_4468_p2;
wire   [8:0] tmp_idx_4_1_0_4_fu_4474_p2;
wire   [8:0] tmp_idx_5_1_0_4_fu_4480_p3;
wire  signed [31:0] tmp_idx_5_1_0_4_cast_fu_4488_p1;
wire   [8:0] tmp_idx_3_1_1_4_fu_4497_p2;
wire   [0:0] tmp_75_1_1_4_fu_4502_p2;
wire   [8:0] tmp_idx_4_1_1_4_fu_4508_p2;
wire   [8:0] tmp_idx_5_1_1_4_fu_4514_p3;
wire  signed [31:0] tmp_idx_5_1_1_4_cast_fu_4522_p1;
wire   [8:0] tmp_idx_3_2_fu_4531_p2;
wire   [0:0] tmp_75_2_fu_4536_p2;
wire   [8:0] tmp_idx_4_2_fu_4542_p2;
wire   [8:0] tmp_idx_5_2_fu_4548_p3;
wire  signed [31:0] tmp_idx_5_2_cast_fu_4556_p1;
wire   [8:0] tmp_idx_3_2_0_1_fu_4565_p2;
wire   [0:0] tmp_75_2_0_1_fu_4570_p2;
wire   [8:0] tmp_idx_4_2_0_1_fu_4576_p2;
wire   [8:0] tmp_idx_5_2_0_1_fu_4582_p3;
wire  signed [31:0] tmp_idx_5_2_0_1_cast_fu_4590_p1;
wire   [8:0] tmp_idx_3_2_0_2_fu_4599_p2;
wire   [0:0] tmp_75_2_0_2_fu_4604_p2;
wire   [8:0] tmp_idx_4_2_0_2_fu_4610_p2;
wire   [8:0] tmp_idx_5_2_0_2_fu_4616_p3;
wire  signed [31:0] tmp_idx_5_2_0_2_cast_fu_4624_p1;
wire   [8:0] tmp_idx_3_2_0_3_fu_4633_p2;
wire   [0:0] tmp_75_2_0_3_fu_4638_p2;
wire   [8:0] tmp_idx_4_2_0_3_fu_4644_p2;
wire   [8:0] tmp_idx_5_2_0_3_fu_4650_p3;
wire  signed [31:0] tmp_idx_5_2_0_3_cast_fu_4658_p1;
wire   [8:0] tmp_idx_3_2_0_4_fu_4667_p2;
wire   [0:0] tmp_75_2_0_4_fu_4672_p2;
wire   [8:0] tmp_idx_4_2_0_4_fu_4678_p2;
wire   [8:0] tmp_idx_5_2_0_4_fu_4684_p3;
wire  signed [31:0] tmp_idx_5_2_0_4_cast_fu_4692_p1;
wire   [8:0] tmp_idx_3_2_1_4_fu_4701_p2;
wire   [0:0] tmp_75_2_1_4_fu_4706_p2;
wire   [8:0] tmp_idx_4_2_1_4_fu_4712_p2;
wire   [8:0] tmp_idx_5_2_1_4_fu_4718_p3;
wire  signed [31:0] tmp_idx_5_2_1_4_cast_fu_4726_p1;
wire   [31:0] p_Val2_s_fu_4735_p1;
wire   [31:0] p_Val2_1_fu_4743_p1;
wire   [31:0] p_Val2_2_fu_4751_p1;
wire   [31:0] p_Val2_3_fu_4759_p1;
wire   [31:0] p_Val2_4_fu_4767_p1;
wire   [7:0] tmp_48_fu_4775_p4;
wire   [22:0] tmp_136_fu_4785_p1;
wire   [0:0] notrhs_fu_4795_p2;
wire   [0:0] notlhs_fu_4789_p2;
wire   [0:0] tmp_50_fu_4801_p2;
wire   [0:0] grp_fu_3114_p2;
wire   [7:0] tmp_53_fu_4813_p4;
wire   [22:0] tmp_141_fu_4823_p1;
wire   [0:0] notrhs1_fu_4833_p2;
wire   [0:0] notlhs1_fu_4827_p2;
wire   [0:0] tmp_55_fu_4839_p2;
wire   [0:0] grp_fu_3120_p2;
wire   [7:0] tmp_58_fu_4851_p4;
wire   [22:0] tmp_146_fu_4861_p1;
wire   [0:0] notrhs2_fu_4871_p2;
wire   [0:0] notlhs2_fu_4865_p2;
wire   [0:0] tmp_60_fu_4877_p2;
wire   [0:0] grp_fu_3126_p2;
wire   [7:0] tmp_63_fu_4889_p4;
wire   [22:0] tmp_150_fu_4899_p1;
wire   [0:0] notrhs3_fu_4909_p2;
wire   [0:0] notlhs3_fu_4903_p2;
wire   [0:0] tmp_65_fu_4915_p2;
wire   [0:0] grp_fu_3132_p2;
wire   [7:0] tmp_68_fu_4927_p4;
wire   [22:0] tmp_152_fu_4937_p1;
wire   [0:0] notrhs4_fu_4947_p2;
wire   [0:0] notlhs4_fu_4941_p2;
wire   [0:0] tmp_70_fu_4953_p2;
wire   [0:0] grp_fu_3138_p2;
wire   [0:0] tmp_52_fu_4807_p2;
wire   [0:0] tmp_57_fu_4845_p2;
wire   [0:0] tmp_67_fu_4921_p2;
wire   [0:0] tmp_72_fu_4959_p2;
wire   [0:0] tmp3_fu_4971_p2;
wire   [0:0] tmp_62_fu_4883_p2;
wire   [0:0] tmp2_fu_4977_p2;
wire   [0:0] tmp1_fu_4965_p2;
wire   [31:0] p_Val2_5_fu_4989_p1;
wire   [7:0] tmp_79_fu_4997_p4;
wire   [22:0] tmp_159_fu_5007_p1;
wire   [0:0] notrhs5_fu_5017_p2;
wire   [0:0] notlhs5_fu_5011_p2;
wire   [0:0] tmp_81_fu_5023_p2;
wire   [0:0] grp_fu_3144_p2;
wire   [0:0] tmp_83_fu_5029_p2;
wire   [0:0] tmp6_fu_5041_p2;
wire   [0:0] tmp5_fu_5047_p2;
wire   [0:0] tmp4_fu_5035_p2;
wire   [0:0] tmp9_fu_5065_p2;
wire   [0:0] tmp8_fu_5071_p2;
wire   [0:0] tmp7_fu_5059_p2;
wire   [0:0] tmp11_fu_5083_p2;
wire   [0:0] tmp14_fu_5095_p2;
wire   [0:0] tmp17_fu_5107_p2;
wire   [31:0] p_Val2_6_fu_5119_p1;
wire   [31:0] p_Val2_7_fu_5127_p1;
wire   [31:0] p_Val2_8_fu_5135_p1;
wire   [31:0] p_Val2_9_fu_5143_p1;
wire   [31:0] p_Val2_10_fu_5151_p1;
wire   [7:0] tmp_125_fu_5159_p4;
wire   [22:0] tmp_227_fu_5169_p1;
wire   [0:0] notrhs12_fu_5179_p2;
wire   [0:0] notlhs12_fu_5173_p2;
wire   [0:0] tmp_127_fu_5185_p2;
wire   [0:0] tmp_128_fu_3150_p2;
wire   [7:0] tmp_130_fu_5197_p4;
wire   [22:0] tmp_228_fu_5207_p1;
wire   [0:0] notrhs13_fu_5217_p2;
wire   [0:0] notlhs13_fu_5211_p2;
wire   [0:0] tmp_132_fu_5223_p2;
wire   [0:0] tmp_133_fu_3156_p2;
wire   [7:0] tmp_135_fu_5235_p4;
wire   [22:0] tmp_229_fu_5245_p1;
wire   [0:0] notrhs14_fu_5255_p2;
wire   [0:0] notlhs14_fu_5249_p2;
wire   [0:0] tmp_137_fu_5261_p2;
wire   [0:0] tmp_138_fu_3162_p2;
wire   [7:0] tmp_140_fu_5273_p4;
wire   [22:0] tmp_230_fu_5283_p1;
wire   [0:0] notrhs15_fu_5293_p2;
wire   [0:0] notlhs15_fu_5287_p2;
wire   [0:0] tmp_142_fu_5299_p2;
wire   [0:0] tmp_143_fu_3168_p2;
wire   [7:0] tmp_145_fu_5311_p4;
wire   [22:0] tmp_231_fu_5321_p1;
wire   [0:0] notrhs16_fu_5331_p2;
wire   [0:0] notlhs16_fu_5325_p2;
wire   [0:0] tmp_147_fu_5337_p2;
wire   [0:0] tmp_148_fu_3174_p2;
wire   [0:0] tmp_129_fu_5191_p2;
wire   [0:0] tmp_134_fu_5229_p2;
wire   [0:0] tmp_144_fu_5305_p2;
wire   [0:0] tmp_149_fu_5343_p2;
wire   [0:0] tmp21_fu_5355_p2;
wire   [0:0] tmp_139_fu_5267_p2;
wire   [0:0] tmp20_fu_5361_p2;
wire   [0:0] tmp19_fu_5349_p2;
wire   [31:0] p_Val2_11_fu_5373_p1;
wire   [7:0] tmp_151_fu_5381_p4;
wire   [22:0] tmp_233_fu_5391_p1;
wire   [0:0] notrhs17_fu_5401_p2;
wire   [0:0] notlhs17_fu_5395_p2;
wire   [0:0] tmp_153_fu_5407_p2;
wire   [0:0] tmp_154_fu_3180_p2;
wire   [0:0] tmp_155_fu_5413_p2;
wire   [0:0] tmp24_fu_5425_p2;
wire   [0:0] tmp23_fu_5431_p2;
wire   [0:0] tmp22_fu_5419_p2;
wire   [0:0] tmp27_fu_5449_p2;
wire   [0:0] tmp26_fu_5455_p2;
wire   [0:0] tmp25_fu_5443_p2;
wire   [0:0] tmp29_fu_5467_p2;
wire   [0:0] tmp32_fu_5479_p2;
wire   [0:0] tmp35_fu_5491_p2;
wire   [31:0] p_Val2_12_fu_5503_p1;
wire   [31:0] p_Val2_13_fu_5511_p1;
wire   [31:0] p_Val2_14_fu_5519_p1;
wire   [31:0] p_Val2_15_fu_5527_p1;
wire   [31:0] p_Val2_16_fu_5535_p1;
wire   [7:0] tmp_163_fu_5543_p4;
wire   [22:0] tmp_241_fu_5553_p1;
wire   [0:0] notrhs18_fu_5563_p2;
wire   [0:0] notlhs18_fu_5557_p2;
wire   [0:0] tmp_165_fu_5569_p2;
wire   [0:0] tmp_166_fu_3186_p2;
wire   [7:0] tmp_168_fu_5581_p4;
wire   [22:0] tmp_242_fu_5591_p1;
wire   [0:0] notrhs19_fu_5601_p2;
wire   [0:0] notlhs19_fu_5595_p2;
wire   [0:0] tmp_170_fu_5607_p2;
wire   [0:0] tmp_171_fu_3192_p2;
wire   [7:0] tmp_173_fu_5619_p4;
wire   [22:0] tmp_243_fu_5629_p1;
wire   [0:0] notrhs20_fu_5639_p2;
wire   [0:0] notlhs20_fu_5633_p2;
wire   [0:0] tmp_175_fu_5645_p2;
wire   [0:0] tmp_176_fu_3198_p2;
wire   [7:0] tmp_178_fu_5657_p4;
wire   [22:0] tmp_244_fu_5667_p1;
wire   [0:0] notrhs21_fu_5677_p2;
wire   [0:0] notlhs21_fu_5671_p2;
wire   [0:0] tmp_180_fu_5683_p2;
wire   [0:0] tmp_181_fu_3204_p2;
wire   [7:0] tmp_183_fu_5695_p4;
wire   [22:0] tmp_245_fu_5705_p1;
wire   [0:0] notrhs22_fu_5715_p2;
wire   [0:0] notlhs22_fu_5709_p2;
wire   [0:0] tmp_185_fu_5721_p2;
wire   [0:0] tmp_186_fu_3210_p2;
wire   [0:0] tmp_167_fu_5575_p2;
wire   [0:0] tmp_172_fu_5613_p2;
wire   [0:0] tmp_182_fu_5689_p2;
wire   [0:0] tmp_187_fu_5727_p2;
wire   [0:0] tmp39_fu_5739_p2;
wire   [0:0] tmp_177_fu_5651_p2;
wire   [0:0] tmp38_fu_5745_p2;
wire   [0:0] tmp37_fu_5733_p2;
wire   [31:0] p_Val2_17_fu_5757_p1;
wire   [7:0] tmp_189_fu_5765_p4;
wire   [22:0] tmp_247_fu_5775_p1;
wire   [0:0] notrhs23_fu_5785_p2;
wire   [0:0] notlhs23_fu_5779_p2;
wire   [0:0] tmp_191_fu_5791_p2;
wire   [0:0] tmp_192_fu_3216_p2;
wire   [0:0] tmp_193_fu_5797_p2;
wire   [0:0] tmp42_fu_5809_p2;
wire   [0:0] tmp41_fu_5815_p2;
wire   [0:0] tmp40_fu_5803_p2;
wire   [0:0] tmp45_fu_5833_p2;
wire   [0:0] tmp44_fu_5839_p2;
wire   [0:0] tmp43_fu_5827_p2;
wire   [0:0] tmp47_fu_5851_p2;
wire   [0:0] tmp50_fu_5863_p2;
wire   [0:0] tmp53_fu_5875_p2;
wire   [31:0] p_Result_s_fu_5887_p3;
wire   [31:0] p_Result_1_fu_5900_p3;
wire   [31:0] p_Result_2_fu_5913_p3;
wire   [31:0] p_Result_3_fu_5926_p3;
wire   [31:0] p_Result_4_fu_5939_p3;
wire   [31:0] p_Result_5_fu_5952_p3;
wire   [31:0] p_Result_6_fu_5965_p3;
wire   [31:0] p_Result_7_fu_5978_p3;
wire   [31:0] p_Result_8_fu_5991_p3;
wire   [31:0] p_Result_9_fu_6004_p3;
wire   [31:0] p_Result_10_fu_6017_p3;
wire   [31:0] p_Result_11_fu_6030_p3;
wire   [31:0] p_Result_12_fu_6043_p3;
wire   [31:0] p_Result_13_fu_6056_p3;
wire   [31:0] p_Result_14_fu_6069_p3;
wire   [31:0] p_Result_15_fu_6082_p3;
wire   [31:0] p_Result_16_fu_6095_p3;
wire   [31:0] p_Result_17_fu_6108_p3;
wire   [31:0] tmp_82_to_int_fu_6126_p1;
wire   [31:0] tmp_82_neg_fu_6129_p2;
wire   [31:0] tmp_82_to_int_0_1_fu_6150_p1;
wire   [31:0] tmp_82_neg_0_1_fu_6153_p2;
wire   [31:0] tmp_82_to_int_0_2_fu_6174_p1;
wire   [31:0] tmp_82_neg_0_2_fu_6177_p2;
wire   [31:0] tmp_82_to_int_0_3_fu_6198_p1;
wire   [31:0] tmp_82_neg_0_3_fu_6201_p2;
wire   [31:0] tmp_82_to_int_0_4_fu_6222_p1;
wire   [31:0] tmp_82_neg_0_4_fu_6225_p2;
wire   [31:0] tmp_82_to_int_0_5_fu_6246_p1;
wire   [31:0] tmp_82_neg_0_5_fu_6249_p2;
wire   [31:0] tmp_82_to_int_1_fu_6270_p1;
wire   [31:0] tmp_82_neg_1_fu_6273_p2;
wire   [31:0] tmp_82_to_int_1_1_fu_6294_p1;
wire   [31:0] tmp_82_neg_1_1_fu_6297_p2;
wire   [31:0] tmp_82_to_int_1_2_fu_6318_p1;
wire   [31:0] tmp_82_neg_1_2_fu_6321_p2;
wire   [31:0] tmp_82_to_int_1_3_fu_6342_p1;
wire   [31:0] tmp_82_neg_1_3_fu_6345_p2;
wire   [31:0] tmp_82_to_int_1_4_fu_6366_p1;
wire   [31:0] tmp_82_neg_1_4_fu_6369_p2;
wire   [31:0] tmp_82_to_int_1_5_fu_6390_p1;
wire   [31:0] tmp_82_neg_1_5_fu_6393_p2;
wire   [31:0] tmp_82_to_int_2_fu_6414_p1;
wire   [31:0] tmp_82_neg_2_fu_6417_p2;
wire   [31:0] tmp_82_to_int_2_1_fu_6438_p1;
wire   [31:0] tmp_82_neg_2_1_fu_6441_p2;
wire   [31:0] tmp_82_to_int_2_2_fu_6462_p1;
wire   [31:0] tmp_82_neg_2_2_fu_6465_p2;
wire   [31:0] tmp_82_to_int_2_3_fu_6486_p1;
wire   [31:0] tmp_82_neg_2_3_fu_6489_p2;
wire   [31:0] tmp_82_to_int_2_4_fu_6510_p1;
wire   [31:0] tmp_82_neg_2_4_fu_6513_p2;
wire   [31:0] tmp_82_to_int_2_5_fu_6534_p1;
wire   [31:0] tmp_82_neg_2_5_fu_6537_p2;
wire   [8:0] i_assign_1_cast_fu_6565_p1;
wire   [8:0] tmp_idx_13_fu_6579_p2;
wire   [0:0] tmp_92_fu_6584_p2;
wire   [8:0] tmp_idx_7_fu_6590_p2;
wire   [8:0] tmp_idx_8_fu_6596_p3;
wire  signed [31:0] tmp_idx_8_0_cast_fu_6604_p1;
wire   [8:0] tmp_idx_6_0_0_1_fu_6613_p2;
wire   [0:0] tmp_92_0_0_1_fu_6618_p2;
wire   [8:0] tmp_idx_7_0_0_1_fu_6624_p2;
wire   [8:0] tmp_idx_8_0_0_1_fu_6630_p3;
wire  signed [31:0] tmp_idx_8_0_0_1_cast_fu_6638_p1;
wire   [8:0] tmp_idx_6_0_1_1_fu_6647_p2;
wire   [0:0] tmp_92_0_1_1_fu_6652_p2;
wire   [8:0] tmp_idx_7_0_1_1_fu_6658_p2;
wire   [8:0] tmp_idx_8_0_1_1_fu_6664_p3;
wire  signed [31:0] tmp_idx_8_0_1_1_cast_fu_6672_p1;
wire   [8:0] tmp_idx_6_1_fu_6681_p2;
wire   [0:0] tmp_92_1_fu_6686_p2;
wire   [8:0] tmp_idx_7_1_fu_6692_p2;
wire   [8:0] tmp_idx_8_1_fu_6698_p3;
wire  signed [31:0] tmp_idx_8_1_cast_fu_6706_p1;
wire   [8:0] tmp_idx_6_1_0_1_fu_6715_p2;
wire   [0:0] tmp_92_1_0_1_fu_6720_p2;
wire   [8:0] tmp_idx_7_1_0_1_fu_6726_p2;
wire   [8:0] tmp_idx_8_1_0_1_fu_6732_p3;
wire  signed [31:0] tmp_idx_8_1_0_1_cast_fu_6740_p1;
wire   [8:0] tmp_idx_6_1_1_1_fu_6749_p2;
wire   [0:0] tmp_92_1_1_1_fu_6754_p2;
wire   [8:0] tmp_idx_7_1_1_1_fu_6760_p2;
wire   [8:0] tmp_idx_8_1_1_1_fu_6766_p3;
wire  signed [31:0] tmp_idx_8_1_1_1_cast_fu_6774_p1;
wire   [8:0] tmp_idx_6_2_fu_6783_p2;
wire   [0:0] tmp_92_2_fu_6788_p2;
wire   [8:0] tmp_idx_7_2_fu_6794_p2;
wire   [8:0] tmp_idx_8_2_fu_6800_p3;
wire  signed [31:0] tmp_idx_8_2_cast_fu_6808_p1;
wire   [8:0] tmp_idx_6_2_0_1_fu_6817_p2;
wire   [0:0] tmp_92_2_0_1_fu_6822_p2;
wire   [8:0] tmp_idx_7_2_0_1_fu_6828_p2;
wire   [8:0] tmp_idx_8_2_0_1_fu_6834_p3;
wire  signed [31:0] tmp_idx_8_2_0_1_cast_fu_6842_p1;
wire   [8:0] tmp_idx_6_2_1_1_fu_6851_p2;
wire   [0:0] tmp_92_2_1_1_fu_6856_p2;
wire   [8:0] tmp_idx_7_2_1_1_fu_6862_p2;
wire   [8:0] tmp_idx_8_2_1_1_fu_6868_p3;
wire  signed [31:0] tmp_idx_8_2_1_1_cast_fu_6876_p1;
wire   [8:0] tmp_idx_6_3_fu_6885_p2;
wire   [0:0] tmp_92_3_fu_6890_p2;
wire   [8:0] tmp_idx_7_3_fu_6896_p2;
wire   [8:0] tmp_idx_8_3_fu_6902_p3;
wire  signed [31:0] tmp_idx_8_3_cast_fu_6910_p1;
wire   [8:0] tmp_idx_6_3_0_1_fu_6919_p2;
wire   [0:0] tmp_92_3_0_1_fu_6924_p2;
wire   [8:0] tmp_idx_7_3_0_1_fu_6930_p2;
wire   [8:0] tmp_idx_8_3_0_1_fu_6936_p3;
wire  signed [31:0] tmp_idx_8_3_0_1_cast_fu_6944_p1;
wire   [8:0] tmp_idx_6_3_1_1_fu_6953_p2;
wire   [0:0] tmp_92_3_1_1_fu_6958_p2;
wire   [8:0] tmp_idx_7_3_1_1_fu_6964_p2;
wire   [8:0] tmp_idx_8_3_1_1_fu_6970_p3;
wire  signed [31:0] tmp_idx_8_3_1_1_cast_fu_6978_p1;
wire   [8:0] tmp_idx_6_4_fu_6987_p2;
wire   [0:0] tmp_92_4_fu_6992_p2;
wire   [8:0] tmp_idx_7_4_fu_6998_p2;
wire   [8:0] tmp_idx_8_4_fu_7004_p3;
wire  signed [31:0] tmp_idx_8_4_cast_fu_7012_p1;
wire   [8:0] tmp_idx_6_4_0_1_fu_7021_p2;
wire   [0:0] tmp_92_4_0_1_fu_7026_p2;
wire   [8:0] tmp_idx_7_4_0_1_fu_7032_p2;
wire   [8:0] tmp_idx_8_4_0_1_fu_7038_p3;
wire  signed [31:0] tmp_idx_8_4_0_1_cast_fu_7046_p1;
wire   [8:0] tmp_idx_6_4_1_1_fu_7055_p2;
wire   [0:0] tmp_92_4_1_1_fu_7060_p2;
wire   [8:0] tmp_idx_7_4_1_1_fu_7066_p2;
wire   [8:0] tmp_idx_8_4_1_1_fu_7072_p3;
wire  signed [31:0] tmp_idx_8_4_1_1_cast_fu_7080_p1;
wire   [8:0] tmp_idx_6_5_fu_7089_p2;
wire   [0:0] tmp_92_5_fu_7094_p2;
wire   [8:0] tmp_idx_7_5_fu_7100_p2;
wire   [8:0] tmp_idx_8_5_fu_7106_p3;
wire  signed [31:0] tmp_idx_8_5_cast_fu_7114_p1;
wire   [8:0] tmp_idx_6_5_0_1_fu_7123_p2;
wire   [0:0] tmp_92_5_0_1_fu_7128_p2;
wire   [8:0] tmp_idx_7_5_0_1_fu_7134_p2;
wire   [8:0] tmp_idx_8_5_0_1_fu_7140_p3;
wire  signed [31:0] tmp_idx_8_5_0_1_cast_fu_7148_p1;
wire   [8:0] tmp_idx_6_5_1_1_fu_7157_p2;
wire   [0:0] tmp_92_5_1_1_fu_7162_p2;
wire   [8:0] tmp_idx_7_5_1_1_fu_7168_p2;
wire   [8:0] tmp_idx_8_5_1_1_fu_7174_p3;
wire  signed [31:0] tmp_idx_8_5_1_1_cast_fu_7182_p1;
wire   [8:0] i_assign_cast_fu_7191_p1;
wire   [8:0] tmp_idx_fu_7217_p2;
wire   [0:0] tmp_25_fu_7222_p2;
wire   [8:0] tmp_idx_1_fu_7228_p2;
wire   [8:0] tmp_idx_2_fu_7234_p3;
wire  signed [31:0] tmp_idx_2_cast_fu_7242_p1;
wire   [8:0] tmp_idx_s_fu_7251_p2;
wire   [0:0] tmp_55_1_fu_7256_p2;
wire   [8:0] tmp_idx_1_1_fu_7262_p2;
wire   [8:0] tmp_idx_2_1_fu_7268_p3;
wire  signed [31:0] tmp_idx_2_1_cast_fu_7276_p1;
wire   [8:0] tmp_idx_6_fu_7285_p2;
wire   [0:0] tmp_55_2_fu_7290_p2;
wire   [8:0] tmp_idx_1_2_fu_7296_p2;
wire   [8:0] tmp_idx_2_2_fu_7302_p3;
wire  signed [31:0] tmp_idx_2_2_cast_fu_7310_p1;
wire   [8:0] tmp_idx_3_fu_7319_p2;
wire   [0:0] tmp_55_3_fu_7324_p2;
wire   [8:0] tmp_idx_1_3_fu_7330_p2;
wire   [8:0] tmp_idx_2_3_fu_7336_p3;
wire  signed [31:0] tmp_idx_2_3_cast_fu_7344_p1;
wire   [8:0] tmp_idx_4_fu_7353_p2;
wire   [0:0] tmp_55_4_fu_7358_p2;
wire   [8:0] tmp_idx_1_4_fu_7364_p2;
wire   [8:0] tmp_idx_2_4_fu_7370_p3;
wire  signed [31:0] tmp_idx_2_4_cast_fu_7378_p1;
wire   [8:0] tmp_idx_5_fu_7387_p2;
wire   [0:0] tmp_55_5_fu_7392_p2;
wire   [8:0] tmp_idx_1_5_fu_7398_p2;
wire   [8:0] tmp_idx_2_5_fu_7404_p3;
wire  signed [31:0] tmp_idx_2_5_cast_fu_7412_p1;
wire   [31:0] soft_dec_tmp_0_load_2_fu_7443_p1;
wire   [7:0] tmp_84_fu_7447_p4;
wire   [22:0] tmp_160_fu_7457_p1;
wire   [0:0] notrhs6_fu_7467_p2;
wire   [0:0] notlhs6_fu_7461_p2;
wire   [0:0] tmp_86_fu_7473_p2;
wire   [31:0] soft_dec_tmp_1_load_2_fu_7486_p1;
wire   [7:0] tmp_89_fu_7490_p4;
wire   [22:0] tmp_161_fu_7500_p1;
wire   [0:0] notrhs7_fu_7510_p2;
wire   [0:0] notlhs7_fu_7504_p2;
wire   [0:0] tmp_91_fu_7516_p2;
wire   [31:0] soft_dec_tmp_2_load_2_fu_7529_p1;
wire   [7:0] tmp_97_fu_7533_p4;
wire   [22:0] tmp_162_fu_7543_p1;
wire   [0:0] notrhs8_fu_7553_p2;
wire   [0:0] notlhs8_fu_7547_p2;
wire   [0:0] tmp_99_fu_7559_p2;
wire   [31:0] soft_dec_tmp_3_load_2_fu_7572_p1;
wire   [7:0] tmp_102_fu_7576_p4;
wire   [22:0] tmp_164_fu_7586_p1;
wire   [0:0] notrhs9_fu_7596_p2;
wire   [0:0] notlhs9_fu_7590_p2;
wire   [0:0] tmp_104_fu_7602_p2;
wire   [31:0] soft_dec_tmp_4_load_2_fu_7615_p1;
wire   [7:0] tmp_107_fu_7619_p4;
wire   [22:0] tmp_169_fu_7629_p1;
wire   [0:0] notrhs10_fu_7639_p2;
wire   [0:0] notlhs10_fu_7633_p2;
wire   [0:0] tmp_111_fu_7645_p2;
wire   [31:0] soft_dec_tmp_5_load_2_fu_7658_p1;
wire   [7:0] tmp_114_fu_7662_p4;
wire   [22:0] tmp_174_fu_7672_p1;
wire   [0:0] notrhs11_fu_7682_p2;
wire   [0:0] notlhs11_fu_7676_p2;
wire   [0:0] tmp_116_fu_7688_p2;
wire   [8:0] tmp_108_fu_7736_p2;
wire   [7:0] tmp_184_fu_7748_p2;
wire   [0:0] tmp_179_fu_7742_p2;
wire  signed [8:0] tmp_202_cast_fu_7754_p1;
wire   [8:0] tmp_idx_9_fu_7758_p3;
wire   [7:0] tmp_108_0_1_fu_7771_p2;
wire   [0:0] tmp_188_fu_7777_p2;
wire   [7:0] tmp_190_fu_7783_p2;
wire   [7:0] tmp_idx_9_0_1_fu_7789_p3;
wire   [7:0] tmp_108_0_2_fu_7803_p2;
wire   [0:0] tmp_194_fu_7809_p2;
wire   [7:0] tmp_195_fu_7815_p2;
wire   [7:0] tmp_idx_9_0_2_fu_7821_p3;
wire   [8:0] tmp_108_0_3_fu_7834_p2;
wire   [0:0] tmp_196_fu_7840_p2;
wire   [8:0] tmp_197_fu_7846_p2;
wire   [8:0] tmp_idx_9_0_3_fu_7852_p3;
wire   [7:0] tmp_108_0_4_fu_7865_p2;
wire   [0:0] tmp_198_fu_7871_p2;
wire   [7:0] tmp_199_fu_7877_p2;
wire   [7:0] tmp_idx_9_0_4_fu_7883_p3;
wire   [8:0] tmp_108_0_5_fu_7896_p2;
wire   [0:0] tmp_200_fu_7902_p2;
wire   [8:0] tmp_201_fu_7908_p2;
wire   [8:0] tmp_idx_9_0_5_fu_7914_p3;
wire   [8:0] tmp_108_1_fu_7935_p2;
wire   [7:0] tmp_203_fu_7946_p2;
wire   [0:0] tmp_202_fu_7940_p2;
wire  signed [8:0] tmp_214_cast_fu_7952_p1;
wire   [8:0] tmp_idx_9_1_fu_7956_p3;
wire   [7:0] tmp_108_1_1_fu_7969_p2;
wire   [0:0] tmp_204_fu_7975_p2;
wire   [7:0] tmp_205_fu_7981_p2;
wire   [7:0] tmp_idx_9_1_1_fu_7987_p3;
wire   [8:0] tmp_108_1_2_fu_8000_p2;
wire   [0:0] tmp_206_fu_8005_p2;
wire   [8:0] tmp_207_fu_8011_p2;
wire   [8:0] tmp_idx_9_1_2_fu_8016_p3;
wire   [8:0] tmp_108_1_4_fu_8029_p2;
wire   [0:0] tmp_208_fu_8034_p2;
wire   [8:0] tmp_209_fu_8040_p2;
wire   [8:0] tmp_idx_9_1_4_fu_8045_p3;
wire   [8:0] tmp_108_1_5_fu_8058_p2;
wire   [0:0] tmp_210_fu_8063_p2;
wire   [8:0] tmp_211_fu_8069_p2;
wire   [8:0] tmp_idx_9_1_5_fu_8074_p3;
wire   [7:0] tmp_108_2_fu_8087_p2;
wire   [0:0] tmp_212_fu_8093_p2;
wire   [7:0] tmp_213_fu_8099_p2;
wire   [7:0] tmp_idx_9_2_fu_8105_p3;
wire   [8:0] tmp_108_2_1_fu_8118_p2;
wire   [0:0] tmp_214_fu_8123_p2;
wire   [8:0] tmp_215_fu_8129_p2;
wire   [8:0] tmp_idx_9_2_1_fu_8134_p3;
wire   [7:0] tmp_108_2_2_fu_8147_p2;
wire   [0:0] tmp_216_fu_8153_p2;
wire   [7:0] tmp_217_fu_8159_p2;
wire   [7:0] tmp_idx_9_2_2_fu_8165_p3;
wire   [7:0] tmp_108_2_3_fu_8178_p2;
wire   [0:0] tmp_218_fu_8184_p2;
wire   [7:0] tmp_219_fu_8190_p2;
wire   [7:0] tmp_idx_9_2_3_fu_8196_p3;
wire   [8:0] tmp_108_2_5_fu_8209_p2;
wire   [0:0] tmp_220_fu_8214_p2;
wire   [8:0] tmp_221_fu_8220_p2;
wire   [8:0] tmp_idx_9_2_5_fu_8225_p3;
wire   [0:0] tmp56_fu_8238_p2;
wire   [0:0] tmp59_fu_8252_p2;
wire   [0:0] tmp58_fu_8248_p2;
wire   [0:0] tmp57_fu_8256_p2;
wire   [0:0] tmp55_fu_8242_p2;
wire   [0:0] tmp61_fu_8269_p2;
wire   [0:0] tmp64_fu_8286_p2;
wire   [0:0] tmp63_fu_8281_p2;
wire   [0:0] tmp62_fu_8292_p2;
wire   [0:0] tmp60_fu_8275_p2;
wire   [0:0] tmp66_fu_8305_p2;
wire   [0:0] tmp69_fu_8323_p2;
wire   [0:0] tmp68_fu_8317_p2;
wire   [0:0] tmp67_fu_8329_p2;
wire   [0:0] tmp65_fu_8311_p2;
wire   [0:0] tmp70_fu_8361_p2;
wire   [0:0] tmp_119_fu_8367_p2;
reg   [62:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'b1;
#0 var2chk_shift_idx_0_1 = 10'b0000000000;
#0 var2chk_shift_idx_0_2 = 10'b0000000000;
#0 var2chk_shift_idx_0_3 = 10'b0000000000;
#0 var2chk_shift_idx_0_4 = 10'b0000000000;
#0 var2chk_shift_idx_0_5 = 10'b0000000000;
#0 var2chk_shift_idx_0_s = 10'b0000000000;
#0 var2chk_shift_idx_1_1 = 10'b0000000000;
#0 var2chk_shift_idx_1_2 = 10'b0000000000;
#0 var2chk_shift_idx_1_3 = 10'b0000000000;
#0 var2chk_shift_idx_1_4 = 10'b0000000000;
#0 var2chk_shift_idx_1_5 = 10'b0000000000;
#0 var2chk_shift_idx_1_s = 10'b0000000000;
#0 var2chk_shift_idx_2_1 = 10'b0000000000;
#0 var2chk_shift_idx_2_2 = 10'b0000000000;
#0 var2chk_shift_idx_2_3 = 10'b0000000000;
#0 var2chk_shift_idx_2_4 = 10'b0000000000;
#0 var2chk_shift_idx_2_5 = 10'b0000000000;
#0 var2chk_shift_idx_2_s = 10'b0000000000;
#0 chk2var_shift_idx_1_s = 8'b00000000;
#0 chk2var_shift_idx_2_s = 8'b00000000;
#0 chk2var_shift_idx_0_s = 8'b00000000;
#0 chk2var_shift_idx_1_1 = 8'b00000000;
#0 chk2var_shift_idx_2_1 = 8'b00000000;
#0 chk2var_shift_idx_0_1 = 8'b00000000;
#0 chk2var_shift_idx_1_2 = 8'b00000000;
#0 chk2var_shift_idx_2_2 = 8'b00000000;
#0 chk2var_shift_idx_0_2 = 8'b00000000;
#0 chk2var_shift_idx_1_3 = 8'b00000000;
#0 chk2var_shift_idx_2_3 = 8'b00000000;
#0 chk2var_shift_idx_0_3 = 8'b00000000;
#0 chk2var_shift_idx_1_4 = 8'b00000000;
#0 chk2var_shift_idx_2_4 = 8'b00000000;
#0 chk2var_shift_idx_0_4 = 8'b00000000;
#0 chk2var_shift_idx_1_5 = 8'b00000000;
#0 chk2var_shift_idx_2_5 = 8'b00000000;
#0 chk2var_shift_idx_0_5 = 8'b00000000;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_reg_ioackin_noisy_input_ARREADY = 1'b0;
#0 ap_reg_ioackin_hard_dec_out_AWREADY = 1'b0;
#0 ap_reg_ioackin_hard_dec_out_WREADY = 1'b0;
#0 ap_reg_ioackin_soft_dec_out_AWREADY = 1'b0;
#0 ap_reg_ioackin_soft_dec_out_WREADY = 1'b0;
end

min_sum_dec_H_probkb #(
    .DataWidth( 8 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
H_proto_shift_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(H_proto_shift_address0),
    .ce0(H_proto_shift_ce0),
    .q0(H_proto_shift_q0)
);

min_sum_dec_noisy_input_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_NOISY_INPUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_NOISY_INPUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_NOISY_INPUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_NOISY_INPUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_NOISY_INPUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_NOISY_INPUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_NOISY_INPUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_NOISY_INPUT_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_NOISY_INPUT_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_NOISY_INPUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_NOISY_INPUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_NOISY_INPUT_CACHE_VALUE ))
min_sum_dec_noisy_input_m_axi_U(
    .AWVALID(m_axi_noisy_input_AWVALID),
    .AWREADY(m_axi_noisy_input_AWREADY),
    .AWADDR(m_axi_noisy_input_AWADDR),
    .AWID(m_axi_noisy_input_AWID),
    .AWLEN(m_axi_noisy_input_AWLEN),
    .AWSIZE(m_axi_noisy_input_AWSIZE),
    .AWBURST(m_axi_noisy_input_AWBURST),
    .AWLOCK(m_axi_noisy_input_AWLOCK),
    .AWCACHE(m_axi_noisy_input_AWCACHE),
    .AWPROT(m_axi_noisy_input_AWPROT),
    .AWQOS(m_axi_noisy_input_AWQOS),
    .AWREGION(m_axi_noisy_input_AWREGION),
    .AWUSER(m_axi_noisy_input_AWUSER),
    .WVALID(m_axi_noisy_input_WVALID),
    .WREADY(m_axi_noisy_input_WREADY),
    .WDATA(m_axi_noisy_input_WDATA),
    .WSTRB(m_axi_noisy_input_WSTRB),
    .WLAST(m_axi_noisy_input_WLAST),
    .WID(m_axi_noisy_input_WID),
    .WUSER(m_axi_noisy_input_WUSER),
    .ARVALID(m_axi_noisy_input_ARVALID),
    .ARREADY(m_axi_noisy_input_ARREADY),
    .ARADDR(m_axi_noisy_input_ARADDR),
    .ARID(m_axi_noisy_input_ARID),
    .ARLEN(m_axi_noisy_input_ARLEN),
    .ARSIZE(m_axi_noisy_input_ARSIZE),
    .ARBURST(m_axi_noisy_input_ARBURST),
    .ARLOCK(m_axi_noisy_input_ARLOCK),
    .ARCACHE(m_axi_noisy_input_ARCACHE),
    .ARPROT(m_axi_noisy_input_ARPROT),
    .ARQOS(m_axi_noisy_input_ARQOS),
    .ARREGION(m_axi_noisy_input_ARREGION),
    .ARUSER(m_axi_noisy_input_ARUSER),
    .RVALID(m_axi_noisy_input_RVALID),
    .RREADY(m_axi_noisy_input_RREADY),
    .RDATA(m_axi_noisy_input_RDATA),
    .RLAST(m_axi_noisy_input_RLAST),
    .RID(m_axi_noisy_input_RID),
    .RUSER(m_axi_noisy_input_RUSER),
    .RRESP(m_axi_noisy_input_RRESP),
    .BVALID(m_axi_noisy_input_BVALID),
    .BREADY(m_axi_noisy_input_BREADY),
    .BRESP(m_axi_noisy_input_BRESP),
    .BID(m_axi_noisy_input_BID),
    .BUSER(m_axi_noisy_input_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(noisy_input_ARVALID),
    .I_ARREADY(noisy_input_ARREADY),
    .I_ARADDR(noisy_input_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_A7),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(noisy_input_RVALID),
    .I_RREADY(noisy_input_RREADY),
    .I_RDATA(noisy_input_RDATA),
    .I_RID(noisy_input_RID),
    .I_RUSER(noisy_input_RUSER),
    .I_RRESP(noisy_input_RRESP),
    .I_RLAST(noisy_input_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(noisy_input_AWREADY),
    .I_AWADDR(ap_const_lv32_0),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_0),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(1'b0),
    .I_WREADY(noisy_input_WREADY),
    .I_WDATA(ap_const_lv32_0),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_0),
    .I_BVALID(noisy_input_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(noisy_input_BRESP),
    .I_BID(noisy_input_BID),
    .I_BUSER(noisy_input_BUSER)
);

min_sum_dec_soft_dec_out_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_SOFT_DEC_OUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_SOFT_DEC_OUT_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_SOFT_DEC_OUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_SOFT_DEC_OUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_SOFT_DEC_OUT_CACHE_VALUE ))
min_sum_dec_soft_dec_out_m_axi_U(
    .AWVALID(m_axi_soft_dec_out_AWVALID),
    .AWREADY(m_axi_soft_dec_out_AWREADY),
    .AWADDR(m_axi_soft_dec_out_AWADDR),
    .AWID(m_axi_soft_dec_out_AWID),
    .AWLEN(m_axi_soft_dec_out_AWLEN),
    .AWSIZE(m_axi_soft_dec_out_AWSIZE),
    .AWBURST(m_axi_soft_dec_out_AWBURST),
    .AWLOCK(m_axi_soft_dec_out_AWLOCK),
    .AWCACHE(m_axi_soft_dec_out_AWCACHE),
    .AWPROT(m_axi_soft_dec_out_AWPROT),
    .AWQOS(m_axi_soft_dec_out_AWQOS),
    .AWREGION(m_axi_soft_dec_out_AWREGION),
    .AWUSER(m_axi_soft_dec_out_AWUSER),
    .WVALID(m_axi_soft_dec_out_WVALID),
    .WREADY(m_axi_soft_dec_out_WREADY),
    .WDATA(m_axi_soft_dec_out_WDATA),
    .WSTRB(m_axi_soft_dec_out_WSTRB),
    .WLAST(m_axi_soft_dec_out_WLAST),
    .WID(m_axi_soft_dec_out_WID),
    .WUSER(m_axi_soft_dec_out_WUSER),
    .ARVALID(m_axi_soft_dec_out_ARVALID),
    .ARREADY(m_axi_soft_dec_out_ARREADY),
    .ARADDR(m_axi_soft_dec_out_ARADDR),
    .ARID(m_axi_soft_dec_out_ARID),
    .ARLEN(m_axi_soft_dec_out_ARLEN),
    .ARSIZE(m_axi_soft_dec_out_ARSIZE),
    .ARBURST(m_axi_soft_dec_out_ARBURST),
    .ARLOCK(m_axi_soft_dec_out_ARLOCK),
    .ARCACHE(m_axi_soft_dec_out_ARCACHE),
    .ARPROT(m_axi_soft_dec_out_ARPROT),
    .ARQOS(m_axi_soft_dec_out_ARQOS),
    .ARREGION(m_axi_soft_dec_out_ARREGION),
    .ARUSER(m_axi_soft_dec_out_ARUSER),
    .RVALID(m_axi_soft_dec_out_RVALID),
    .RREADY(m_axi_soft_dec_out_RREADY),
    .RDATA(m_axi_soft_dec_out_RDATA),
    .RLAST(m_axi_soft_dec_out_RLAST),
    .RID(m_axi_soft_dec_out_RID),
    .RUSER(m_axi_soft_dec_out_RUSER),
    .RRESP(m_axi_soft_dec_out_RRESP),
    .BVALID(m_axi_soft_dec_out_BVALID),
    .BREADY(m_axi_soft_dec_out_BREADY),
    .BRESP(m_axi_soft_dec_out_BRESP),
    .BID(m_axi_soft_dec_out_BID),
    .BUSER(m_axi_soft_dec_out_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(soft_dec_out_ARREADY),
    .I_ARADDR(ap_const_lv32_0),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_0),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(soft_dec_out_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(soft_dec_out_RDATA),
    .I_RID(soft_dec_out_RID),
    .I_RUSER(soft_dec_out_RUSER),
    .I_RRESP(soft_dec_out_RRESP),
    .I_RLAST(soft_dec_out_RLAST),
    .I_AWVALID(soft_dec_out_AWVALID),
    .I_AWREADY(soft_dec_out_AWREADY),
    .I_AWADDR(soft_dec_out_AWADDR),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_A7),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(soft_dec_out_WVALID),
    .I_WREADY(soft_dec_out_WREADY),
    .I_WDATA(tmp_157_reg_10445),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(soft_dec_out_BVALID),
    .I_BREADY(soft_dec_out_BREADY),
    .I_BRESP(soft_dec_out_BRESP),
    .I_BID(soft_dec_out_BID),
    .I_BUSER(soft_dec_out_BUSER)
);

min_sum_dec_hard_dec_out_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HARD_DEC_OUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HARD_DEC_OUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_HARD_DEC_OUT_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_HARD_DEC_OUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HARD_DEC_OUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HARD_DEC_OUT_CACHE_VALUE ))
min_sum_dec_hard_dec_out_m_axi_U(
    .AWVALID(m_axi_hard_dec_out_AWVALID),
    .AWREADY(m_axi_hard_dec_out_AWREADY),
    .AWADDR(m_axi_hard_dec_out_AWADDR),
    .AWID(m_axi_hard_dec_out_AWID),
    .AWLEN(m_axi_hard_dec_out_AWLEN),
    .AWSIZE(m_axi_hard_dec_out_AWSIZE),
    .AWBURST(m_axi_hard_dec_out_AWBURST),
    .AWLOCK(m_axi_hard_dec_out_AWLOCK),
    .AWCACHE(m_axi_hard_dec_out_AWCACHE),
    .AWPROT(m_axi_hard_dec_out_AWPROT),
    .AWQOS(m_axi_hard_dec_out_AWQOS),
    .AWREGION(m_axi_hard_dec_out_AWREGION),
    .AWUSER(m_axi_hard_dec_out_AWUSER),
    .WVALID(m_axi_hard_dec_out_WVALID),
    .WREADY(m_axi_hard_dec_out_WREADY),
    .WDATA(m_axi_hard_dec_out_WDATA),
    .WSTRB(m_axi_hard_dec_out_WSTRB),
    .WLAST(m_axi_hard_dec_out_WLAST),
    .WID(m_axi_hard_dec_out_WID),
    .WUSER(m_axi_hard_dec_out_WUSER),
    .ARVALID(m_axi_hard_dec_out_ARVALID),
    .ARREADY(m_axi_hard_dec_out_ARREADY),
    .ARADDR(m_axi_hard_dec_out_ARADDR),
    .ARID(m_axi_hard_dec_out_ARID),
    .ARLEN(m_axi_hard_dec_out_ARLEN),
    .ARSIZE(m_axi_hard_dec_out_ARSIZE),
    .ARBURST(m_axi_hard_dec_out_ARBURST),
    .ARLOCK(m_axi_hard_dec_out_ARLOCK),
    .ARCACHE(m_axi_hard_dec_out_ARCACHE),
    .ARPROT(m_axi_hard_dec_out_ARPROT),
    .ARQOS(m_axi_hard_dec_out_ARQOS),
    .ARREGION(m_axi_hard_dec_out_ARREGION),
    .ARUSER(m_axi_hard_dec_out_ARUSER),
    .RVALID(m_axi_hard_dec_out_RVALID),
    .RREADY(m_axi_hard_dec_out_RREADY),
    .RDATA(m_axi_hard_dec_out_RDATA),
    .RLAST(m_axi_hard_dec_out_RLAST),
    .RID(m_axi_hard_dec_out_RID),
    .RUSER(m_axi_hard_dec_out_RUSER),
    .RRESP(m_axi_hard_dec_out_RRESP),
    .BVALID(m_axi_hard_dec_out_BVALID),
    .BREADY(m_axi_hard_dec_out_BREADY),
    .BRESP(m_axi_hard_dec_out_BRESP),
    .BID(m_axi_hard_dec_out_BID),
    .BUSER(m_axi_hard_dec_out_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(hard_dec_out_ARREADY),
    .I_ARADDR(ap_const_lv32_0),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_0),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(hard_dec_out_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(hard_dec_out_RDATA),
    .I_RID(hard_dec_out_RID),
    .I_RUSER(hard_dec_out_RUSER),
    .I_RRESP(hard_dec_out_RRESP),
    .I_RLAST(hard_dec_out_RLAST),
    .I_AWVALID(hard_dec_out_AWVALID),
    .I_AWREADY(hard_dec_out_AWREADY),
    .I_AWADDR(hard_dec_out_AWADDR),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_A7),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(hard_dec_out_WVALID),
    .I_WREADY(hard_dec_out_WREADY),
    .I_WDATA(hard_dec_out_WDATA),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(hard_dec_out_BVALID),
    .I_BREADY(hard_dec_out_BREADY),
    .I_BRESP(hard_dec_out_BRESP),
    .I_BID(hard_dec_out_BID),
    .I_BUSER(hard_dec_out_BUSER)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_0_address0),
    .ce0(noisy_input_vec_0_ce0),
    .we0(noisy_input_vec_0_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_0_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_1_address0),
    .ce0(noisy_input_vec_1_ce0),
    .we0(noisy_input_vec_1_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_1_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_2_address0),
    .ce0(noisy_input_vec_2_ce0),
    .we0(noisy_input_vec_2_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_2_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_3_address0),
    .ce0(noisy_input_vec_3_ce0),
    .we0(noisy_input_vec_3_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_3_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_4_address0),
    .ce0(noisy_input_vec_4_ce0),
    .we0(noisy_input_vec_4_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_4_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
noisy_input_vec_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(noisy_input_vec_5_address0),
    .ce0(noisy_input_vec_5_ce0),
    .we0(noisy_input_vec_5_we0),
    .d0(noisy_input_addr_rea_reg_8584),
    .q0(noisy_input_vec_5_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_0_address0),
    .ce0(llr_vec_0_ce0),
    .we0(llr_vec_0_we0),
    .d0(tmp_11_reg_8732),
    .q0(llr_vec_0_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_1_address0),
    .ce0(llr_vec_1_ce0),
    .we0(llr_vec_1_we0),
    .d0(tmp_33_1_reg_8737),
    .q0(llr_vec_1_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_2_address0),
    .ce0(llr_vec_2_ce0),
    .we0(llr_vec_2_we0),
    .d0(tmp_33_2_reg_8742),
    .q0(llr_vec_2_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_3_address0),
    .ce0(llr_vec_3_ce0),
    .we0(llr_vec_3_we0),
    .d0(tmp_33_3_reg_8747),
    .q0(llr_vec_3_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_4_address0),
    .ce0(llr_vec_4_ce0),
    .we0(llr_vec_4_we0),
    .d0(tmp_33_4_reg_8752),
    .q0(llr_vec_4_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
llr_vec_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(llr_vec_5_address0),
    .ce0(llr_vec_5_ce0),
    .we0(llr_vec_5_we0),
    .d0(tmp_33_5_reg_8757),
    .q0(llr_vec_5_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_0_dram_address0),
    .ce0(chk2var_0_0_dram_ce0),
    .we0(chk2var_0_0_dram_we0),
    .d0(chk2var_0_0_dram_d0),
    .q0(chk2var_0_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_1_dram_address0),
    .ce0(chk2var_0_1_dram_ce0),
    .we0(chk2var_0_1_dram_we0),
    .d0(chk2var_0_1_dram_d0),
    .q0(chk2var_0_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_2_dram_address0),
    .ce0(chk2var_0_2_dram_ce0),
    .we0(chk2var_0_2_dram_we0),
    .d0(chk2var_0_2_dram_d0),
    .q0(chk2var_0_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_3_dram_address0),
    .ce0(chk2var_0_3_dram_ce0),
    .we0(chk2var_0_3_dram_we0),
    .d0(chk2var_0_3_dram_d0),
    .q0(chk2var_0_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_4_dram_address0),
    .ce0(chk2var_0_4_dram_ce0),
    .we0(chk2var_0_4_dram_we0),
    .d0(chk2var_0_4_dram_d0),
    .q0(chk2var_0_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_0_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_0_5_dram_address0),
    .ce0(chk2var_0_5_dram_ce0),
    .we0(chk2var_0_5_dram_we0),
    .d0(chk2var_0_5_dram_d0),
    .q0(chk2var_0_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_0_dram_address0),
    .ce0(chk2var_1_0_dram_ce0),
    .we0(chk2var_1_0_dram_we0),
    .d0(chk2var_1_0_dram_d0),
    .q0(chk2var_1_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_1_dram_address0),
    .ce0(chk2var_1_1_dram_ce0),
    .we0(chk2var_1_1_dram_we0),
    .d0(chk2var_1_1_dram_d0),
    .q0(chk2var_1_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_2_dram_address0),
    .ce0(chk2var_1_2_dram_ce0),
    .we0(chk2var_1_2_dram_we0),
    .d0(chk2var_1_2_dram_d0),
    .q0(chk2var_1_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_3_dram_address0),
    .ce0(chk2var_1_3_dram_ce0),
    .we0(chk2var_1_3_dram_we0),
    .d0(chk2var_1_3_dram_d0),
    .q0(chk2var_1_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_4_dram_address0),
    .ce0(chk2var_1_4_dram_ce0),
    .we0(chk2var_1_4_dram_we0),
    .d0(chk2var_1_4_dram_d0),
    .q0(chk2var_1_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_1_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_1_5_dram_address0),
    .ce0(chk2var_1_5_dram_ce0),
    .we0(chk2var_1_5_dram_we0),
    .d0(chk2var_1_5_dram_d0),
    .q0(chk2var_1_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_0_dram_address0),
    .ce0(chk2var_2_0_dram_ce0),
    .we0(chk2var_2_0_dram_we0),
    .d0(chk2var_2_0_dram_d0),
    .q0(chk2var_2_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_1_dram_address0),
    .ce0(chk2var_2_1_dram_ce0),
    .we0(chk2var_2_1_dram_we0),
    .d0(chk2var_2_1_dram_d0),
    .q0(chk2var_2_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_2_dram_address0),
    .ce0(chk2var_2_2_dram_ce0),
    .we0(chk2var_2_2_dram_we0),
    .d0(chk2var_2_2_dram_d0),
    .q0(chk2var_2_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_3_dram_address0),
    .ce0(chk2var_2_3_dram_ce0),
    .we0(chk2var_2_3_dram_we0),
    .d0(chk2var_2_3_dram_d0),
    .q0(chk2var_2_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_4_dram_address0),
    .ce0(chk2var_2_4_dram_ce0),
    .we0(chk2var_2_4_dram_we0),
    .d0(chk2var_2_4_dram_d0),
    .q0(chk2var_2_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
chk2var_2_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(chk2var_2_5_dram_address0),
    .ce0(chk2var_2_5_dram_ce0),
    .we0(chk2var_2_5_dram_we0),
    .d0(chk2var_2_5_dram_d0),
    .q0(chk2var_2_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_0_dram_address0),
    .ce0(var2chk_0_0_dram_ce0),
    .we0(var2chk_0_0_dram_we0),
    .d0(var2chk_0_0_dram_d0),
    .q0(var2chk_0_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_1_dram_address0),
    .ce0(var2chk_0_1_dram_ce0),
    .we0(var2chk_0_1_dram_we0),
    .d0(var2chk_0_1_dram_d0),
    .q0(var2chk_0_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_2_dram_address0),
    .ce0(var2chk_0_2_dram_ce0),
    .we0(var2chk_0_2_dram_we0),
    .d0(var2chk_0_2_dram_d0),
    .q0(var2chk_0_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_3_dram_address0),
    .ce0(var2chk_0_3_dram_ce0),
    .we0(var2chk_0_3_dram_we0),
    .d0(var2chk_0_3_dram_d0),
    .q0(var2chk_0_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_4_dram_address0),
    .ce0(var2chk_0_4_dram_ce0),
    .we0(var2chk_0_4_dram_we0),
    .d0(var2chk_0_4_dram_d0),
    .q0(var2chk_0_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_0_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_0_5_dram_address0),
    .ce0(var2chk_0_5_dram_ce0),
    .we0(var2chk_0_5_dram_we0),
    .d0(var2chk_0_5_dram_d0),
    .q0(var2chk_0_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_0_dram_address0),
    .ce0(var2chk_1_0_dram_ce0),
    .we0(var2chk_1_0_dram_we0),
    .d0(var2chk_1_0_dram_d0),
    .q0(var2chk_1_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_1_dram_address0),
    .ce0(var2chk_1_1_dram_ce0),
    .we0(var2chk_1_1_dram_we0),
    .d0(var2chk_1_1_dram_d0),
    .q0(var2chk_1_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_2_dram_address0),
    .ce0(var2chk_1_2_dram_ce0),
    .we0(var2chk_1_2_dram_we0),
    .d0(var2chk_1_2_dram_d0),
    .q0(var2chk_1_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_3_dram_address0),
    .ce0(var2chk_1_3_dram_ce0),
    .we0(var2chk_1_3_dram_we0),
    .d0(var2chk_1_3_dram_d0),
    .q0(var2chk_1_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_4_dram_address0),
    .ce0(var2chk_1_4_dram_ce0),
    .we0(var2chk_1_4_dram_we0),
    .d0(var2chk_1_4_dram_d0),
    .q0(var2chk_1_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_1_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_1_5_dram_address0),
    .ce0(var2chk_1_5_dram_ce0),
    .we0(var2chk_1_5_dram_we0),
    .d0(var2chk_1_5_dram_d0),
    .q0(var2chk_1_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_0_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_0_dram_address0),
    .ce0(var2chk_2_0_dram_ce0),
    .we0(var2chk_2_0_dram_we0),
    .d0(var2chk_2_0_dram_d0),
    .q0(var2chk_2_0_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_1_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_1_dram_address0),
    .ce0(var2chk_2_1_dram_ce0),
    .we0(var2chk_2_1_dram_we0),
    .d0(var2chk_2_1_dram_d0),
    .q0(var2chk_2_1_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_2_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_2_dram_address0),
    .ce0(var2chk_2_2_dram_ce0),
    .we0(var2chk_2_2_dram_we0),
    .d0(var2chk_2_2_dram_d0),
    .q0(var2chk_2_2_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_3_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_3_dram_address0),
    .ce0(var2chk_2_3_dram_ce0),
    .we0(var2chk_2_3_dram_we0),
    .d0(var2chk_2_3_dram_d0),
    .q0(var2chk_2_3_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_4_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_4_dram_address0),
    .ce0(var2chk_2_4_dram_ce0),
    .we0(var2chk_2_4_dram_we0),
    .d0(var2chk_2_4_dram_d0),
    .q0(var2chk_2_4_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
var2chk_2_5_dram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(var2chk_2_5_dram_address0),
    .ce0(var2chk_2_5_dram_ce0),
    .we0(var2chk_2_5_dram_we0),
    .d0(var2chk_2_5_dram_d0),
    .q0(var2chk_2_5_dram_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_0_address0),
    .ce0(soft_dec_tmp_0_ce0),
    .we0(soft_dec_tmp_0_we0),
    .d0(grp_fu_2844_p2),
    .q0(soft_dec_tmp_0_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_1_address0),
    .ce0(soft_dec_tmp_1_ce0),
    .we0(soft_dec_tmp_1_we0),
    .d0(grp_fu_2850_p2),
    .q0(soft_dec_tmp_1_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_2_address0),
    .ce0(soft_dec_tmp_2_ce0),
    .we0(soft_dec_tmp_2_we0),
    .d0(grp_fu_2856_p2),
    .q0(soft_dec_tmp_2_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_3_address0),
    .ce0(soft_dec_tmp_3_ce0),
    .we0(soft_dec_tmp_3_we0),
    .d0(grp_fu_2862_p2),
    .q0(soft_dec_tmp_3_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_4_address0),
    .ce0(soft_dec_tmp_4_ce0),
    .we0(soft_dec_tmp_4_we0),
    .d0(grp_fu_2868_p2),
    .q0(soft_dec_tmp_4_q0)
);

min_sum_dec_noisycud #(
    .DataWidth( 32 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
soft_dec_tmp_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(soft_dec_tmp_5_address0),
    .ce0(soft_dec_tmp_5_ce0),
    .we0(soft_dec_tmp_5_we0),
    .d0(grp_fu_2874_p2),
    .q0(soft_dec_tmp_5_q0)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_0_V_address0),
    .ce0(hard_dec_tmp_0_V_ce0),
    .we0(hard_dec_tmp_0_V_we0),
    .d0(hard_dec_tmp_0_V_d0),
    .q0(hard_dec_tmp_0_V_q0),
    .address1(hard_dec_tmp_0_V_address1),
    .ce1(hard_dec_tmp_0_V_ce1),
    .q1(hard_dec_tmp_0_V_q1)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_1_V_address0),
    .ce0(hard_dec_tmp_1_V_ce0),
    .we0(hard_dec_tmp_1_V_we0),
    .d0(hard_dec_tmp_1_V_d0),
    .q0(hard_dec_tmp_1_V_q0),
    .address1(hard_dec_tmp_1_V_address1),
    .ce1(hard_dec_tmp_1_V_ce1),
    .q1(hard_dec_tmp_1_V_q1)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_2_V_address0),
    .ce0(hard_dec_tmp_2_V_ce0),
    .we0(hard_dec_tmp_2_V_we0),
    .d0(hard_dec_tmp_2_V_d0),
    .q0(hard_dec_tmp_2_V_q0),
    .address1(hard_dec_tmp_2_V_address1),
    .ce1(hard_dec_tmp_2_V_ce1),
    .q1(hard_dec_tmp_2_V_q1)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_3_V_address0),
    .ce0(hard_dec_tmp_3_V_ce0),
    .we0(hard_dec_tmp_3_V_we0),
    .d0(hard_dec_tmp_3_V_d0),
    .q0(hard_dec_tmp_3_V_q0),
    .address1(hard_dec_tmp_3_V_address1),
    .ce1(hard_dec_tmp_3_V_ce1),
    .q1(hard_dec_tmp_3_V_q1)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_4_V_address0),
    .ce0(hard_dec_tmp_4_V_ce0),
    .we0(hard_dec_tmp_4_V_we0),
    .d0(hard_dec_tmp_4_V_d0),
    .q0(hard_dec_tmp_4_V_q0),
    .address1(hard_dec_tmp_4_V_address1),
    .ce1(hard_dec_tmp_4_V_ce1),
    .q1(hard_dec_tmp_4_V_q1)
);

min_sum_dec_hard_4jc #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
hard_dec_tmp_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hard_dec_tmp_5_V_address0),
    .ce0(hard_dec_tmp_5_V_ce0),
    .we0(hard_dec_tmp_5_V_we0),
    .d0(hard_dec_tmp_5_V_d0),
    .q0(hard_dec_tmp_5_V_q0),
    .address1(hard_dec_tmp_5_V_address1),
    .ce1(hard_dec_tmp_5_V_ce1),
    .q1(hard_dec_tmp_5_V_q1)
);

min_sum_dec_syndrbak #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
syndrome_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(syndrome_0_V_address0),
    .ce0(syndrome_0_V_ce0),
    .we0(syndrome_0_V_we0),
    .d0(syndrome_0_V_d0),
    .q0(syndrome_0_V_q0)
);

min_sum_dec_syndrbak #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
syndrome_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(syndrome_1_V_address0),
    .ce0(syndrome_1_V_ce0),
    .we0(syndrome_1_V_we0),
    .d0(syndrome_1_V_d0),
    .q0(syndrome_1_V_q0)
);

min_sum_dec_syndrbak #(
    .DataWidth( 1 ),
    .AddressRange( 167 ),
    .AddressWidth( 8 ))
syndrome_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(syndrome_2_V_address0),
    .ce0(syndrome_2_V_ce0),
    .we0(syndrome_2_V_we0),
    .d0(syndrome_2_V_d0),
    .q0(syndrome_2_V_q0)
);

fminf x_assign_1_fminf_fu_2448(
    .x(x_assign_s_fu_5894_p1),
    .y(y_assign_9_fu_5907_p1),
    .ap_return(x_assign_1_fminf_fu_2448_ap_return)
);

fminf y_assign_fminf_fu_2454(
    .x(x_assign_2_fu_5920_p1),
    .y(y_assign_s_fu_5933_p1),
    .ap_return(y_assign_fminf_fu_2454_ap_return)
);

fminf x_assign_3_fminf_fu_2460(
    .x(y_assign_9_fu_5907_p1),
    .y(x_assign_2_fu_5920_p1),
    .ap_return(x_assign_3_fminf_fu_2460_ap_return)
);

fminf y_assign_2_fminf_fu_2466(
    .x(y_assign_s_fu_5933_p1),
    .y(y_assign_1_fu_5946_p1),
    .ap_return(y_assign_2_fminf_fu_2466_ap_return)
);

fminf y_assign_4_fminf_fu_2472(
    .x(y_assign_1_fu_5946_p1),
    .y(y_assign_3_fu_5959_p1),
    .ap_return(y_assign_4_fminf_fu_2472_ap_return)
);

fminf y_assign_5_fminf_fu_2478(
    .x(y_assign_3_fu_5959_p1),
    .y(x_assign_s_fu_5894_p1),
    .ap_return(y_assign_5_fminf_fu_2478_ap_return)
);

fminf x_assign_11_fminf_fu_2484(
    .x(x_assign_10_fu_5972_p1),
    .y(y_assign_6_fu_5985_p1),
    .ap_return(x_assign_11_fminf_fu_2484_ap_return)
);

fminf y_assign_8_fminf_fu_2490(
    .x(x_assign_12_fu_5998_p1),
    .y(y_assign_7_fu_6011_p1),
    .ap_return(y_assign_8_fminf_fu_2490_ap_return)
);

fminf x_assign_14_fminf_fu_2496(
    .x(y_assign_6_fu_5985_p1),
    .y(x_assign_12_fu_5998_p1),
    .ap_return(x_assign_14_fminf_fu_2496_ap_return)
);

fminf y_assign_11_fminf_fu_2502(
    .x(y_assign_7_fu_6011_p1),
    .y(y_assign_10_fu_6024_p1),
    .ap_return(y_assign_11_fminf_fu_2502_ap_return)
);

fminf y_assign_13_fminf_fu_2508(
    .x(y_assign_10_fu_6024_p1),
    .y(y_assign_12_fu_6037_p1),
    .ap_return(y_assign_13_fminf_fu_2508_ap_return)
);

fminf y_assign_14_fminf_fu_2514(
    .x(y_assign_12_fu_6037_p1),
    .y(x_assign_10_fu_5972_p1),
    .ap_return(y_assign_14_fminf_fu_2514_ap_return)
);

fminf x_assign_21_fminf_fu_2520(
    .x(x_assign_20_fu_6050_p1),
    .y(y_assign_15_fu_6063_p1),
    .ap_return(x_assign_21_fminf_fu_2520_ap_return)
);

fminf y_assign_17_fminf_fu_2526(
    .x(x_assign_22_fu_6076_p1),
    .y(y_assign_16_fu_6089_p1),
    .ap_return(y_assign_17_fminf_fu_2526_ap_return)
);

fminf x_assign_24_fminf_fu_2532(
    .x(y_assign_15_fu_6063_p1),
    .y(x_assign_22_fu_6076_p1),
    .ap_return(x_assign_24_fminf_fu_2532_ap_return)
);

fminf y_assign_19_fminf_fu_2538(
    .x(y_assign_16_fu_6089_p1),
    .y(y_assign_18_fu_6102_p1),
    .ap_return(y_assign_19_fminf_fu_2538_ap_return)
);

fminf y_assign_21_fminf_fu_2544(
    .x(y_assign_18_fu_6102_p1),
    .y(y_assign_20_fu_6115_p1),
    .ap_return(y_assign_21_fminf_fu_2544_ap_return)
);

fminf y_assign_22_fminf_fu_2550(
    .x(y_assign_20_fu_6115_p1),
    .y(x_assign_20_fu_6050_p1),
    .ap_return(y_assign_22_fminf_fu_2550_ap_return)
);

fminf x_assign_6_fminf_fu_2556(
    .x(x_assign_1_reg_9274),
    .y(y_assign_reg_9290),
    .ap_return(x_assign_6_fminf_fu_2556_ap_return)
);

fminf x_assign_4_fminf_fu_2562(
    .x(x_assign_3_reg_9301),
    .y(y_assign_2_reg_9307),
    .ap_return(x_assign_4_fminf_fu_2562_ap_return)
);

fminf x_assign_5_fminf_fu_2568(
    .x(y_assign_reg_9290),
    .y(y_assign_4_reg_9318),
    .ap_return(x_assign_5_fminf_fu_2568_ap_return)
);

fminf x_assign_7_fminf_fu_2574(
    .x(y_assign_2_reg_9307),
    .y(y_assign_5_reg_9324),
    .ap_return(x_assign_7_fminf_fu_2574_ap_return)
);

fminf x_assign_8_fminf_fu_2580(
    .x(y_assign_4_reg_9318),
    .y(x_assign_1_reg_9274),
    .ap_return(x_assign_8_fminf_fu_2580_ap_return)
);

fminf x_assign_9_fminf_fu_2586(
    .x(y_assign_5_reg_9324),
    .y(x_assign_3_reg_9301),
    .ap_return(x_assign_9_fminf_fu_2586_ap_return)
);

fminf x_assign_13_fminf_fu_2592(
    .x(x_assign_11_reg_9340),
    .y(y_assign_8_reg_9356),
    .ap_return(x_assign_13_fminf_fu_2592_ap_return)
);

fminf x_assign_15_fminf_fu_2598(
    .x(x_assign_14_reg_9367),
    .y(y_assign_11_reg_9373),
    .ap_return(x_assign_15_fminf_fu_2598_ap_return)
);

fminf x_assign_16_fminf_fu_2604(
    .x(y_assign_8_reg_9356),
    .y(y_assign_13_reg_9384),
    .ap_return(x_assign_16_fminf_fu_2604_ap_return)
);

fminf x_assign_17_fminf_fu_2610(
    .x(y_assign_11_reg_9373),
    .y(y_assign_14_reg_9390),
    .ap_return(x_assign_17_fminf_fu_2610_ap_return)
);

fminf x_assign_18_fminf_fu_2616(
    .x(y_assign_13_reg_9384),
    .y(x_assign_11_reg_9340),
    .ap_return(x_assign_18_fminf_fu_2616_ap_return)
);

fminf x_assign_19_fminf_fu_2622(
    .x(y_assign_14_reg_9390),
    .y(x_assign_14_reg_9367),
    .ap_return(x_assign_19_fminf_fu_2622_ap_return)
);

fminf x_assign_23_fminf_fu_2628(
    .x(x_assign_21_reg_9406),
    .y(y_assign_17_reg_9422),
    .ap_return(x_assign_23_fminf_fu_2628_ap_return)
);

fminf x_assign_25_fminf_fu_2634(
    .x(x_assign_24_reg_9433),
    .y(y_assign_19_reg_9439),
    .ap_return(x_assign_25_fminf_fu_2634_ap_return)
);

fminf x_assign_26_fminf_fu_2640(
    .x(y_assign_17_reg_9422),
    .y(y_assign_21_reg_9450),
    .ap_return(x_assign_26_fminf_fu_2640_ap_return)
);

fminf x_assign_27_fminf_fu_2646(
    .x(y_assign_19_reg_9439),
    .y(y_assign_22_reg_9456),
    .ap_return(x_assign_27_fminf_fu_2646_ap_return)
);

fminf x_assign_28_fminf_fu_2652(
    .x(y_assign_21_reg_9450),
    .y(x_assign_21_reg_9406),
    .ap_return(x_assign_28_fminf_fu_2652_ap_return)
);

fminf x_assign_29_fminf_fu_2658(
    .x(y_assign_22_reg_9456),
    .y(x_assign_24_reg_9433),
    .ap_return(x_assign_29_fminf_fu_2658_ap_return)
);

fminf tmp_i_fminf_fu_2664(
    .x(x_assign_6_reg_9462),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296),
    .ap_return(tmp_i_fminf_fu_2664_ap_return)
);

fminf tmp_i5_fminf_fu_2670(
    .x(x_assign_4_reg_9467),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313),
    .ap_return(tmp_i5_fminf_fu_2670_ap_return)
);

fminf tmp_i8_fminf_fu_2676(
    .x(x_assign_5_reg_9472),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264),
    .ap_return(tmp_i8_fminf_fu_2676_ap_return)
);

fminf tmp_i1_fminf_fu_2682(
    .x(x_assign_7_reg_9477),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269),
    .ap_return(tmp_i1_fminf_fu_2682_ap_return)
);

fminf tmp_i2_fminf_fu_2688(
    .x(x_assign_8_reg_9482),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280),
    .ap_return(tmp_i2_fminf_fu_2688_ap_return)
);

fminf tmp_i3_fminf_fu_2694(
    .x(x_assign_9_reg_9487),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285),
    .ap_return(tmp_i3_fminf_fu_2694_ap_return)
);

fminf tmp_i4_fminf_fu_2700(
    .x(x_assign_13_reg_9492),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362),
    .ap_return(tmp_i4_fminf_fu_2700_ap_return)
);

fminf tmp_i6_fminf_fu_2706(
    .x(x_assign_15_reg_9497),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379),
    .ap_return(tmp_i6_fminf_fu_2706_ap_return)
);

fminf tmp_i7_fminf_fu_2712(
    .x(x_assign_16_reg_9502),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330),
    .ap_return(tmp_i7_fminf_fu_2712_ap_return)
);

fminf tmp_i9_fminf_fu_2718(
    .x(x_assign_17_reg_9507),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335),
    .ap_return(tmp_i9_fminf_fu_2718_ap_return)
);

fminf tmp_i10_fminf_fu_2724(
    .x(x_assign_18_reg_9512),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346),
    .ap_return(tmp_i10_fminf_fu_2724_ap_return)
);

fminf tmp_i11_fminf_fu_2730(
    .x(x_assign_19_reg_9517),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351),
    .ap_return(tmp_i11_fminf_fu_2730_ap_return)
);

fminf tmp_i12_fminf_fu_2736(
    .x(x_assign_23_reg_9522),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428),
    .ap_return(tmp_i12_fminf_fu_2736_ap_return)
);

fminf tmp_i13_fminf_fu_2742(
    .x(x_assign_25_reg_9527),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445),
    .ap_return(tmp_i13_fminf_fu_2742_ap_return)
);

fminf tmp_i14_fminf_fu_2748(
    .x(x_assign_26_reg_9532),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396),
    .ap_return(tmp_i14_fminf_fu_2748_ap_return)
);

fminf tmp_i15_fminf_fu_2754(
    .x(x_assign_27_reg_9537),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401),
    .ap_return(tmp_i15_fminf_fu_2754_ap_return)
);

fminf tmp_i16_fminf_fu_2760(
    .x(x_assign_28_reg_9542),
    .y(ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412),
    .ap_return(tmp_i16_fminf_fu_2760_ap_return)
);

fminf tmp_i17_fminf_fu_2766(
    .x(x_assign_29_reg_9547),
    .y(ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417),
    .ap_return(tmp_i17_fminf_fu_2766_ap_return)
);

set_dram StgValue_531_set_dram_fu_2772(
    .circular_ram_0_dram_address0(StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3228)
);

set_dram StgValue_532_set_dram_fu_2784(
    .circular_ram_0_dram_address0(StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3236)
);

set_dram StgValue_533_set_dram_fu_2796(
    .circular_ram_0_dram_address0(StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3244)
);

set_dram StgValue_534_set_dram_fu_2808(
    .circular_ram_0_dram_address0(StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3252)
);

set_dram StgValue_535_set_dram_fu_2820(
    .circular_ram_0_dram_address0(StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3260)
);

set_dram StgValue_536_set_dram_fu_2832(
    .circular_ram_0_dram_address0(StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0),
    .circular_ram_0_dram_ce0(StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0),
    .circular_ram_0_dram_we0(StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0),
    .circular_ram_0_dram_d0(StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0),
    .circular_ram_1_dram_address0(StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0),
    .circular_ram_1_dram_ce0(StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0),
    .circular_ram_1_dram_we0(StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0),
    .circular_ram_1_dram_d0(StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0),
    .circular_ram_2_dram_address0(StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0),
    .circular_ram_2_dram_ce0(StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0),
    .circular_ram_2_dram_we0(StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0),
    .circular_ram_2_dram_d0(StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0),
    .tmp_36(jdx_2_reg_2267),
    .i(idx_2_reg_2255),
    .tmp(reg_3268)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2844_p0),
    .din1(grp_fu_2844_p1),
    .ce(1'b1),
    .dout(grp_fu_2844_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2850_p0),
    .din1(grp_fu_2850_p1),
    .ce(1'b1),
    .dout(grp_fu_2850_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2856_p0),
    .din1(grp_fu_2856_p1),
    .ce(1'b1),
    .dout(grp_fu_2856_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2862_p0),
    .din1(grp_fu_2862_p1),
    .ce(1'b1),
    .dout(grp_fu_2862_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2868_p0),
    .din1(grp_fu_2868_p1),
    .ce(1'b1),
    .dout(grp_fu_2868_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2874_p0),
    .din1(grp_fu_2874_p1),
    .ce(1'b1),
    .dout(grp_fu_2874_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_2_q0),
    .din1(chk2var_1_2_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2880_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_2_q0),
    .din1(chk2var_2_2_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2886_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_2_q0),
    .din1(chk2var_0_2_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2892_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_3_q0),
    .din1(chk2var_1_3_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2898_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_3_q0),
    .din1(chk2var_2_3_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2904_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_3_q0),
    .din1(chk2var_0_3_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2910_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_4_q0),
    .din1(chk2var_1_4_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2916_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_4_q0),
    .din1(chk2var_2_4_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2922_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_4_q0),
    .din1(chk2var_0_4_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2928_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_5_q0),
    .din1(chk2var_1_5_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2934_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_5_q0),
    .din1(chk2var_2_5_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2940_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(llr_vec_5_q0),
    .din1(chk2var_0_5_dram_q0),
    .ce(1'b1),
    .dout(grp_fu_2946_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_reg_9883),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817),
    .ce(1'b1),
    .dout(grp_fu_2952_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_0_1_reg_9888),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3276),
    .ce(1'b1),
    .dout(grp_fu_2957_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_0_2_reg_9893),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811),
    .ce(1'b1),
    .dout(grp_fu_2962_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_1_reg_9898),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829),
    .ce(1'b1),
    .dout(grp_fu_2967_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_1_1_reg_9903),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3283),
    .ce(1'b1),
    .dout(grp_fu_2972_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_1_2_reg_9908),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823),
    .ce(1'b1),
    .dout(grp_fu_2977_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_2_reg_9913),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841),
    .ce(1'b1),
    .dout(grp_fu_2982_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_2_1_reg_9918),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3290),
    .ce(1'b1),
    .dout(grp_fu_2987_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_2_2_reg_9923),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835),
    .ce(1'b1),
    .dout(grp_fu_2992_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_3_reg_9928),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853),
    .ce(1'b1),
    .dout(grp_fu_2997_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_3_1_reg_9933),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3297),
    .ce(1'b1),
    .dout(grp_fu_3002_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_3_2_reg_9938),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847),
    .ce(1'b1),
    .dout(grp_fu_3007_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_4_reg_9943),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865),
    .ce(1'b1),
    .dout(grp_fu_3012_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_4_1_reg_9948),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3304),
    .ce(1'b1),
    .dout(grp_fu_3017_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_4_2_reg_9953),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859),
    .ce(1'b1),
    .dout(grp_fu_3022_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_5_reg_9958),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877),
    .ce(1'b1),
    .dout(grp_fu_3027_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_5_1_reg_9963),
    .din1(ap_pipeline_reg_pp1_iter4_reg_3311),
    .ce(1'b1),
    .dout(grp_fu_3032_p2)
);

min_sum_dec_fadd_bdk #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fadd_bdk_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_94_5_2_reg_9968),
    .din1(ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871),
    .ce(1'b1),
    .dout(grp_fu_3037_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_0_lo_reg_8672),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3060_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_1_lo_reg_8677),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3065_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_2_lo_reg_8682),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3070_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_3_lo_reg_8687),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3075_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U49(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_4_lo_reg_8692),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3080_p2)
);

min_sum_dec_fmul_bek #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fmul_bek_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(noisy_input_vec_5_lo_reg_8697),
    .din1(ap_const_lv32_C0000000),
    .ce(1'b1),
    .dout(grp_fu_3085_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U51(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_10_reg_8702),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3090_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U52(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_32_1_reg_8707),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3094_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U53(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_32_2_reg_8712),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3098_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U54(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_32_3_reg_8717),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3102_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U55(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_32_4_reg_8722),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3106_p2)
);

min_sum_dec_fdiv_bfk #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
min_sum_dec_fdiv_bfk_U56(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_32_5_reg_8727),
    .din1(variance),
    .ce(1'b1),
    .dout(grp_fu_3110_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U57(
    .din0(grp_fu_3114_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3114_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U58(
    .din0(grp_fu_3120_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3120_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U59(
    .din0(grp_fu_3126_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3126_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U60(
    .din0(grp_fu_3132_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3132_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U61(
    .din0(grp_fu_3138_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3138_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U62(
    .din0(grp_fu_3144_p0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_3144_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U63(
    .din0(var2chk_1_1_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_128_fu_3150_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U64(
    .din0(var2chk_1_2_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_133_fu_3156_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U65(
    .din0(var2chk_1_3_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_138_fu_3162_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U66(
    .din0(var2chk_1_4_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_143_fu_3168_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U67(
    .din0(var2chk_1_5_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_148_fu_3174_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U68(
    .din0(var2chk_1_0_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_154_fu_3180_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U69(
    .din0(var2chk_2_1_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_166_fu_3186_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U70(
    .din0(var2chk_2_2_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_171_fu_3192_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U71(
    .din0(var2chk_2_3_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_176_fu_3198_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U72(
    .din0(var2chk_2_4_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_181_fu_3204_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U73(
    .din0(var2chk_2_5_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_186_fu_3210_p2)
);

min_sum_dec_fcmp_bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
min_sum_dec_fcmp_bgk_U74(
    .din0(var2chk_2_0_dram_q0),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_192_fu_3216_p2)
);

min_sum_dec_mux_6bhl #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
min_sum_dec_mux_6bhl_U75(
    .din1(hard_dec_tmp_0_V_q1),
    .din2(hard_dec_tmp_1_V_q1),
    .din3(hard_dec_tmp_2_V_q1),
    .din4(hard_dec_tmp_3_V_q0),
    .din5(hard_dec_tmp_4_V_q1),
    .din6(hard_dec_tmp_5_V_q1),
    .din7(idx_0_i1_reg_2380),
    .dout(tmp_156_fu_8430_p8)
);

min_sum_dec_mux_6bil #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
min_sum_dec_mux_6bil_U76(
    .din1(soft_dec_tmp_0_q0),
    .din2(soft_dec_tmp_1_q0),
    .din3(soft_dec_tmp_2_q0),
    .din4(soft_dec_tmp_3_q0),
    .din5(soft_dec_tmp_4_q0),
    .din6(soft_dec_tmp_5_q0),
    .din7(idx_1_i_reg_2414),
    .dout(tmp_157_fu_8503_p8)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_17_fu_4107_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state30) & (1'b0 == tmp_15_fu_4095_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == tmp_17_fu_4107_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state30) & (1'b0 == tmp_15_fu_4095_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~(1'b0 == tmp_17_fu_4107_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == tmp_20_fu_6553_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == tmp_20_fu_6553_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state37) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~(1'b0 == tmp_20_fu_6553_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_hard_dec_out_AWREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state61) & (1'b0 == tmp_36_fu_8385_p2))) begin
            if (~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY))) begin
                ap_reg_ioackin_hard_dec_out_AWREADY <= 1'b0;
            end else if ((1'b1 == hard_dec_out_AWREADY)) begin
                ap_reg_ioackin_hard_dec_out_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_hard_dec_out_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state64)) begin
            if (~(1'b0 == ap_sig_ioackin_hard_dec_out_WREADY)) begin
                ap_reg_ioackin_hard_dec_out_WREADY <= 1'b0;
            end else if ((1'b1 == hard_dec_out_WREADY)) begin
                ap_reg_ioackin_hard_dec_out_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_noisy_input_ARREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_3706_p2 == 1'b0))) begin
            if (~((tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_noisy_input_ARREADY))) begin
                ap_reg_ioackin_noisy_input_ARREADY <= 1'b0;
            end else if ((1'b1 == noisy_input_ARREADY)) begin
                ap_reg_ioackin_noisy_input_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_soft_dec_out_AWREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state69) & (1'b0 == tmp_38_fu_8458_p2))) begin
            if (~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY))) begin
                ap_reg_ioackin_soft_dec_out_AWREADY <= 1'b0;
            end else if ((1'b1 == soft_dec_out_AWREADY)) begin
                ap_reg_ioackin_soft_dec_out_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_soft_dec_out_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state72)) begin
            if (~(1'b0 == ap_sig_ioackin_soft_dec_out_WREADY)) begin
                ap_reg_ioackin_soft_dec_out_WREADY <= 1'b0;
            end else if ((1'b1 == soft_dec_out_WREADY)) begin
                ap_reg_ioackin_soft_dec_out_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_assign_1_reg_2301 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == tmp_20_fu_6553_p2))) begin
        i_assign_1_reg_2301 <= idx_5_fu_6559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (1'b0 == tmp_15_fu_4095_p2))) begin
        i_assign_2_reg_2289 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == tmp_17_reg_9003))) begin
        i_assign_2_reg_2289 <= idx_15_reg_9007;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        i_assign_reg_2312 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        i_assign_reg_2312 <= idx_6_reg_9976;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & ~(hard_dec_out_BVALID == 1'b0))) begin
        idx_0_i1_reg_2380 <= idx_13_reg_10336;
    end else if (((1'b1 == ap_CS_fsm_state59) & (~(1'b0 == tmp_15_reg_8994) | (~(1'b0 == tmp_34_fu_8342_p2) & ~(1'b0 == p_1_phi_fu_2361_p4))))) begin
        idx_0_i1_reg_2380 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_s_fu_3318_p2))) begin
        idx_0_i_reg_2210 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)) & ~(1'b0 == tmp_9_fu_3729_p2))) begin
        idx_0_i_reg_2210 <= idx_3_reg_8555;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) & ~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)) & ~(1'b0 == tmp_36_fu_8385_p2))) begin
        idx_1_i_reg_2414 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_CS_fsm_state76) & ~(soft_dec_out_BVALID == 1'b0))) begin
        idx_1_i_reg_2414 <= idx_14_reg_10397;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & ~(1'b0 == tmp_8_fu_3751_p2))) begin
        idx_2_reg_2255 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state29) & ~(1'b0 == tmp_16_fu_4083_p2))) begin
        idx_2_reg_2255 <= idx_4_reg_8765;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & ~(1'b0 == tmp_28_fu_7421_p2))) begin
        idx_7_reg_2334 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_30_fu_7701_p2))) begin
        idx_7_reg_2334 <= idx_10_fu_7707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & ~(1'b0 == tmp_30_fu_7701_p2))) begin
        idx_8_reg_2345 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        idx_8_reg_2345 <= idx_11_reg_10155;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) & ~(1'b0 == tmp_32_fu_7724_p2))) begin
        idx_9_reg_2369 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        idx_9_reg_2369 <= idx_12_reg_10303;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == tmp_3_fu_3360_p2))) begin
        idx_reg_2186 <= idx_1_reg_8524;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        idx_reg_2186 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) & (1'b0 == tmp_36_fu_8385_p2) & ~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)))) begin
        jdx_0_i1_reg_2403 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state64) & ~(1'b0 == ap_sig_ioackin_hard_dec_out_WREADY))) begin
        jdx_0_i1_reg_2403 <= jdx_9_reg_10349;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        jdx_0_i_reg_2233 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        jdx_0_i_reg_2233 <= jdx_6_reg_8579;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'b0 == tmp_38_fu_8458_p2) & ~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)))) begin
        jdx_1_i_reg_2437 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_CS_fsm_state72) & ~(1'b0 == ap_sig_ioackin_soft_dec_out_WREADY))) begin
        jdx_1_i_reg_2437 <= jdx_10_reg_10410;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~((tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_noisy_input_ARREADY)) & ~(tmp_2_fu_3706_p2 == 1'b0))) begin
        jdx_1_reg_2244 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        jdx_1_reg_2244 <= jdx_3_reg_8627;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        jdx_2_reg_2267 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        jdx_2_reg_2267 <= jdx_4_fu_4089_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & ~(1'b0 == tmp_23_fu_7195_p2))) begin
        jdx_5_reg_2323 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        jdx_5_reg_2323 <= jdx_7_reg_10084;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_s_fu_3318_p2))) begin
        jdx_reg_2198 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        jdx_reg_2198 <= jdx_8_reg_8537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == tmp_15_reg_8994) & (1'b0 == p_1_phi_fu_2361_p4) & ~(1'b0 == tmp_34_fu_8342_p2))) begin
        n_iter_reg_2278 <= n_iter_1_reg_8998;
    end else if (((1'b1 == ap_CS_fsm_state27) & ~(1'b0 == tmp_13_fu_3773_p2))) begin
        n_iter_reg_2278 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) & ~(1'b0 == tmp_32_fu_7724_p2))) begin
        p_1_reg_2357 <= 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p_1_reg_2357 <= done_V_2_fu_8373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & ~(hard_dec_out_BVALID == 1'b0))) begin
        phi_mul7_reg_2392 <= next_mul8_reg_10328;
    end else if (((1'b1 == ap_CS_fsm_state59) & (~(1'b0 == tmp_15_reg_8994) | (~(1'b0 == tmp_34_fu_8342_p2) & ~(1'b0 == p_1_phi_fu_2361_p4))))) begin
        phi_mul7_reg_2392 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) & ~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)) & ~(1'b0 == tmp_36_fu_8385_p2))) begin
        phi_mul9_reg_2426 <= ap_const_lv10_0;
    end else if (((1'b1 == ap_CS_fsm_state76) & ~(soft_dec_out_BVALID == 1'b0))) begin
        phi_mul9_reg_2426 <= next_mul1_reg_10389;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_s_fu_3318_p2))) begin
        phi_mul_reg_2222 <= ap_const_lv10_0;
    end else if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)) & ~(1'b0 == tmp_9_fu_3729_p2))) begin
        phi_mul_reg_2222 <= next_mul_reg_8547;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289 <= i_assign_2_reg_2289;
        sign_product_0_1_reg_9136 <= sign_product_0_1_fu_5053_p2;
        sign_product_0_2_reg_9140 <= sign_product_0_2_fu_5077_p2;
        sign_product_0_3_reg_9144 <= sign_product_0_3_fu_5089_p2;
        sign_product_0_4_reg_9148 <= sign_product_0_4_fu_5101_p2;
        sign_product_0_5_reg_9152 <= sign_product_0_5_fu_5113_p2;
        sign_product_1_1_reg_9190 <= sign_product_1_1_fu_5437_p2;
        sign_product_1_2_reg_9194 <= sign_product_1_2_fu_5461_p2;
        sign_product_1_3_reg_9198 <= sign_product_1_3_fu_5473_p2;
        sign_product_1_4_reg_9202 <= sign_product_1_4_fu_5485_p2;
        sign_product_1_5_reg_9206 <= sign_product_1_5_fu_5497_p2;
        sign_product_1_reg_9181 <= sign_product_1_fu_5367_p2;
        sign_product_2_1_reg_9244 <= sign_product_2_1_fu_5821_p2;
        sign_product_2_2_reg_9248 <= sign_product_2_2_fu_5845_p2;
        sign_product_2_3_reg_9252 <= sign_product_2_3_fu_5857_p2;
        sign_product_2_4_reg_9256 <= sign_product_2_4_fu_5869_p2;
        sign_product_2_5_reg_9260 <= sign_product_2_5_fu_5881_p2;
        sign_product_2_reg_9235 <= sign_product_2_fu_5751_p2;
        sign_product_reg_9127 <= sign_product_fu_4983_p2;
        tmp_122_reg_9102 <= tmp_122_fu_4739_p1;
        tmp_123_reg_9107 <= tmp_123_fu_4747_p1;
        tmp_124_reg_9112 <= tmp_124_fu_4755_p1;
        tmp_126_reg_9117 <= tmp_126_fu_4763_p1;
        tmp_131_reg_9122 <= tmp_131_fu_4771_p1;
        tmp_158_reg_9131 <= tmp_158_fu_4993_p1;
        tmp_17_reg_9003 <= tmp_17_fu_4107_p2;
        tmp_222_reg_9156 <= tmp_222_fu_5123_p1;
        tmp_223_reg_9161 <= tmp_223_fu_5131_p1;
        tmp_224_reg_9166 <= tmp_224_fu_5139_p1;
        tmp_225_reg_9171 <= tmp_225_fu_5147_p1;
        tmp_226_reg_9176 <= tmp_226_fu_5155_p1;
        tmp_232_reg_9185 <= tmp_232_fu_5377_p1;
        tmp_236_reg_9210 <= tmp_236_fu_5507_p1;
        tmp_237_reg_9215 <= tmp_237_fu_5515_p1;
        tmp_238_reg_9220 <= tmp_238_fu_5523_p1;
        tmp_239_reg_9225 <= tmp_239_fu_5531_p1;
        tmp_240_reg_9230 <= tmp_240_fu_5539_p1;
        tmp_246_reg_9239 <= tmp_246_fu_5761_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289;
        ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136 <= sign_product_0_1_reg_9136;
        ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140 <= sign_product_0_2_reg_9140;
        ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144 <= sign_product_0_3_reg_9144;
        ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148 <= sign_product_0_4_reg_9148;
        ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152 <= sign_product_0_5_reg_9152;
        ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190 <= sign_product_1_1_reg_9190;
        ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194 <= sign_product_1_2_reg_9194;
        ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198 <= sign_product_1_3_reg_9198;
        ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202 <= sign_product_1_4_reg_9202;
        ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206 <= sign_product_1_5_reg_9206;
        ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181 <= sign_product_1_reg_9181;
        ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244 <= sign_product_2_1_reg_9244;
        ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248 <= sign_product_2_2_reg_9248;
        ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252 <= sign_product_2_3_reg_9252;
        ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256 <= sign_product_2_4_reg_9256;
        ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260 <= sign_product_2_5_reg_9260;
        ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235 <= sign_product_2_reg_9235;
        ap_pipeline_reg_pp0_iter2_sign_product_reg_9127 <= sign_product_reg_9127;
        ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289;
        ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136 <= ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136;
        ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140 <= ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140;
        ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144 <= ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144;
        ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148 <= ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148;
        ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152 <= ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152;
        ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190 <= ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190;
        ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194 <= ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194;
        ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198 <= ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198;
        ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202 <= ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202;
        ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206 <= ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206;
        ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181 <= ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181;
        ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244 <= ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244;
        ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248 <= ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248;
        ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252 <= ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252;
        ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256 <= ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256;
        ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260 <= ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260;
        ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235 <= ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235;
        ap_pipeline_reg_pp0_iter3_sign_product_reg_9127 <= ap_pipeline_reg_pp0_iter2_sign_product_reg_9127;
        ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330[30 : 0] <= x_assign_10_reg_9330[30 : 0];
        ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346[30 : 0] <= x_assign_12_reg_9346[30 : 0];
        ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396[30 : 0] <= x_assign_20_reg_9396[30 : 0];
        ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412[30 : 0] <= x_assign_22_reg_9412[30 : 0];
        ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280[30 : 0] <= x_assign_2_reg_9280[30 : 0];
        ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264[30 : 0] <= x_assign_s_reg_9264[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362[30 : 0] <= y_assign_10_reg_9362[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379[30 : 0] <= y_assign_12_reg_9379[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401[30 : 0] <= y_assign_15_reg_9401[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417[30 : 0] <= y_assign_16_reg_9417[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428[30 : 0] <= y_assign_18_reg_9428[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296[30 : 0] <= y_assign_1_reg_9296[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445[30 : 0] <= y_assign_20_reg_9445[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313[30 : 0] <= y_assign_3_reg_9313[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335[30 : 0] <= y_assign_6_reg_9335[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351[30 : 0] <= y_assign_7_reg_9351[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269[30 : 0] <= y_assign_9_reg_9269[30 : 0];
        ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285[30 : 0] <= y_assign_s_reg_9285[30 : 0];
        ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289;
        ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136 <= ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136;
        ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140 <= ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140;
        ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144 <= ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144;
        ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148 <= ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148;
        ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152 <= ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152;
        ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190 <= ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190;
        ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194 <= ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194;
        ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198 <= ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198;
        ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202 <= ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202;
        ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206 <= ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206;
        ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181 <= ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181;
        ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244 <= ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244;
        ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248 <= ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248;
        ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252 <= ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252;
        ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256 <= ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256;
        ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260 <= ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260;
        ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235 <= ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235;
        ap_pipeline_reg_pp0_iter4_sign_product_reg_9127 <= ap_pipeline_reg_pp0_iter3_sign_product_reg_9127;
        ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811 <= chk2var_1_0_dram_l_reg_9811;
        ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823 <= chk2var_1_1_dram_l_reg_9823;
        ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835 <= chk2var_1_2_dram_l_reg_9835;
        ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847 <= chk2var_1_3_dram_l_reg_9847;
        ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859 <= chk2var_1_4_dram_l_reg_9859;
        ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871 <= chk2var_1_5_dram_l_reg_9871;
        ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817 <= chk2var_2_0_dram_l_reg_9817;
        ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829 <= chk2var_2_1_dram_l_reg_9829;
        ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841 <= chk2var_2_2_dram_l_reg_9841;
        ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853 <= chk2var_2_3_dram_l_reg_9853;
        ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865 <= chk2var_2_4_dram_l_reg_9865;
        ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877 <= chk2var_2_5_dram_l_reg_9877;
        ap_pipeline_reg_pp1_iter2_reg_3276 <= reg_3276;
        ap_pipeline_reg_pp1_iter2_reg_3283 <= reg_3283;
        ap_pipeline_reg_pp1_iter2_reg_3290 <= reg_3290;
        ap_pipeline_reg_pp1_iter2_reg_3297 <= reg_3297;
        ap_pipeline_reg_pp1_iter2_reg_3304 <= reg_3304;
        ap_pipeline_reg_pp1_iter2_reg_3311 <= reg_3311;
        ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669[7 : 0];
        ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811 <= ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811;
        ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823 <= ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823;
        ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835 <= ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835;
        ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847 <= ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847;
        ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859 <= ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859;
        ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871 <= ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871;
        ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817 <= ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817;
        ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829 <= ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829;
        ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841 <= ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841;
        ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853 <= ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853;
        ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865 <= ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865;
        ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877 <= ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877;
        ap_pipeline_reg_pp1_iter3_reg_3276 <= ap_pipeline_reg_pp1_iter2_reg_3276;
        ap_pipeline_reg_pp1_iter3_reg_3283 <= ap_pipeline_reg_pp1_iter2_reg_3283;
        ap_pipeline_reg_pp1_iter3_reg_3290 <= ap_pipeline_reg_pp1_iter2_reg_3290;
        ap_pipeline_reg_pp1_iter3_reg_3297 <= ap_pipeline_reg_pp1_iter2_reg_3297;
        ap_pipeline_reg_pp1_iter3_reg_3304 <= ap_pipeline_reg_pp1_iter2_reg_3304;
        ap_pipeline_reg_pp1_iter3_reg_3311 <= ap_pipeline_reg_pp1_iter2_reg_3311;
        ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669[7 : 0];
        ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811 <= ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811;
        ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823 <= ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823;
        ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835 <= ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835;
        ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847 <= ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847;
        ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859 <= ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859;
        ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871 <= ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871;
        ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817 <= ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817;
        ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829 <= ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829;
        ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841 <= ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841;
        ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853 <= ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853;
        ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865 <= ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865;
        ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877 <= ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877;
        ap_pipeline_reg_pp1_iter4_reg_3276 <= ap_pipeline_reg_pp1_iter3_reg_3276;
        ap_pipeline_reg_pp1_iter4_reg_3283 <= ap_pipeline_reg_pp1_iter3_reg_3283;
        ap_pipeline_reg_pp1_iter4_reg_3290 <= ap_pipeline_reg_pp1_iter3_reg_3290;
        ap_pipeline_reg_pp1_iter4_reg_3297 <= ap_pipeline_reg_pp1_iter3_reg_3297;
        ap_pipeline_reg_pp1_iter4_reg_3304 <= ap_pipeline_reg_pp1_iter3_reg_3304;
        ap_pipeline_reg_pp1_iter4_reg_3311 <= ap_pipeline_reg_pp1_iter3_reg_3311;
        ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669[7 : 0];
        ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669[7 : 0];
        ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669[7 : 0];
        ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669[7 : 0] <= ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669[7 : 0];
        tmp_i10_reg_9612 <= tmp_i10_fminf_fu_2724_ap_return;
        tmp_i11_reg_9618 <= tmp_i11_fminf_fu_2730_ap_return;
        tmp_i12_reg_9624 <= tmp_i12_fminf_fu_2736_ap_return;
        tmp_i13_reg_9630 <= tmp_i13_fminf_fu_2742_ap_return;
        tmp_i14_reg_9636 <= tmp_i14_fminf_fu_2748_ap_return;
        tmp_i15_reg_9642 <= tmp_i15_fminf_fu_2754_ap_return;
        tmp_i16_reg_9648 <= tmp_i16_fminf_fu_2760_ap_return;
        tmp_i17_reg_9654 <= tmp_i17_fminf_fu_2766_ap_return;
        tmp_i1_reg_9570 <= tmp_i1_fminf_fu_2682_ap_return;
        tmp_i2_reg_9576 <= tmp_i2_fminf_fu_2688_ap_return;
        tmp_i3_reg_9582 <= tmp_i3_fminf_fu_2694_ap_return;
        tmp_i4_reg_9588 <= tmp_i4_fminf_fu_2700_ap_return;
        tmp_i5_reg_9558 <= tmp_i5_fminf_fu_2670_ap_return;
        tmp_i6_reg_9594 <= tmp_i6_fminf_fu_2706_ap_return;
        tmp_i7_reg_9600 <= tmp_i7_fminf_fu_2712_ap_return;
        tmp_i8_reg_9564 <= tmp_i8_fminf_fu_2676_ap_return;
        tmp_i9_reg_9606 <= tmp_i9_fminf_fu_2718_ap_return;
        tmp_i_reg_9552 <= tmp_i_fminf_fu_2664_ap_return;
        x_assign_10_reg_9330[30 : 0] <= x_assign_10_fu_5972_p1[30 : 0];
        x_assign_11_reg_9340 <= x_assign_11_fminf_fu_2484_ap_return;
        x_assign_12_reg_9346[30 : 0] <= x_assign_12_fu_5998_p1[30 : 0];
        x_assign_13_reg_9492 <= x_assign_13_fminf_fu_2592_ap_return;
        x_assign_14_reg_9367 <= x_assign_14_fminf_fu_2496_ap_return;
        x_assign_15_reg_9497 <= x_assign_15_fminf_fu_2598_ap_return;
        x_assign_16_reg_9502 <= x_assign_16_fminf_fu_2604_ap_return;
        x_assign_17_reg_9507 <= x_assign_17_fminf_fu_2610_ap_return;
        x_assign_18_reg_9512 <= x_assign_18_fminf_fu_2616_ap_return;
        x_assign_19_reg_9517 <= x_assign_19_fminf_fu_2622_ap_return;
        x_assign_1_reg_9274 <= x_assign_1_fminf_fu_2448_ap_return;
        x_assign_20_reg_9396[30 : 0] <= x_assign_20_fu_6050_p1[30 : 0];
        x_assign_21_reg_9406 <= x_assign_21_fminf_fu_2520_ap_return;
        x_assign_22_reg_9412[30 : 0] <= x_assign_22_fu_6076_p1[30 : 0];
        x_assign_23_reg_9522 <= x_assign_23_fminf_fu_2628_ap_return;
        x_assign_24_reg_9433 <= x_assign_24_fminf_fu_2532_ap_return;
        x_assign_25_reg_9527 <= x_assign_25_fminf_fu_2634_ap_return;
        x_assign_26_reg_9532 <= x_assign_26_fminf_fu_2640_ap_return;
        x_assign_27_reg_9537 <= x_assign_27_fminf_fu_2646_ap_return;
        x_assign_28_reg_9542 <= x_assign_28_fminf_fu_2652_ap_return;
        x_assign_29_reg_9547 <= x_assign_29_fminf_fu_2658_ap_return;
        x_assign_2_reg_9280[30 : 0] <= x_assign_2_fu_5920_p1[30 : 0];
        x_assign_3_reg_9301 <= x_assign_3_fminf_fu_2460_ap_return;
        x_assign_4_reg_9467 <= x_assign_4_fminf_fu_2562_ap_return;
        x_assign_5_reg_9472 <= x_assign_5_fminf_fu_2568_ap_return;
        x_assign_6_reg_9462 <= x_assign_6_fminf_fu_2556_ap_return;
        x_assign_7_reg_9477 <= x_assign_7_fminf_fu_2574_ap_return;
        x_assign_8_reg_9482 <= x_assign_8_fminf_fu_2580_ap_return;
        x_assign_9_reg_9487 <= x_assign_9_fminf_fu_2586_ap_return;
        x_assign_s_reg_9264[30 : 0] <= x_assign_s_fu_5894_p1[30 : 0];
        y_assign_10_reg_9362[30 : 0] <= y_assign_10_fu_6024_p1[30 : 0];
        y_assign_11_reg_9373 <= y_assign_11_fminf_fu_2502_ap_return;
        y_assign_12_reg_9379[30 : 0] <= y_assign_12_fu_6037_p1[30 : 0];
        y_assign_13_reg_9384 <= y_assign_13_fminf_fu_2508_ap_return;
        y_assign_14_reg_9390 <= y_assign_14_fminf_fu_2514_ap_return;
        y_assign_15_reg_9401[30 : 0] <= y_assign_15_fu_6063_p1[30 : 0];
        y_assign_16_reg_9417[30 : 0] <= y_assign_16_fu_6089_p1[30 : 0];
        y_assign_17_reg_9422 <= y_assign_17_fminf_fu_2526_ap_return;
        y_assign_18_reg_9428[30 : 0] <= y_assign_18_fu_6102_p1[30 : 0];
        y_assign_19_reg_9439 <= y_assign_19_fminf_fu_2538_ap_return;
        y_assign_1_reg_9296[30 : 0] <= y_assign_1_fu_5946_p1[30 : 0];
        y_assign_20_reg_9445[30 : 0] <= y_assign_20_fu_6115_p1[30 : 0];
        y_assign_21_reg_9450 <= y_assign_21_fminf_fu_2544_ap_return;
        y_assign_22_reg_9456 <= y_assign_22_fminf_fu_2550_ap_return;
        y_assign_2_reg_9307 <= y_assign_2_fminf_fu_2466_ap_return;
        y_assign_3_reg_9313[30 : 0] <= y_assign_3_fu_5959_p1[30 : 0];
        y_assign_4_reg_9318 <= y_assign_4_fminf_fu_2472_ap_return;
        y_assign_5_reg_9324 <= y_assign_5_fminf_fu_2478_ap_return;
        y_assign_6_reg_9335[30 : 0] <= y_assign_6_fu_5985_p1[30 : 0];
        y_assign_7_reg_9351[30 : 0] <= y_assign_7_fu_6011_p1[30 : 0];
        y_assign_8_reg_9356 <= y_assign_8_fminf_fu_2490_ap_return;
        y_assign_9_reg_9269[30 : 0] <= y_assign_9_fu_5907_p1[30 : 0];
        y_assign_reg_9290 <= y_assign_fminf_fu_2454_ap_return;
        y_assign_s_reg_9285[30 : 0] <= y_assign_s_fu_5933_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp1_stage0)) begin
        ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660 <= tmp_20_reg_9660;
        ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669[7 : 0] <= tmp_22_reg_9669[7 : 0];
        tmp_20_reg_9660 <= tmp_20_fu_6553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == tmp_20_reg_9660))) begin
        chk2var_1_0_dram_l_reg_9811 <= chk2var_1_0_dram_q0;
        chk2var_1_1_dram_l_reg_9823 <= chk2var_1_1_dram_q0;
        chk2var_1_2_dram_l_reg_9835 <= chk2var_1_2_dram_q0;
        chk2var_1_3_dram_l_reg_9847 <= chk2var_1_3_dram_q0;
        chk2var_1_4_dram_l_reg_9859 <= chk2var_1_4_dram_q0;
        chk2var_1_5_dram_l_reg_9871 <= chk2var_1_5_dram_q0;
        chk2var_2_0_dram_l_reg_9817 <= chk2var_2_0_dram_q0;
        chk2var_2_1_dram_l_reg_9829 <= chk2var_2_1_dram_q0;
        chk2var_2_2_dram_l_reg_9841 <= chk2var_2_2_dram_q0;
        chk2var_2_3_dram_l_reg_9853 <= chk2var_2_3_dram_q0;
        chk2var_2_4_dram_l_reg_9865 <= chk2var_2_4_dram_q0;
        chk2var_2_5_dram_l_reg_9877 <= chk2var_2_5_dram_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & (jdx_reg_2198 == ap_const_lv3_1))) begin
        chk2var_shift_idx_0_1 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_1[7 : 0] <= H_proto_shift_load_c_1_fu_3610_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & (jdx_reg_2198 == ap_const_lv3_2))) begin
        chk2var_shift_idx_0_2 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_2[7 : 0] <= H_proto_shift_load_c_2_fu_3600_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & (jdx_reg_2198 == ap_const_lv3_3))) begin
        chk2var_shift_idx_0_3 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_3[7 : 0] <= H_proto_shift_load_c_3_fu_3590_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & (jdx_reg_2198 == ap_const_lv3_4))) begin
        chk2var_shift_idx_0_4 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_4[7 : 0] <= H_proto_shift_load_c_4_fu_3580_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & ~(jdx_reg_2198 == ap_const_lv3_0) & ~(jdx_reg_2198 == ap_const_lv3_1) & ~(jdx_reg_2198 == ap_const_lv3_2) & ~(jdx_reg_2198 == ap_const_lv3_3) & ~(jdx_reg_2198 == ap_const_lv3_4))) begin
        chk2var_shift_idx_0_5 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_5[7 : 0] <= H_proto_shift_load_c_5_fu_3630_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (ap_const_lv2_0 == idx_reg_2186) & (jdx_reg_2198 == ap_const_lv3_0))) begin
        chk2var_shift_idx_0_s <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_0_s[7 : 0] <= H_proto_shift_load_c_fu_3620_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_1) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_1 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_1[7 : 0] <= H_proto_shift_load_c_7_fu_3550_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_2) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_2 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_2[7 : 0] <= H_proto_shift_load_c_8_fu_3540_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_3) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_3 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_3[7 : 0] <= H_proto_shift_load_c_9_fu_3530_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_4) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_4 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_4[7 : 0] <= H_proto_shift_load_c_10_fu_3520_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(jdx_reg_2198 == ap_const_lv3_0) & ~(jdx_reg_2198 == ap_const_lv3_1) & ~(jdx_reg_2198 == ap_const_lv3_2) & ~(jdx_reg_2198 == ap_const_lv3_3) & ~(jdx_reg_2198 == ap_const_lv3_4) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_5 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_5[7 : 0] <= H_proto_shift_load_c_11_fu_3570_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_0) & (idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_1_s <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_1_s[7 : 0] <= H_proto_shift_load_c_6_fu_3560_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_1) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_1 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_1[7 : 0] <= H_proto_shift_load_c_13_fu_3670_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_2) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_2 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_2[7 : 0] <= H_proto_shift_load_c_14_fu_3660_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_3) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_3 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_3[7 : 0] <= H_proto_shift_load_c_15_fu_3650_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_4) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_4 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_4[7 : 0] <= H_proto_shift_load_c_16_fu_3640_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(jdx_reg_2198 == ap_const_lv3_0) & ~(jdx_reg_2198 == ap_const_lv3_1) & ~(jdx_reg_2198 == ap_const_lv3_2) & ~(jdx_reg_2198 == ap_const_lv3_3) & ~(jdx_reg_2198 == ap_const_lv3_4) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_5 <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_5[7 : 0] <= H_proto_shift_load_c_17_fu_3690_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (jdx_reg_2198 == ap_const_lv3_0) & ~(ap_const_lv2_0 == idx_reg_2186) & ~(idx_reg_2186 == ap_const_lv2_1))) begin
        chk2var_shift_idx_2_s <= idx_assign_fu_3404_p3;
        var2chk_shift_idx_2_s[7 : 0] <= H_proto_shift_load_c_12_fu_3680_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & ~(1'b0 == tmp_13_fu_3773_p2))) begin
        extLd10_reg_8943[7 : 0] <= extLd10_fu_4023_p1[7 : 0];
        extLd11_reg_8948[7 : 0] <= extLd11_fu_4031_p1[7 : 0];
        extLd12_reg_8954[7 : 0] <= extLd12_fu_4039_p1[7 : 0];
        extLd13_reg_8959[7 : 0] <= extLd13_fu_4047_p1[7 : 0];
        extLd14_reg_8964[7 : 0] <= extLd14_fu_4055_p1[7 : 0];
        extLd15_reg_8970[7 : 0] <= extLd15_fu_4063_p1[7 : 0];
        extLd16_reg_8975[7 : 0] <= extLd16_fu_4071_p1[7 : 0];
        extLd17_reg_8980[7 : 0] <= extLd17_fu_4079_p1[7 : 0];
        extLd1_reg_8890[7 : 0] <= extLd1_fu_3943_p1[7 : 0];
        extLd2_reg_8895[7 : 0] <= extLd2_fu_3951_p1[7 : 0];
        extLd3_reg_8906[7 : 0] <= extLd3_fu_3967_p1[7 : 0];
        extLd4_reg_8911[7 : 0] <= extLd4_fu_3975_p1[7 : 0];
        extLd5_reg_8916[7 : 0] <= extLd5_fu_3983_p1[7 : 0];
        extLd6_reg_8922[7 : 0] <= extLd6_fu_3991_p1[7 : 0];
        extLd7_reg_8927[7 : 0] <= extLd7_fu_3999_p1[7 : 0];
        extLd8_reg_8932[7 : 0] <= extLd8_fu_4007_p1[7 : 0];
        extLd9_reg_8938[7 : 0] <= extLd9_fu_4015_p1[7 : 0];
        extLd_reg_8900[7 : 0] <= extLd_fu_3959_p1[7 : 0];
        tmp_103_reg_8865[7 : 0] <= tmp_103_fu_3903_p1[7 : 0];
        tmp_110_reg_8870[7 : 0] <= tmp_110_fu_3911_p1[7 : 0];
        tmp_115_reg_8875[7 : 0] <= tmp_115_fu_3919_p1[7 : 0];
        tmp_120_reg_8880[7 : 0] <= tmp_120_fu_3927_p1[7 : 0];
        tmp_121_reg_8885[7 : 0] <= tmp_121_fu_3935_p1[7 : 0];
        tmp_42_reg_8800[7 : 0] <= tmp_42_fu_3799_p1[7 : 0];
        tmp_46_reg_8805[7 : 0] <= tmp_46_fu_3807_p1[7 : 0];
        tmp_47_reg_8810[7 : 0] <= tmp_47_fu_3815_p1[7 : 0];
        tmp_49_reg_8815[7 : 0] <= tmp_49_fu_3823_p1[7 : 0];
        tmp_54_reg_8820[7 : 0] <= tmp_54_fu_3831_p1[7 : 0];
        tmp_59_reg_8825[7 : 0] <= tmp_59_fu_3839_p1[7 : 0];
        tmp_64_reg_8830[7 : 0] <= tmp_64_fu_3847_p1[7 : 0];
        tmp_69_reg_8835[7 : 0] <= tmp_69_fu_3855_p1[7 : 0];
        tmp_78_reg_8840[7 : 0] <= tmp_78_fu_3863_p1[7 : 0];
        tmp_80_reg_8845[7 : 0] <= tmp_80_fu_3871_p1[7 : 0];
        tmp_85_reg_8850[7 : 0] <= tmp_85_fu_3879_p1[7 : 0];
        tmp_90_reg_8855[7 : 0] <= tmp_90_fu_3887_p1[7 : 0];
        tmp_98_reg_8860[7 : 0] <= tmp_98_fu_3895_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_0_V_lo_reg_10200 <= hard_dec_tmp_0_V_q0;
        hard_dec_tmp_1_V_lo_reg_10205 <= hard_dec_tmp_1_V_q0;
        hard_dec_tmp_2_V_lo_reg_10210 <= hard_dec_tmp_2_V_q0;
        hard_dec_tmp_3_V_lo_1_reg_10250 <= hard_dec_tmp_3_V_q1;
        hard_dec_tmp_3_V_lo_reg_10215 <= hard_dec_tmp_3_V_q0;
        hard_dec_tmp_4_V_lo_reg_10220 <= hard_dec_tmp_4_V_q0;
        hard_dec_tmp_5_V_lo_reg_10225 <= hard_dec_tmp_5_V_q0;
        syndrome_0_V_addr_1_reg_10195 <= tmp_33_fu_7927_p1;
        syndrome_1_V_addr_1_reg_10230 <= tmp_33_fu_7927_p1;
        syndrome_2_V_addr_1_reg_10265 <= tmp_33_fu_7927_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        idx_11_reg_10155 <= idx_11_fu_7730_p2;
        idx_8_cast_reg_10137[7 : 0] <= idx_8_cast_fu_7720_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (1'b0 == tmp_15_reg_8994))) begin
        idx_12_reg_10303 <= idx_12_fu_8348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) & ~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)))) begin
        idx_13_reg_10336 <= idx_13_fu_8391_p2;
        next_mul8_reg_10328 <= next_mul8_fu_8379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & ~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)))) begin
        idx_14_reg_10397 <= idx_14_fu_8464_p2;
        next_mul1_reg_10389 <= next_mul1_fu_8452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        idx_15_reg_9007 <= idx_15_fu_4113_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        idx_1_reg_8524 <= idx_1_fu_3324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~((tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_noisy_input_ARREADY)))) begin
        idx_3_reg_8555 <= idx_3_fu_3712_p2;
        next_mul_reg_8547 <= next_mul_fu_3700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        idx_4_reg_8765 <= idx_4_fu_3779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        idx_6_reg_9976 <= idx_6_fu_7201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        jdx_10_reg_10410 <= jdx_10_fu_8487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        jdx_3_reg_8627 <= jdx_3_fu_3757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)))) begin
        jdx_6_reg_8579 <= jdx_6_fu_3735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        jdx_7_reg_10084 <= jdx_7_fu_7427_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        jdx_8_reg_8537 <= jdx_8_fu_3366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        jdx_9_reg_10349 <= jdx_9_fu_8414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        n_iter_1_reg_8998 <= n_iter_1_fu_4101_p2;
        tmp_15_reg_8994 <= tmp_15_fu_4095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_9_fu_3729_p2) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)))) begin
        noisy_input_addr_rea_reg_8584 <= noisy_input_RDATA;
        noisy_input_vec_0_ad_reg_8594 <= tmp_12_fu_3741_p1;
        noisy_input_vec_1_ad_reg_8599 <= tmp_12_fu_3741_p1;
        noisy_input_vec_2_ad_reg_8604 <= tmp_12_fu_3741_p1;
        noisy_input_vec_3_ad_reg_8609 <= tmp_12_fu_3741_p1;
        noisy_input_vec_4_ad_reg_8614 <= tmp_12_fu_3741_p1;
        noisy_input_vec_5_ad_reg_8619 <= tmp_12_fu_3741_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        noisy_input_vec_0_lo_reg_8672 <= noisy_input_vec_0_q0;
        noisy_input_vec_1_lo_reg_8677 <= noisy_input_vec_1_q0;
        noisy_input_vec_2_lo_reg_8682 <= noisy_input_vec_2_q0;
        noisy_input_vec_3_lo_reg_8687 <= noisy_input_vec_3_q0;
        noisy_input_vec_4_lo_reg_8692 <= noisy_input_vec_4_q0;
        noisy_input_vec_5_lo_reg_8697 <= noisy_input_vec_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == tmp_20_reg_9660)))) begin
        reg_3228 <= llr_vec_0_q0;
        reg_3236 <= llr_vec_1_q0;
        reg_3244 <= llr_vec_2_q0;
        reg_3252 <= llr_vec_3_q0;
        reg_3260 <= llr_vec_4_q0;
        reg_3268 <= llr_vec_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == tmp_20_reg_9660)) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_3276 <= chk2var_0_0_dram_q0;
        reg_3283 <= chk2var_0_1_dram_q0;
        reg_3290 <= chk2var_0_2_dram_q0;
        reg_3297 <= chk2var_0_3_dram_q0;
        reg_3304 <= chk2var_0_4_dram_q0;
        reg_3311 <= chk2var_0_5_dram_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_10_reg_8702 <= grp_fu_3060_p2;
        tmp_32_1_reg_8707 <= grp_fu_3065_p2;
        tmp_32_2_reg_8712 <= grp_fu_3070_p2;
        tmp_32_3_reg_8717 <= grp_fu_3075_p2;
        tmp_32_4_reg_8722 <= grp_fu_3080_p2;
        tmp_32_5_reg_8727 <= grp_fu_3085_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_11_reg_8732 <= grp_fu_3090_p2;
        tmp_33_1_reg_8737 <= grp_fu_3094_p2;
        tmp_33_2_reg_8742 <= grp_fu_3098_p2;
        tmp_33_3_reg_8747 <= grp_fu_3102_p2;
        tmp_33_4_reg_8752 <= grp_fu_3106_p2;
        tmp_33_5_reg_8757 <= grp_fu_3110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_156_reg_10384 <= tmp_156_fu_8430_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        tmp_157_reg_10445 <= tmp_157_fu_8503_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == tmp_20_fu_6553_p2))) begin
        tmp_22_reg_9669[7 : 0] <= tmp_22_fu_6569_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (1'b0 == tmp_23_fu_7195_p2))) begin
        tmp_24_reg_9981[7 : 0] <= tmp_24_fu_7207_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'b0 == tmp_28_fu_7421_p2))) begin
        tmp_29_reg_10089[7 : 0] <= tmp_29_fu_7433_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_s_fu_3318_p2))) begin
        tmp_5_reg_8529[5 : 1] <= tmp_5_fu_3354_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_8_fu_3751_p2))) begin
        tmp_7_reg_8632[7 : 0] <= tmp_7_fu_3763_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter4) & (1'b0 == ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660))) begin
        tmp_94_0_1_reg_9888 <= grp_fu_2850_p2;
        tmp_94_0_2_reg_9893 <= grp_fu_2856_p2;
        tmp_94_1_1_reg_9903 <= grp_fu_2868_p2;
        tmp_94_1_2_reg_9908 <= grp_fu_2874_p2;
        tmp_94_1_reg_9898 <= grp_fu_2862_p2;
        tmp_94_reg_9883 <= grp_fu_2844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660)) begin
        tmp_94_2_1_reg_9918 <= grp_fu_2886_p2;
        tmp_94_2_2_reg_9923 <= grp_fu_2892_p2;
        tmp_94_2_reg_9913 <= grp_fu_2880_p2;
        tmp_94_3_1_reg_9933 <= grp_fu_2904_p2;
        tmp_94_3_2_reg_9938 <= grp_fu_2910_p2;
        tmp_94_3_reg_9928 <= grp_fu_2898_p2;
        tmp_94_4_1_reg_9948 <= grp_fu_2922_p2;
        tmp_94_4_2_reg_9953 <= grp_fu_2928_p2;
        tmp_94_4_reg_9943 <= grp_fu_2916_p2;
        tmp_94_5_1_reg_9963 <= grp_fu_2940_p2;
        tmp_94_5_2_reg_9968 <= grp_fu_2946_p2;
        tmp_94_5_reg_9958 <= grp_fu_2934_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        H_proto_shift_ce0 = 1'b1;
    end else begin
        H_proto_shift_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) & ~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)) & ~(1'b0 == tmp_38_fu_8458_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) & ~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)) & ~(1'b0 == tmp_38_fu_8458_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_hard_dec_out_AWREADY)) begin
        ap_sig_ioackin_hard_dec_out_AWREADY = hard_dec_out_AWREADY;
    end else begin
        ap_sig_ioackin_hard_dec_out_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_hard_dec_out_WREADY)) begin
        ap_sig_ioackin_hard_dec_out_WREADY = hard_dec_out_WREADY;
    end else begin
        ap_sig_ioackin_hard_dec_out_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_noisy_input_ARREADY)) begin
        ap_sig_ioackin_noisy_input_ARREADY = noisy_input_ARREADY;
    end else begin
        ap_sig_ioackin_noisy_input_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_soft_dec_out_AWREADY)) begin
        ap_sig_ioackin_soft_dec_out_AWREADY = soft_dec_out_AWREADY;
    end else begin
        ap_sig_ioackin_soft_dec_out_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_soft_dec_out_WREADY)) begin
        ap_sig_ioackin_soft_dec_out_WREADY = soft_dec_out_WREADY;
    end else begin
        ap_sig_ioackin_soft_dec_out_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_0_dram_address0 = tmp_26_fu_7246_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_0_dram_address0 = tmp_93_0_1_1_fu_6676_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))) begin
        chk2var_0_0_dram_address0 = tmp_74_fu_6140_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))) begin
        chk2var_0_0_dram_address0 = tmp_77_fu_6121_p1;
    end else begin
        chk2var_0_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)))) begin
        chk2var_0_0_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) begin
            chk2var_0_0_dram_d0 = tmp_73_fu_6135_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) begin
            chk2var_0_0_dram_d0 = tmp_i_reg_9552;
        end else begin
            chk2var_0_0_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)))) begin
        chk2var_0_0_dram_we0 = 1'b1;
    end else begin
        chk2var_0_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_1_dram_address0 = tmp_56_1_fu_7280_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_1_dram_address0 = tmp_93_1_1_1_fu_6778_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))) begin
        chk2var_0_1_dram_address0 = tmp_84_0_1_fu_6164_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))) begin
        chk2var_0_1_dram_address0 = tmp_86_0_1_fu_6145_p1;
    end else begin
        chk2var_0_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)))) begin
        chk2var_0_1_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) begin
            chk2var_0_1_dram_d0 = tmp_82_0_1_fu_6159_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) begin
            chk2var_0_1_dram_d0 = tmp_i5_reg_9558;
        end else begin
            chk2var_0_1_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)))) begin
        chk2var_0_1_dram_we0 = 1'b1;
    end else begin
        chk2var_0_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_2_dram_address0 = tmp_56_2_fu_7314_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_2_dram_address0 = tmp_93_2_1_1_fu_6880_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))) begin
        chk2var_0_2_dram_address0 = tmp_84_0_2_fu_6188_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))) begin
        chk2var_0_2_dram_address0 = tmp_86_0_2_fu_6169_p1;
    end else begin
        chk2var_0_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)))) begin
        chk2var_0_2_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) begin
            chk2var_0_2_dram_d0 = tmp_82_0_2_fu_6183_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) begin
            chk2var_0_2_dram_d0 = tmp_i8_reg_9564;
        end else begin
            chk2var_0_2_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)))) begin
        chk2var_0_2_dram_we0 = 1'b1;
    end else begin
        chk2var_0_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_3_dram_address0 = tmp_56_3_fu_7348_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_3_dram_address0 = tmp_93_3_1_1_fu_6982_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))) begin
        chk2var_0_3_dram_address0 = tmp_84_0_3_fu_6212_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))) begin
        chk2var_0_3_dram_address0 = tmp_86_0_3_fu_6193_p1;
    end else begin
        chk2var_0_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)))) begin
        chk2var_0_3_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) begin
            chk2var_0_3_dram_d0 = tmp_82_0_3_fu_6207_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) begin
            chk2var_0_3_dram_d0 = tmp_i1_reg_9570;
        end else begin
            chk2var_0_3_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)))) begin
        chk2var_0_3_dram_we0 = 1'b1;
    end else begin
        chk2var_0_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_4_dram_address0 = tmp_56_4_fu_7382_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_4_dram_address0 = tmp_93_4_1_1_fu_7084_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))) begin
        chk2var_0_4_dram_address0 = tmp_84_0_4_fu_6236_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))) begin
        chk2var_0_4_dram_address0 = tmp_86_0_4_fu_6217_p1;
    end else begin
        chk2var_0_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)))) begin
        chk2var_0_4_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) begin
            chk2var_0_4_dram_d0 = tmp_82_0_4_fu_6231_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) begin
            chk2var_0_4_dram_d0 = tmp_i2_reg_9576;
        end else begin
            chk2var_0_4_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)))) begin
        chk2var_0_4_dram_we0 = 1'b1;
    end else begin
        chk2var_0_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        chk2var_0_5_dram_address0 = tmp_56_5_fu_7416_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_0_5_dram_address0 = tmp_93_5_1_1_fu_7186_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))) begin
        chk2var_0_5_dram_address0 = tmp_84_0_5_fu_6260_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))) begin
        chk2var_0_5_dram_address0 = tmp_86_0_5_fu_6241_p1;
    end else begin
        chk2var_0_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state48) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)))) begin
        chk2var_0_5_dram_ce0 = 1'b1;
    end else begin
        chk2var_0_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) begin
            chk2var_0_5_dram_d0 = tmp_82_0_5_fu_6255_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) begin
            chk2var_0_5_dram_d0 = tmp_i3_reg_9582;
        end else begin
            chk2var_0_5_dram_d0 = 'bx;
        end
    end else begin
        chk2var_0_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)))) begin
        chk2var_0_5_dram_we0 = 1'b1;
    end else begin
        chk2var_0_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_0_dram_address0 = tmp_93_fu_6608_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))) begin
        chk2var_1_0_dram_address0 = tmp_84_1_fu_6284_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))) begin
        chk2var_1_0_dram_address0 = tmp_86_1_fu_6265_p1;
    end else begin
        chk2var_1_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)))) begin
        chk2var_1_0_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) begin
            chk2var_1_0_dram_d0 = tmp_82_1_fu_6279_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) begin
            chk2var_1_0_dram_d0 = tmp_i4_reg_9588;
        end else begin
            chk2var_1_0_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)))) begin
        chk2var_1_0_dram_we0 = 1'b1;
    end else begin
        chk2var_1_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_1_dram_address0 = tmp_93_1_fu_6710_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))) begin
        chk2var_1_1_dram_address0 = tmp_84_1_1_fu_6308_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))) begin
        chk2var_1_1_dram_address0 = tmp_86_1_1_fu_6289_p1;
    end else begin
        chk2var_1_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)))) begin
        chk2var_1_1_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) begin
            chk2var_1_1_dram_d0 = tmp_82_1_1_fu_6303_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) begin
            chk2var_1_1_dram_d0 = tmp_i6_reg_9594;
        end else begin
            chk2var_1_1_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)))) begin
        chk2var_1_1_dram_we0 = 1'b1;
    end else begin
        chk2var_1_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_2_dram_address0 = tmp_93_2_fu_6812_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))) begin
        chk2var_1_2_dram_address0 = tmp_84_1_2_fu_6332_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))) begin
        chk2var_1_2_dram_address0 = tmp_86_1_2_fu_6313_p1;
    end else begin
        chk2var_1_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)))) begin
        chk2var_1_2_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) begin
            chk2var_1_2_dram_d0 = tmp_82_1_2_fu_6327_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) begin
            chk2var_1_2_dram_d0 = tmp_i7_reg_9600;
        end else begin
            chk2var_1_2_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)))) begin
        chk2var_1_2_dram_we0 = 1'b1;
    end else begin
        chk2var_1_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_3_dram_address0 = tmp_93_3_fu_6914_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))) begin
        chk2var_1_3_dram_address0 = tmp_84_1_3_fu_6356_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))) begin
        chk2var_1_3_dram_address0 = tmp_86_1_3_fu_6337_p1;
    end else begin
        chk2var_1_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)))) begin
        chk2var_1_3_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) begin
            chk2var_1_3_dram_d0 = tmp_82_1_3_fu_6351_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) begin
            chk2var_1_3_dram_d0 = tmp_i9_reg_9606;
        end else begin
            chk2var_1_3_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)))) begin
        chk2var_1_3_dram_we0 = 1'b1;
    end else begin
        chk2var_1_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_4_dram_address0 = tmp_93_4_fu_7016_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))) begin
        chk2var_1_4_dram_address0 = tmp_84_1_4_fu_6380_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))) begin
        chk2var_1_4_dram_address0 = tmp_86_1_4_fu_6361_p1;
    end else begin
        chk2var_1_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)))) begin
        chk2var_1_4_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) begin
            chk2var_1_4_dram_d0 = tmp_82_1_4_fu_6375_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) begin
            chk2var_1_4_dram_d0 = tmp_i10_reg_9612;
        end else begin
            chk2var_1_4_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)))) begin
        chk2var_1_4_dram_we0 = 1'b1;
    end else begin
        chk2var_1_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_1_5_dram_address0 = tmp_93_5_fu_7118_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))) begin
        chk2var_1_5_dram_address0 = tmp_84_1_5_fu_6404_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))) begin
        chk2var_1_5_dram_address0 = tmp_86_1_5_fu_6385_p1;
    end else begin
        chk2var_1_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)))) begin
        chk2var_1_5_dram_ce0 = 1'b1;
    end else begin
        chk2var_1_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) begin
            chk2var_1_5_dram_d0 = tmp_82_1_5_fu_6399_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) begin
            chk2var_1_5_dram_d0 = tmp_i11_reg_9618;
        end else begin
            chk2var_1_5_dram_d0 = 'bx;
        end
    end else begin
        chk2var_1_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)))) begin
        chk2var_1_5_dram_we0 = 1'b1;
    end else begin
        chk2var_1_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_0_dram_address0 = tmp_93_0_0_1_fu_6642_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))) begin
        chk2var_2_0_dram_address0 = tmp_84_2_fu_6428_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))) begin
        chk2var_2_0_dram_address0 = tmp_86_2_fu_6409_p1;
    end else begin
        chk2var_2_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)))) begin
        chk2var_2_0_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) begin
            chk2var_2_0_dram_d0 = tmp_82_2_fu_6423_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) begin
            chk2var_2_0_dram_d0 = tmp_i12_reg_9624;
        end else begin
            chk2var_2_0_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)))) begin
        chk2var_2_0_dram_we0 = 1'b1;
    end else begin
        chk2var_2_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_1_dram_address0 = tmp_93_1_0_1_fu_6744_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))) begin
        chk2var_2_1_dram_address0 = tmp_84_2_1_fu_6452_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))) begin
        chk2var_2_1_dram_address0 = tmp_86_2_1_fu_6433_p1;
    end else begin
        chk2var_2_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)))) begin
        chk2var_2_1_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) begin
            chk2var_2_1_dram_d0 = tmp_82_2_1_fu_6447_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) begin
            chk2var_2_1_dram_d0 = tmp_i13_reg_9630;
        end else begin
            chk2var_2_1_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)))) begin
        chk2var_2_1_dram_we0 = 1'b1;
    end else begin
        chk2var_2_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_2_dram_address0 = tmp_93_2_0_1_fu_6846_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))) begin
        chk2var_2_2_dram_address0 = tmp_84_2_2_fu_6476_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))) begin
        chk2var_2_2_dram_address0 = tmp_86_2_2_fu_6457_p1;
    end else begin
        chk2var_2_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)))) begin
        chk2var_2_2_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) begin
            chk2var_2_2_dram_d0 = tmp_82_2_2_fu_6471_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) begin
            chk2var_2_2_dram_d0 = tmp_i14_reg_9636;
        end else begin
            chk2var_2_2_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)))) begin
        chk2var_2_2_dram_we0 = 1'b1;
    end else begin
        chk2var_2_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_3_dram_address0 = tmp_93_3_0_1_fu_6948_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))) begin
        chk2var_2_3_dram_address0 = tmp_84_2_3_fu_6500_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))) begin
        chk2var_2_3_dram_address0 = tmp_86_2_3_fu_6481_p1;
    end else begin
        chk2var_2_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)))) begin
        chk2var_2_3_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) begin
            chk2var_2_3_dram_d0 = tmp_82_2_3_fu_6495_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) begin
            chk2var_2_3_dram_d0 = tmp_i15_reg_9642;
        end else begin
            chk2var_2_3_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)))) begin
        chk2var_2_3_dram_we0 = 1'b1;
    end else begin
        chk2var_2_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_4_dram_address0 = tmp_93_4_0_1_fu_7050_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))) begin
        chk2var_2_4_dram_address0 = tmp_84_2_4_fu_6524_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))) begin
        chk2var_2_4_dram_address0 = tmp_86_2_4_fu_6505_p1;
    end else begin
        chk2var_2_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)))) begin
        chk2var_2_4_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) begin
            chk2var_2_4_dram_d0 = tmp_82_2_4_fu_6519_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) begin
            chk2var_2_4_dram_d0 = tmp_i16_reg_9648;
        end else begin
            chk2var_2_4_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)))) begin
        chk2var_2_4_dram_we0 = 1'b1;
    end else begin
        chk2var_2_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        chk2var_2_5_dram_address0 = tmp_93_5_0_1_fu_7152_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))) begin
        chk2var_2_5_dram_address0 = tmp_84_2_5_fu_6548_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))) begin
        chk2var_2_5_dram_address0 = tmp_86_2_5_fu_6529_p1;
    end else begin
        chk2var_2_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)))) begin
        chk2var_2_5_dram_ce0 = 1'b1;
    end else begin
        chk2var_2_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter5)) begin
        if (~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) begin
            chk2var_2_5_dram_d0 = tmp_82_2_5_fu_6543_p1;
        end else if ((1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) begin
            chk2var_2_5_dram_d0 = tmp_i17_reg_9654;
        end else begin
            chk2var_2_5_dram_d0 = 'bx;
        end
    end else begin
        chk2var_2_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) | ((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b0 == ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)))) begin
        chk2var_2_5_dram_we0 = 1'b1;
    end else begin
        chk2var_2_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2844_p0 = chk2var_0_0_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2844_p0 = llr_vec_0_q0;
    end else begin
        grp_fu_2844_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2844_p1 = var2chk_0_0_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2844_p1 = chk2var_1_0_dram_q0;
    end else begin
        grp_fu_2844_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2850_p0 = chk2var_0_1_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2850_p0 = llr_vec_0_q0;
    end else begin
        grp_fu_2850_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2850_p1 = var2chk_0_1_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2850_p1 = chk2var_2_0_dram_q0;
    end else begin
        grp_fu_2850_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2856_p0 = chk2var_0_2_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2856_p0 = llr_vec_0_q0;
    end else begin
        grp_fu_2856_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2856_p1 = var2chk_0_2_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2856_p1 = chk2var_0_0_dram_q0;
    end else begin
        grp_fu_2856_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2862_p0 = chk2var_0_3_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2862_p0 = llr_vec_1_q0;
    end else begin
        grp_fu_2862_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2862_p1 = var2chk_0_3_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2862_p1 = chk2var_1_1_dram_q0;
    end else begin
        grp_fu_2862_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2868_p0 = chk2var_0_4_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2868_p0 = llr_vec_1_q0;
    end else begin
        grp_fu_2868_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2868_p1 = var2chk_0_4_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2868_p1 = chk2var_2_1_dram_q0;
    end else begin
        grp_fu_2868_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2874_p0 = chk2var_0_5_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2874_p0 = llr_vec_1_q0;
    end else begin
        grp_fu_2874_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2874_p1 = var2chk_0_5_dram_q0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        grp_fu_2874_p1 = chk2var_0_1_dram_q0;
    end else begin
        grp_fu_2874_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3114_p0 = soft_dec_tmp_0_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3114_p0 = var2chk_0_1_dram_q0;
    end else begin
        grp_fu_3114_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3120_p0 = soft_dec_tmp_1_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3120_p0 = var2chk_0_2_dram_q0;
    end else begin
        grp_fu_3120_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3126_p0 = soft_dec_tmp_2_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3126_p0 = var2chk_0_3_dram_q0;
    end else begin
        grp_fu_3126_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3132_p0 = soft_dec_tmp_3_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3132_p0 = var2chk_0_4_dram_q0;
    end else begin
        grp_fu_3132_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3138_p0 = soft_dec_tmp_4_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3138_p0 = var2chk_0_5_dram_q0;
    end else begin
        grp_fu_3138_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_3144_p0 = soft_dec_tmp_5_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        grp_fu_3144_p0 = var2chk_0_0_dram_q0;
    end else begin
        grp_fu_3144_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) & (1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_reg_ioackin_hard_dec_out_AWREADY))) begin
        hard_dec_out_AWVALID = 1'b1;
    end else begin
        hard_dec_out_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) & ~(hard_dec_out_BVALID == 1'b0))) begin
        hard_dec_out_BREADY = 1'b1;
    end else begin
        hard_dec_out_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_reg_ioackin_hard_dec_out_WREADY))) begin
        hard_dec_out_WVALID = 1'b1;
    end else begin
        hard_dec_out_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) & (1'b0 == tmp_36_fu_8385_p2))) begin
        hard_dec_out_blk_n_AW = m_axi_hard_dec_out_AWREADY;
    end else begin
        hard_dec_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        hard_dec_out_blk_n_B = m_axi_hard_dec_out_BVALID;
    end else begin
        hard_dec_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        hard_dec_out_blk_n_W = m_axi_hard_dec_out_WREADY;
    end else begin
        hard_dec_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_0_V_address0 = tmp_109_1_fu_7964_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_0_V_address0 = tmp_109_fu_7766_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_0_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_0_V_address1 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_0_V_address1 = tmp_109_2_fu_8113_p1;
    end else begin
        hard_dec_tmp_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_0_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62))) begin
        hard_dec_tmp_0_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_0_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_1_V_address0 = tmp_109_1_1_fu_7995_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_1_V_address0 = tmp_109_0_1_fu_7797_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_1_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_1_V_address1 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_1_V_address1 = tmp_109_2_1_fu_8142_p1;
    end else begin
        hard_dec_tmp_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_1_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62))) begin
        hard_dec_tmp_1_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_1_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_2_V_address0 = tmp_109_1_2_fu_8024_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_2_V_address0 = tmp_109_0_2_fu_7829_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_2_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_2_V_address1 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_2_V_address1 = tmp_109_2_2_fu_8173_p1;
    end else begin
        hard_dec_tmp_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_2_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62))) begin
        hard_dec_tmp_2_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_2_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_3_V_address0 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_3_V_address0 = tmp_109_0_3_fu_7860_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_3_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_3_V_address1 = tmp_109_2_3_fu_8204_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_3_V_address1 = tmp_109_0_1_fu_7797_p1;
    end else begin
        hard_dec_tmp_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_3_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57))) begin
        hard_dec_tmp_3_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_3_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_4_V_address0 = tmp_109_1_4_fu_8053_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_4_V_address0 = tmp_109_0_4_fu_7891_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_4_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_4_V_address1 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_4_V_address1 = tmp_33_fu_7927_p1;
    end else begin
        hard_dec_tmp_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_4_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62))) begin
        hard_dec_tmp_4_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_4_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_5_V_address0 = tmp_109_1_5_fu_8082_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        hard_dec_tmp_5_V_address0 = tmp_109_0_5_fu_7922_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_5_V_address0 = tmp_29_reg_10089;
    end else begin
        hard_dec_tmp_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        hard_dec_tmp_5_V_address1 = tmp_41_fu_8420_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        hard_dec_tmp_5_V_address1 = tmp_109_2_5_fu_8233_p1;
    end else begin
        hard_dec_tmp_5_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state54))) begin
        hard_dec_tmp_5_V_ce0 = 1'b1;
    end else begin
        hard_dec_tmp_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62))) begin
        hard_dec_tmp_5_V_ce1 = 1'b1;
    end else begin
        hard_dec_tmp_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        hard_dec_tmp_5_V_we0 = 1'b1;
    end else begin
        hard_dec_tmp_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == tmp_17_reg_9003))) begin
        i_assign_2_phi_fu_2293_p4 = idx_15_reg_9007;
    end else begin
        i_assign_2_phi_fu_2293_p4 = i_assign_2_reg_2289;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_0_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_0_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_0_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_0_ce0 = 1'b1;
    end else begin
        llr_vec_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_0_we0 = 1'b1;
    end else begin
        llr_vec_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_1_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_1_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_1_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_1_ce0 = 1'b1;
    end else begin
        llr_vec_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_1_we0 = 1'b1;
    end else begin
        llr_vec_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_2_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_2_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_2_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_2_ce0 = 1'b1;
    end else begin
        llr_vec_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_2_we0 = 1'b1;
    end else begin
        llr_vec_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_3_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_3_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_3_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_3_ce0 = 1'b1;
    end else begin
        llr_vec_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_3_we0 = 1'b1;
    end else begin
        llr_vec_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_4_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_4_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_4_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_4_ce0 = 1'b1;
    end else begin
        llr_vec_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_4_we0 = 1'b1;
    end else begin
        llr_vec_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        llr_vec_5_address0 = tmp_22_fu_6569_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        llr_vec_5_address0 = tmp_14_fu_3785_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_5_address0 = tmp_7_reg_8632;
    end else begin
        llr_vec_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0)) | (1'b1 == ap_CS_fsm_state26))) begin
        llr_vec_5_ce0 = 1'b1;
    end else begin
        llr_vec_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        llr_vec_5_we0 = 1'b1;
    end else begin
        llr_vec_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_reg_ioackin_noisy_input_ARREADY))) begin
        noisy_input_ARVALID = 1'b1;
    end else begin
        noisy_input_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_9_fu_3729_p2) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)))) begin
        noisy_input_RREADY = 1'b1;
    end else begin
        noisy_input_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_3706_p2 == 1'b0))) begin
        noisy_input_blk_n_AR = m_axi_noisy_input_ARREADY;
    end else begin
        noisy_input_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_9_fu_3729_p2))) begin
        noisy_input_blk_n_R = m_axi_noisy_input_RVALID;
    end else begin
        noisy_input_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_0_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_0_address0 = noisy_input_vec_0_ad_reg_8594;
    end else begin
        noisy_input_vec_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_0_ce0 = 1'b1;
    end else begin
        noisy_input_vec_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (ap_const_lv3_0 == idx_0_i_reg_2210))) begin
        noisy_input_vec_0_we0 = 1'b1;
    end else begin
        noisy_input_vec_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_1_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_1_address0 = noisy_input_vec_1_ad_reg_8599;
    end else begin
        noisy_input_vec_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_1_ce0 = 1'b1;
    end else begin
        noisy_input_vec_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (idx_0_i_reg_2210 == ap_const_lv3_1))) begin
        noisy_input_vec_1_we0 = 1'b1;
    end else begin
        noisy_input_vec_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_2_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_2_address0 = noisy_input_vec_2_ad_reg_8604;
    end else begin
        noisy_input_vec_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_2_ce0 = 1'b1;
    end else begin
        noisy_input_vec_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (idx_0_i_reg_2210 == ap_const_lv3_2))) begin
        noisy_input_vec_2_we0 = 1'b1;
    end else begin
        noisy_input_vec_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_3_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_3_address0 = noisy_input_vec_3_ad_reg_8609;
    end else begin
        noisy_input_vec_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_3_ce0 = 1'b1;
    end else begin
        noisy_input_vec_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (idx_0_i_reg_2210 == ap_const_lv3_3))) begin
        noisy_input_vec_3_we0 = 1'b1;
    end else begin
        noisy_input_vec_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_4_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_4_address0 = noisy_input_vec_4_ad_reg_8614;
    end else begin
        noisy_input_vec_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_4_ce0 = 1'b1;
    end else begin
        noisy_input_vec_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (idx_0_i_reg_2210 == ap_const_lv3_4))) begin
        noisy_input_vec_4_we0 = 1'b1;
    end else begin
        noisy_input_vec_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        noisy_input_vec_5_address0 = tmp_7_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        noisy_input_vec_5_address0 = noisy_input_vec_5_ad_reg_8619;
    end else begin
        noisy_input_vec_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        noisy_input_vec_5_ce0 = 1'b1;
    end else begin
        noisy_input_vec_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & ~(ap_const_lv3_0 == idx_0_i_reg_2210) & ~(idx_0_i_reg_2210 == ap_const_lv3_1) & ~(idx_0_i_reg_2210 == ap_const_lv3_2) & ~(idx_0_i_reg_2210 == ap_const_lv3_3) & ~(idx_0_i_reg_2210 == ap_const_lv3_4))) begin
        noisy_input_vec_5_we0 = 1'b1;
    end else begin
        noisy_input_vec_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_reg_ioackin_soft_dec_out_AWREADY))) begin
        soft_dec_out_AWVALID = 1'b1;
    end else begin
        soft_dec_out_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & ~(soft_dec_out_BVALID == 1'b0))) begin
        soft_dec_out_BREADY = 1'b1;
    end else begin
        soft_dec_out_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) & (1'b0 == ap_reg_ioackin_soft_dec_out_WREADY))) begin
        soft_dec_out_WVALID = 1'b1;
    end else begin
        soft_dec_out_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) & (1'b0 == tmp_38_fu_8458_p2))) begin
        soft_dec_out_blk_n_AW = m_axi_soft_dec_out_AWREADY;
    end else begin
        soft_dec_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        soft_dec_out_blk_n_B = m_axi_soft_dec_out_BVALID;
    end else begin
        soft_dec_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        soft_dec_out_blk_n_W = m_axi_soft_dec_out_WREADY;
    end else begin
        soft_dec_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_0_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_0_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_0_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_0_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_0_we0 = 1'b1;
    end else begin
        soft_dec_tmp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_1_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_1_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_1_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_1_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_1_we0 = 1'b1;
    end else begin
        soft_dec_tmp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_2_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_2_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_2_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_2_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_2_we0 = 1'b1;
    end else begin
        soft_dec_tmp_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_3_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_3_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_3_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_3_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_3_we0 = 1'b1;
    end else begin
        soft_dec_tmp_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_4_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_4_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_4_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_4_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_4_we0 = 1'b1;
    end else begin
        soft_dec_tmp_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        soft_dec_tmp_5_address0 = tmp_45_fu_8493_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        soft_dec_tmp_5_address0 = tmp_29_fu_7433_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_5_address0 = tmp_24_reg_9981;
    end else begin
        soft_dec_tmp_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52))) begin
        soft_dec_tmp_5_ce0 = 1'b1;
    end else begin
        soft_dec_tmp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        soft_dec_tmp_5_we0 = 1'b1;
    end else begin
        soft_dec_tmp_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        syndrome_0_V_address0 = tmp_35_fu_8354_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_0_V_address0 = syndrome_0_V_addr_1_reg_10195;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        syndrome_0_V_address0 = tmp_33_fu_7927_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_0_V_address0 = tmp_31_fu_7713_p1;
    end else begin
        syndrome_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_0_V_ce0 = 1'b1;
    end else begin
        syndrome_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_0_V_d0 = tmp_110_0_5_fu_8262_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_0_V_d0 = 1'b1;
    end else begin
        syndrome_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_30_fu_7701_p2)) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_0_V_we0 = 1'b1;
    end else begin
        syndrome_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        syndrome_1_V_address0 = tmp_35_fu_8354_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_1_V_address0 = syndrome_1_V_addr_1_reg_10230;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        syndrome_1_V_address0 = tmp_33_fu_7927_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_1_V_address0 = tmp_31_fu_7713_p1;
    end else begin
        syndrome_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_1_V_ce0 = 1'b1;
    end else begin
        syndrome_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_1_V_d0 = tmp_110_1_5_fu_8298_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_1_V_d0 = 1'b1;
    end else begin
        syndrome_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_30_fu_7701_p2)) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_1_V_we0 = 1'b1;
    end else begin
        syndrome_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        syndrome_2_V_address0 = tmp_35_fu_8354_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_2_V_address0 = syndrome_2_V_addr_1_reg_10265;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        syndrome_2_V_address0 = tmp_33_fu_7927_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_2_V_address0 = tmp_31_fu_7713_p1;
    end else begin
        syndrome_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_2_V_ce0 = 1'b1;
    end else begin
        syndrome_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        syndrome_2_V_d0 = tmp_110_2_5_fu_8335_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        syndrome_2_V_d0 = 1'b1;
    end else begin
        syndrome_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state55) & (1'b0 == tmp_30_fu_7701_p2)) | (1'b1 == ap_CS_fsm_state58))) begin
        syndrome_2_V_we0 = 1'b1;
    end else begin
        syndrome_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_0_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_0_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_0_dram_address0 = tmp_76_0_1_4_fu_4322_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_0_dram_address0 = StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_0_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_0_dram_ce0 = StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_0_dram_d0 = grp_fu_2952_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_0_dram_d0 = StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_0_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_0_dram_we0 = StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_1_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_1_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_1_dram_address0 = tmp_76_fu_4152_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_1_dram_address0 = StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_1_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_1_dram_ce0 = StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_1_dram_d0 = grp_fu_2967_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_1_dram_d0 = StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_1_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_1_dram_we0 = StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_2_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_2_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_2_dram_address0 = tmp_76_0_0_1_fu_4186_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_2_dram_address0 = StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_2_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_2_dram_ce0 = StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_2_dram_d0 = grp_fu_2982_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_2_dram_d0 = StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_2_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_2_dram_we0 = StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_3_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_3_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_3_dram_address0 = tmp_76_0_0_2_fu_4220_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_3_dram_address0 = StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_3_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_3_dram_ce0 = StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_3_dram_d0 = grp_fu_2997_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_3_dram_d0 = StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_3_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_3_dram_we0 = StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_4_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_4_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_4_dram_address0 = tmp_76_0_0_3_fu_4254_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_4_dram_address0 = StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_4_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_4_dram_ce0 = StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_4_dram_d0 = grp_fu_3012_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_4_dram_d0 = StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_4_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_4_dram_we0 = StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        var2chk_0_5_dram_address0 = tmp_24_fu_7207_p1;
    end else if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_5_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_0_5_dram_address0 = tmp_76_0_0_4_fu_4288_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_5_dram_address0 = StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0;
    end else begin
        var2chk_0_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_0_5_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_5_dram_ce0 = StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0;
    end else begin
        var2chk_0_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_0_5_dram_d0 = grp_fu_3027_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_5_dram_d0 = StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0;
    end else begin
        var2chk_0_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_0_5_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_0_5_dram_we0 = StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0;
    end else begin
        var2chk_0_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_0_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_0_dram_address0 = tmp_76_1_1_4_fu_4526_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_0_dram_address0 = StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_0_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_0_dram_ce0 = StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_0_dram_d0 = grp_fu_2957_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_0_dram_d0 = StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_0_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_0_dram_we0 = StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_1_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_1_dram_address0 = tmp_76_1_fu_4356_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_1_dram_address0 = StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_1_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_1_dram_ce0 = StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_1_dram_d0 = grp_fu_2972_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_1_dram_d0 = StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_1_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_1_dram_we0 = StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_2_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_2_dram_address0 = tmp_76_1_0_1_fu_4390_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_2_dram_address0 = StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_2_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_2_dram_ce0 = StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_2_dram_d0 = grp_fu_2987_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_2_dram_d0 = StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_2_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_2_dram_we0 = StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_3_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_3_dram_address0 = tmp_76_1_0_2_fu_4424_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_3_dram_address0 = StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_3_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_3_dram_ce0 = StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_3_dram_d0 = grp_fu_3002_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_3_dram_d0 = StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_3_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_3_dram_we0 = StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_4_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_4_dram_address0 = tmp_76_1_0_3_fu_4458_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_4_dram_address0 = StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_4_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_4_dram_ce0 = StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_4_dram_d0 = grp_fu_3017_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_4_dram_d0 = StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_4_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_4_dram_we0 = StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_5_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_1_5_dram_address0 = tmp_76_1_0_4_fu_4492_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_5_dram_address0 = StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0;
    end else begin
        var2chk_1_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_1_5_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_5_dram_ce0 = StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0;
    end else begin
        var2chk_1_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_1_5_dram_d0 = grp_fu_3032_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_5_dram_d0 = StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0;
    end else begin
        var2chk_1_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_1_5_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_1_5_dram_we0 = StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0;
    end else begin
        var2chk_1_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_0_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_0_dram_address0 = tmp_76_2_1_4_fu_4730_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_0_dram_address0 = StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_0_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_0_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_0_dram_ce0 = StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_0_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_0_dram_d0 = grp_fu_2962_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_0_dram_d0 = StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_0_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_0_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_0_dram_we0 = StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_0_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_1_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_1_dram_address0 = tmp_76_2_fu_4560_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_1_dram_address0 = StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_1_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_1_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_1_dram_ce0 = StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_1_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_1_dram_d0 = grp_fu_2977_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_1_dram_d0 = StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_1_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_1_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_1_dram_we0 = StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_1_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_2_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_2_dram_address0 = tmp_76_2_0_1_fu_4594_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_2_dram_address0 = StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_2_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_2_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_2_dram_ce0 = StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_2_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_2_dram_d0 = grp_fu_2992_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_2_dram_d0 = StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_2_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_2_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_2_dram_we0 = StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_2_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_3_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_3_dram_address0 = tmp_76_2_0_2_fu_4628_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_3_dram_address0 = StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_3_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_3_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_3_dram_ce0 = StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_3_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_3_dram_d0 = grp_fu_3007_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_3_dram_d0 = StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_3_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_3_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_3_dram_we0 = StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_3_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_4_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_4_dram_address0 = tmp_76_2_0_3_fu_4662_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_4_dram_address0 = StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_4_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_4_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_4_dram_ce0 = StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_4_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_4_dram_d0 = grp_fu_3022_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_4_dram_d0 = StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_4_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_4_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_4_dram_we0 = StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_4_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_5_dram_address0 = ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        var2chk_2_5_dram_address0 = tmp_76_2_0_4_fu_4696_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_5_dram_address0 = StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0;
    end else begin
        var2chk_2_5_dram_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_enable_reg_pp1_iter8))) begin
        var2chk_2_5_dram_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_5_dram_ce0 = StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0;
    end else begin
        var2chk_2_5_dram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp1_iter8)) begin
        var2chk_2_5_dram_d0 = grp_fu_3037_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_5_dram_d0 = StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0;
    end else begin
        var2chk_2_5_dram_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter8) & (1'b0 == ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660))) begin
        var2chk_2_5_dram_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) & (1'b0 == tmp_16_fu_4083_p2))) begin
        var2chk_2_5_dram_we0 = StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0;
    end else begin
        var2chk_2_5_dram_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == tmp_s_fu_3318_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == tmp_3_fu_3360_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if ((~((tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_noisy_input_ARREADY)) & ~(tmp_2_fu_3706_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((tmp_2_fu_3706_p2 == 1'b0) & ~((tmp_2_fu_3706_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_noisy_input_ARREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)) & ~(1'b0 == tmp_9_fu_3729_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b0 == tmp_9_fu_3729_p2) & ~((1'b0 == tmp_9_fu_3729_p2) & (noisy_input_RVALID == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (~(1'b0 == tmp_8_fu_3751_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state27 : begin
            if (~(1'b0 == tmp_13_fu_3773_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (~(1'b0 == tmp_16_fu_4083_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if ((1'b0 == tmp_15_fu_4095_p2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter5) & ~(1'b1 == ap_enable_reg_pp0_iter4)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == tmp_17_fu_4107_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == tmp_17_fu_4107_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter8) & ~(1'b1 == ap_enable_reg_pp1_iter7)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == tmp_20_fu_6553_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == tmp_20_fu_6553_p2) & ~(1'b1 == ap_enable_reg_pp1_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (~(1'b0 == tmp_23_fu_7195_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state53 : begin
            if (~(1'b0 == tmp_28_fu_7421_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state55 : begin
            if (~(1'b0 == tmp_30_fu_7701_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (~(1'b0 == tmp_32_fu_7724_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state59 : begin
            if ((~(1'b0 == tmp_15_reg_8994) | (~(1'b0 == tmp_34_fu_8342_p2) & ~(1'b0 == p_1_phi_fu_2361_p4)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else if (((1'b0 == tmp_15_reg_8994) & (1'b0 == p_1_phi_fu_2361_p4) & ~(1'b0 == tmp_34_fu_8342_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state61 : begin
            if ((~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)) & ~(1'b0 == tmp_36_fu_8385_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else if (((1'b0 == tmp_36_fu_8385_p2) & ~((1'b0 == tmp_36_fu_8385_p2) & (1'b0 == ap_sig_ioackin_hard_dec_out_AWREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (~(1'b0 == tmp_39_fu_8408_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (~(1'b0 == ap_sig_ioackin_hard_dec_out_WREADY)) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (~(hard_dec_out_BVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if ((~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)) & ~(1'b0 == tmp_38_fu_8458_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_38_fu_8458_p2) & ~((1'b0 == tmp_38_fu_8458_p2) & (1'b0 == ap_sig_ioackin_soft_dec_out_AWREADY)))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (~(1'b0 == tmp_44_fu_8481_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (~(1'b0 == ap_sig_ioackin_soft_dec_out_WREADY)) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (~(soft_dec_out_BVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign H_proto_shift_address0 = tmp_197_cast_fu_3381_p1;

assign H_proto_shift_load_c_10_fu_3520_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_11_fu_3570_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_12_fu_3680_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_13_fu_3670_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_14_fu_3660_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_15_fu_3650_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_16_fu_3640_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_17_fu_3690_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_1_fu_3610_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_2_fu_3600_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_3_fu_3590_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_4_fu_3580_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_5_fu_3630_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_6_fu_3560_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_7_fu_3550_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_8_fu_3540_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_9_fu_3530_p1 = H_proto_shift_q0;

assign H_proto_shift_load_c_fu_3620_p1 = H_proto_shift_q0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state30 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state37 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state47 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state48 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state49 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state52 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_state53 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state54 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_state55 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state56 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_state57 = ap_CS_fsm[ap_const_lv32_2B];

assign ap_CS_fsm_state58 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_state59 = ap_CS_fsm[ap_const_lv32_2D];

assign ap_CS_fsm_state60 = ap_CS_fsm[ap_const_lv32_2E];

assign ap_CS_fsm_state61 = ap_CS_fsm[ap_const_lv32_2F];

assign ap_CS_fsm_state62 = ap_CS_fsm[ap_const_lv32_30];

assign ap_CS_fsm_state63 = ap_CS_fsm[ap_const_lv32_31];

assign ap_CS_fsm_state64 = ap_CS_fsm[ap_const_lv32_32];

assign ap_CS_fsm_state68 = ap_CS_fsm[ap_const_lv32_36];

assign ap_CS_fsm_state69 = ap_CS_fsm[ap_const_lv32_37];

assign ap_CS_fsm_state70 = ap_CS_fsm[ap_const_lv32_38];

assign ap_CS_fsm_state71 = ap_CS_fsm[ap_const_lv32_39];

assign ap_CS_fsm_state72 = ap_CS_fsm[ap_const_lv32_3A];

assign ap_CS_fsm_state76 = ap_CS_fsm[ap_const_lv32_3E];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign done_V_2_fu_8373_p2 = (p_1_reg_2357 & tmp_119_fu_8367_p2);

assign extLd10_fu_4023_p1 = chk2var_shift_idx_2_3;

assign extLd11_fu_4031_p1 = chk2var_shift_idx_0_3;

assign extLd12_fu_4039_p1 = chk2var_shift_idx_1_4;

assign extLd13_fu_4047_p1 = chk2var_shift_idx_2_4;

assign extLd14_fu_4055_p1 = chk2var_shift_idx_0_4;

assign extLd15_fu_4063_p1 = chk2var_shift_idx_1_5;

assign extLd16_fu_4071_p1 = chk2var_shift_idx_2_5;

assign extLd17_fu_4079_p1 = chk2var_shift_idx_0_5;

assign extLd1_fu_3943_p1 = chk2var_shift_idx_1_s;

assign extLd2_fu_3951_p1 = chk2var_shift_idx_2_s;

assign extLd3_fu_3967_p1 = chk2var_shift_idx_1_1;

assign extLd4_fu_3975_p1 = chk2var_shift_idx_2_1;

assign extLd5_fu_3983_p1 = chk2var_shift_idx_0_1;

assign extLd6_fu_3991_p1 = chk2var_shift_idx_1_2;

assign extLd7_fu_3999_p1 = chk2var_shift_idx_2_2;

assign extLd8_fu_4007_p1 = chk2var_shift_idx_0_2;

assign extLd9_fu_4015_p1 = chk2var_shift_idx_1_3;

assign extLd_fu_3959_p1 = chk2var_shift_idx_0_s;

assign hard_dec_out_AWADDR = tmp_234_fu_8397_p1;

assign hard_dec_out_WDATA = tmp_156_reg_10384;

assign hard_dec_tmp_0_V_d0 = (tmp_86_fu_7473_p2 & grp_fu_3114_p2);

assign hard_dec_tmp_1_V_d0 = (tmp_91_fu_7516_p2 & grp_fu_3120_p2);

assign hard_dec_tmp_2_V_d0 = (tmp_99_fu_7559_p2 & grp_fu_3126_p2);

assign hard_dec_tmp_3_V_d0 = (tmp_104_fu_7602_p2 & grp_fu_3132_p2);

assign hard_dec_tmp_4_V_d0 = (tmp_111_fu_7645_p2 & grp_fu_3138_p2);

assign hard_dec_tmp_5_V_d0 = (tmp_116_fu_7688_p2 & grp_fu_3144_p2);

assign i_assign_1_cast_fu_6565_p1 = i_assign_1_reg_2301;

assign i_assign_2_cast_fu_4119_p1 = i_assign_2_phi_fu_2293_p4;

assign i_assign_cast_fu_7191_p1 = i_assign_reg_2312;

assign idx_10_fu_7707_p2 = (idx_7_reg_2334 + ap_const_lv8_1);

assign idx_11_fu_7730_p2 = (idx_8_reg_2345 + ap_const_lv8_1);

assign idx_12_fu_8348_p2 = (idx_9_reg_2369 + ap_const_lv8_1);

assign idx_13_fu_8391_p2 = (idx_0_i1_reg_2380 + ap_const_lv3_1);

assign idx_14_fu_8464_p2 = (idx_1_i_reg_2414 + ap_const_lv3_1);

assign idx_15_fu_4113_p2 = (i_assign_2_phi_fu_2293_p4 + ap_const_lv8_1);

assign idx_1_fu_3324_p2 = (idx_reg_2186 + ap_const_lv2_1);

assign idx_3_fu_3712_p2 = (idx_0_i_reg_2210 + ap_const_lv3_1);

assign idx_4_fu_3779_p2 = (idx_2_reg_2255 + ap_const_lv8_1);

assign idx_5_fu_6559_p2 = (i_assign_1_reg_2301 + ap_const_lv8_1);

assign idx_6_fu_7201_p2 = (i_assign_reg_2312 + ap_const_lv8_1);

assign idx_8_cast_fu_7720_p1 = idx_8_reg_2345;

assign idx_assign_fu_3404_p3 = ((tmp_37_fu_3392_p2[0:0] === 1'b1) ? tmp_6_fu_3386_p2 : tmp_40_fu_3398_p2);

assign jdx_10_fu_8487_p2 = (jdx_1_i_reg_2437 + ap_const_lv8_1);

assign jdx_3_fu_3757_p2 = (jdx_1_reg_2244 + ap_const_lv8_1);

assign jdx_4_fu_4089_p2 = (jdx_2_reg_2267 + ap_const_lv2_1);

assign jdx_6_fu_3735_p2 = (jdx_0_i_reg_2233 + ap_const_lv8_1);

assign jdx_7_fu_7427_p2 = (jdx_5_reg_2323 + ap_const_lv8_1);

assign jdx_8_fu_3366_p2 = (jdx_reg_2198 + ap_const_lv3_1);

assign jdx_9_fu_8414_p2 = (jdx_0_i1_reg_2403 + ap_const_lv8_1);

assign n_iter_1_fu_4101_p2 = (n_iter_reg_2278 + ap_const_lv5_1);

assign next_mul1_fu_8452_p2 = (phi_mul9_reg_2426 + ap_const_lv10_A7);

assign next_mul8_fu_8379_p2 = (phi_mul7_reg_2392 + ap_const_lv10_A7);

assign next_mul_fu_3700_p2 = (phi_mul_reg_2222 + ap_const_lv10_A7);

assign noisy_input_ARADDR = tmp_18_fu_3718_p1;

assign notlhs10_fu_7633_p2 = ((tmp_107_fu_7619_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs11_fu_7676_p2 = ((tmp_114_fu_7662_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs12_fu_5173_p2 = ((tmp_125_fu_5159_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs13_fu_5211_p2 = ((tmp_130_fu_5197_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs14_fu_5249_p2 = ((tmp_135_fu_5235_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs15_fu_5287_p2 = ((tmp_140_fu_5273_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs16_fu_5325_p2 = ((tmp_145_fu_5311_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs17_fu_5395_p2 = ((tmp_151_fu_5381_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs18_fu_5557_p2 = ((tmp_163_fu_5543_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs19_fu_5595_p2 = ((tmp_168_fu_5581_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs1_fu_4827_p2 = ((tmp_53_fu_4813_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs20_fu_5633_p2 = ((tmp_173_fu_5619_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs21_fu_5671_p2 = ((tmp_178_fu_5657_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs22_fu_5709_p2 = ((tmp_183_fu_5695_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs23_fu_5779_p2 = ((tmp_189_fu_5765_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_4865_p2 = ((tmp_58_fu_4851_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_4903_p2 = ((tmp_63_fu_4889_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_4941_p2 = ((tmp_68_fu_4927_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_5011_p2 = ((tmp_79_fu_4997_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs6_fu_7461_p2 = ((tmp_84_fu_7447_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs7_fu_7504_p2 = ((tmp_89_fu_7490_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs8_fu_7547_p2 = ((tmp_97_fu_7533_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs9_fu_7590_p2 = ((tmp_102_fu_7576_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_4789_p2 = ((tmp_48_fu_4775_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs10_fu_7639_p2 = ((tmp_169_fu_7629_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs11_fu_7682_p2 = ((tmp_174_fu_7672_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs12_fu_5179_p2 = ((tmp_227_fu_5169_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs13_fu_5217_p2 = ((tmp_228_fu_5207_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs14_fu_5255_p2 = ((tmp_229_fu_5245_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs15_fu_5293_p2 = ((tmp_230_fu_5283_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs16_fu_5331_p2 = ((tmp_231_fu_5321_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs17_fu_5401_p2 = ((tmp_233_fu_5391_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs18_fu_5563_p2 = ((tmp_241_fu_5553_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs19_fu_5601_p2 = ((tmp_242_fu_5591_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs1_fu_4833_p2 = ((tmp_141_fu_4823_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs20_fu_5639_p2 = ((tmp_243_fu_5629_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs21_fu_5677_p2 = ((tmp_244_fu_5667_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs22_fu_5715_p2 = ((tmp_245_fu_5705_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs23_fu_5785_p2 = ((tmp_247_fu_5775_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_4871_p2 = ((tmp_146_fu_4861_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_4909_p2 = ((tmp_150_fu_4899_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_4947_p2 = ((tmp_152_fu_4937_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_5017_p2 = ((tmp_159_fu_5007_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs6_fu_7467_p2 = ((tmp_160_fu_7457_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs7_fu_7510_p2 = ((tmp_161_fu_7500_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs8_fu_7553_p2 = ((tmp_162_fu_7543_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs9_fu_7596_p2 = ((tmp_164_fu_7586_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_4795_p2 = ((tmp_136_fu_4785_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_1_phi_fu_2361_p4 = p_1_reg_2357;

assign p_Result_10_fu_6017_p3 = {{1'b0}, {tmp_226_reg_9176}};

assign p_Result_11_fu_6030_p3 = {{1'b0}, {tmp_232_reg_9185}};

assign p_Result_12_fu_6043_p3 = {{1'b0}, {tmp_236_reg_9210}};

assign p_Result_13_fu_6056_p3 = {{1'b0}, {tmp_237_reg_9215}};

assign p_Result_14_fu_6069_p3 = {{1'b0}, {tmp_238_reg_9220}};

assign p_Result_15_fu_6082_p3 = {{1'b0}, {tmp_239_reg_9225}};

assign p_Result_16_fu_6095_p3 = {{1'b0}, {tmp_240_reg_9230}};

assign p_Result_17_fu_6108_p3 = {{1'b0}, {tmp_246_reg_9239}};

assign p_Result_1_fu_5900_p3 = {{1'b0}, {tmp_123_reg_9107}};

assign p_Result_2_fu_5913_p3 = {{1'b0}, {tmp_124_reg_9112}};

assign p_Result_3_fu_5926_p3 = {{1'b0}, {tmp_126_reg_9117}};

assign p_Result_4_fu_5939_p3 = {{1'b0}, {tmp_131_reg_9122}};

assign p_Result_5_fu_5952_p3 = {{1'b0}, {tmp_158_reg_9131}};

assign p_Result_6_fu_5965_p3 = {{1'b0}, {tmp_222_reg_9156}};

assign p_Result_7_fu_5978_p3 = {{1'b0}, {tmp_223_reg_9161}};

assign p_Result_8_fu_5991_p3 = {{1'b0}, {tmp_224_reg_9166}};

assign p_Result_9_fu_6004_p3 = {{1'b0}, {tmp_225_reg_9171}};

assign p_Result_s_fu_5887_p3 = {{1'b0}, {tmp_122_reg_9102}};

assign p_Val2_10_fu_5151_p1 = var2chk_1_5_dram_q0;

assign p_Val2_11_fu_5373_p1 = var2chk_1_0_dram_q0;

assign p_Val2_12_fu_5503_p1 = var2chk_2_1_dram_q0;

assign p_Val2_13_fu_5511_p1 = var2chk_2_2_dram_q0;

assign p_Val2_14_fu_5519_p1 = var2chk_2_3_dram_q0;

assign p_Val2_15_fu_5527_p1 = var2chk_2_4_dram_q0;

assign p_Val2_16_fu_5535_p1 = var2chk_2_5_dram_q0;

assign p_Val2_17_fu_5757_p1 = var2chk_2_0_dram_q0;

assign p_Val2_1_fu_4743_p1 = var2chk_0_2_dram_q0;

assign p_Val2_2_fu_4751_p1 = var2chk_0_3_dram_q0;

assign p_Val2_3_fu_4759_p1 = var2chk_0_4_dram_q0;

assign p_Val2_4_fu_4767_p1 = var2chk_0_5_dram_q0;

assign p_Val2_5_fu_4989_p1 = var2chk_0_0_dram_q0;

assign p_Val2_6_fu_5119_p1 = var2chk_1_1_dram_q0;

assign p_Val2_7_fu_5127_p1 = var2chk_1_2_dram_q0;

assign p_Val2_8_fu_5135_p1 = var2chk_1_3_dram_q0;

assign p_Val2_9_fu_5143_p1 = var2chk_1_4_dram_q0;

assign p_Val2_s_fu_4735_p1 = var2chk_0_1_dram_q0;

assign p_shl6_cast_fu_3350_p1 = tmp_4_fu_3342_p3;

assign p_shl_cast_fu_3338_p1 = tmp_1_fu_3330_p3;

assign sign_product_0_1_fu_5053_p2 = (tmp5_fu_5047_p2 ^ tmp4_fu_5035_p2);

assign sign_product_0_2_fu_5077_p2 = (tmp8_fu_5071_p2 ^ tmp7_fu_5059_p2);

assign sign_product_0_3_fu_5089_p2 = (tmp11_fu_5083_p2 ^ tmp3_fu_4971_p2);

assign sign_product_0_4_fu_5101_p2 = (tmp14_fu_5095_p2 ^ tmp6_fu_5041_p2);

assign sign_product_0_5_fu_5113_p2 = (tmp17_fu_5107_p2 ^ tmp9_fu_5065_p2);

assign sign_product_1_1_fu_5437_p2 = (tmp23_fu_5431_p2 ^ tmp22_fu_5419_p2);

assign sign_product_1_2_fu_5461_p2 = (tmp26_fu_5455_p2 ^ tmp25_fu_5443_p2);

assign sign_product_1_3_fu_5473_p2 = (tmp29_fu_5467_p2 ^ tmp21_fu_5355_p2);

assign sign_product_1_4_fu_5485_p2 = (tmp32_fu_5479_p2 ^ tmp24_fu_5425_p2);

assign sign_product_1_5_fu_5497_p2 = (tmp35_fu_5491_p2 ^ tmp27_fu_5449_p2);

assign sign_product_1_fu_5367_p2 = (tmp20_fu_5361_p2 ^ tmp19_fu_5349_p2);

assign sign_product_2_1_fu_5821_p2 = (tmp41_fu_5815_p2 ^ tmp40_fu_5803_p2);

assign sign_product_2_2_fu_5845_p2 = (tmp44_fu_5839_p2 ^ tmp43_fu_5827_p2);

assign sign_product_2_3_fu_5857_p2 = (tmp47_fu_5851_p2 ^ tmp39_fu_5739_p2);

assign sign_product_2_4_fu_5869_p2 = (tmp50_fu_5863_p2 ^ tmp42_fu_5809_p2);

assign sign_product_2_5_fu_5881_p2 = (tmp53_fu_5875_p2 ^ tmp45_fu_5833_p2);

assign sign_product_2_fu_5751_p2 = (tmp38_fu_5745_p2 ^ tmp37_fu_5733_p2);

assign sign_product_fu_4983_p2 = (tmp2_fu_4977_p2 ^ tmp1_fu_4965_p2);

assign soft_dec_out_AWADDR = tmp_235_fu_8470_p1;

assign soft_dec_tmp_0_load_2_fu_7443_p1 = soft_dec_tmp_0_q0;

assign soft_dec_tmp_1_load_2_fu_7486_p1 = soft_dec_tmp_1_q0;

assign soft_dec_tmp_2_load_2_fu_7529_p1 = soft_dec_tmp_2_q0;

assign soft_dec_tmp_3_load_2_fu_7572_p1 = soft_dec_tmp_3_q0;

assign soft_dec_tmp_4_load_2_fu_7615_p1 = soft_dec_tmp_4_q0;

assign soft_dec_tmp_5_load_2_fu_7658_p1 = soft_dec_tmp_5_q0;

assign tmp11_fu_5083_p2 = (tmp1_fu_4965_p2 ^ tmp_83_fu_5029_p2);

assign tmp14_fu_5095_p2 = (tmp4_fu_5035_p2 ^ tmp_52_fu_4807_p2);

assign tmp17_fu_5107_p2 = (tmp7_fu_5059_p2 ^ tmp_57_fu_4845_p2);

assign tmp19_fu_5349_p2 = (tmp_129_fu_5191_p2 ^ tmp_134_fu_5229_p2);

assign tmp1_fu_4965_p2 = (tmp_52_fu_4807_p2 ^ tmp_57_fu_4845_p2);

assign tmp20_fu_5361_p2 = (tmp21_fu_5355_p2 ^ tmp_139_fu_5267_p2);

assign tmp21_fu_5355_p2 = (tmp_144_fu_5305_p2 ^ tmp_149_fu_5343_p2);

assign tmp22_fu_5419_p2 = (tmp_134_fu_5229_p2 ^ tmp_139_fu_5267_p2);

assign tmp23_fu_5431_p2 = (tmp24_fu_5425_p2 ^ tmp_144_fu_5305_p2);

assign tmp24_fu_5425_p2 = (tmp_149_fu_5343_p2 ^ tmp_155_fu_5413_p2);

assign tmp25_fu_5443_p2 = (tmp_139_fu_5267_p2 ^ tmp_144_fu_5305_p2);

assign tmp26_fu_5455_p2 = (tmp27_fu_5449_p2 ^ tmp_149_fu_5343_p2);

assign tmp27_fu_5449_p2 = (tmp_155_fu_5413_p2 ^ tmp_129_fu_5191_p2);

assign tmp29_fu_5467_p2 = (tmp19_fu_5349_p2 ^ tmp_155_fu_5413_p2);

assign tmp2_fu_4977_p2 = (tmp3_fu_4971_p2 ^ tmp_62_fu_4883_p2);

assign tmp32_fu_5479_p2 = (tmp22_fu_5419_p2 ^ tmp_129_fu_5191_p2);

assign tmp35_fu_5491_p2 = (tmp25_fu_5443_p2 ^ tmp_134_fu_5229_p2);

assign tmp37_fu_5733_p2 = (tmp_167_fu_5575_p2 ^ tmp_172_fu_5613_p2);

assign tmp38_fu_5745_p2 = (tmp39_fu_5739_p2 ^ tmp_177_fu_5651_p2);

assign tmp39_fu_5739_p2 = (tmp_182_fu_5689_p2 ^ tmp_187_fu_5727_p2);

assign tmp3_fu_4971_p2 = (tmp_67_fu_4921_p2 ^ tmp_72_fu_4959_p2);

assign tmp40_fu_5803_p2 = (tmp_172_fu_5613_p2 ^ tmp_177_fu_5651_p2);

assign tmp41_fu_5815_p2 = (tmp42_fu_5809_p2 ^ tmp_182_fu_5689_p2);

assign tmp42_fu_5809_p2 = (tmp_187_fu_5727_p2 ^ tmp_193_fu_5797_p2);

assign tmp43_fu_5827_p2 = (tmp_177_fu_5651_p2 ^ tmp_182_fu_5689_p2);

assign tmp44_fu_5839_p2 = (tmp45_fu_5833_p2 ^ tmp_187_fu_5727_p2);

assign tmp45_fu_5833_p2 = (tmp_193_fu_5797_p2 ^ tmp_167_fu_5575_p2);

assign tmp47_fu_5851_p2 = (tmp37_fu_5733_p2 ^ tmp_193_fu_5797_p2);

assign tmp4_fu_5035_p2 = (tmp_57_fu_4845_p2 ^ tmp_62_fu_4883_p2);

assign tmp50_fu_5863_p2 = (tmp40_fu_5803_p2 ^ tmp_167_fu_5575_p2);

assign tmp53_fu_5875_p2 = (tmp43_fu_5827_p2 ^ tmp_172_fu_5613_p2);

assign tmp55_fu_8242_p2 = (tmp56_fu_8238_p2 ^ syndrome_0_V_q0);

assign tmp56_fu_8238_p2 = (hard_dec_tmp_0_V_lo_reg_10200 ^ hard_dec_tmp_1_V_lo_reg_10205);

assign tmp57_fu_8256_p2 = (tmp59_fu_8252_p2 ^ tmp58_fu_8248_p2);

assign tmp58_fu_8248_p2 = (hard_dec_tmp_2_V_lo_reg_10210 ^ hard_dec_tmp_3_V_lo_reg_10215);

assign tmp59_fu_8252_p2 = (hard_dec_tmp_4_V_lo_reg_10220 ^ hard_dec_tmp_5_V_lo_reg_10225);

assign tmp5_fu_5047_p2 = (tmp6_fu_5041_p2 ^ tmp_67_fu_4921_p2);

assign tmp60_fu_8275_p2 = (tmp61_fu_8269_p2 ^ syndrome_1_V_q0);

assign tmp61_fu_8269_p2 = (hard_dec_tmp_0_V_q0 ^ hard_dec_tmp_1_V_q0);

assign tmp62_fu_8292_p2 = (tmp64_fu_8286_p2 ^ tmp63_fu_8281_p2);

assign tmp63_fu_8281_p2 = (hard_dec_tmp_2_V_q0 ^ hard_dec_tmp_3_V_lo_1_reg_10250);

assign tmp64_fu_8286_p2 = (hard_dec_tmp_4_V_q0 ^ hard_dec_tmp_5_V_q0);

assign tmp65_fu_8311_p2 = (tmp66_fu_8305_p2 ^ syndrome_2_V_q0);

assign tmp66_fu_8305_p2 = (hard_dec_tmp_0_V_q1 ^ hard_dec_tmp_1_V_q1);

assign tmp67_fu_8329_p2 = (tmp69_fu_8323_p2 ^ tmp68_fu_8317_p2);

assign tmp68_fu_8317_p2 = (hard_dec_tmp_2_V_q1 ^ hard_dec_tmp_3_V_q1);

assign tmp69_fu_8323_p2 = (hard_dec_tmp_4_V_q1 ^ hard_dec_tmp_5_V_q1);

assign tmp6_fu_5041_p2 = (tmp_72_fu_4959_p2 ^ tmp_83_fu_5029_p2);

assign tmp70_fu_8361_p2 = (syndrome_1_V_q0 & syndrome_2_V_q0);

assign tmp7_fu_5059_p2 = (tmp_62_fu_4883_p2 ^ tmp_67_fu_4921_p2);

assign tmp8_fu_5071_p2 = (tmp9_fu_5065_p2 ^ tmp_72_fu_4959_p2);

assign tmp9_fu_5065_p2 = (tmp_83_fu_5029_p2 ^ tmp_52_fu_4807_p2);

assign tmp_102_fu_7576_p4 = {{soft_dec_tmp_3_load_2_fu_7572_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_103_fu_3903_p1 = var2chk_shift_idx_2_2[8:0];

assign tmp_104_fu_7602_p2 = (notrhs9_fu_7596_p2 | notlhs9_fu_7590_p2);

assign tmp_107_fu_7619_p4 = {{soft_dec_tmp_4_load_2_fu_7615_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_108_0_1_fu_7771_p2 = (idx_8_reg_2345 + ap_const_lv8_D);

assign tmp_108_0_2_fu_7803_p2 = (idx_8_reg_2345 + ap_const_lv8_19);

assign tmp_108_0_3_fu_7834_p2 = (idx_8_cast_fu_7720_p1 + ap_const_lv9_A6);

assign tmp_108_0_4_fu_7865_p2 = (idx_8_reg_2345 + ap_const_lv8_11);

assign tmp_108_0_5_fu_7896_p2 = (idx_8_cast_fu_7720_p1 + ap_const_lv9_81);

assign tmp_108_1_1_fu_7969_p2 = (idx_8_reg_2345 + ap_const_lv8_26);

assign tmp_108_1_2_fu_8000_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_89);

assign tmp_108_1_4_fu_8029_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_A0);

assign tmp_108_1_5_fu_8058_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_88);

assign tmp_108_1_fu_7935_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_7C);

assign tmp_108_2_1_fu_8118_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_98);

assign tmp_108_2_2_fu_8147_p2 = (idx_8_reg_2345 + ap_const_lv8_59);

assign tmp_108_2_3_fu_8178_p2 = (idx_8_reg_2345 + ap_const_lv8_49);

assign tmp_108_2_5_fu_8209_p2 = (idx_8_cast_reg_10137 + ap_const_lv9_91);

assign tmp_108_2_fu_8087_p2 = (idx_8_reg_2345 + ap_const_lv8_4B);

assign tmp_108_fu_7736_p2 = (idx_8_cast_fu_7720_p1 + ap_const_lv9_73);

assign tmp_109_0_1_fu_7797_p1 = tmp_idx_9_0_1_fu_7789_p3;

assign tmp_109_0_2_fu_7829_p1 = tmp_idx_9_0_2_fu_7821_p3;

assign tmp_109_0_3_fu_7860_p1 = tmp_idx_9_0_3_fu_7852_p3;

assign tmp_109_0_4_fu_7891_p1 = tmp_idx_9_0_4_fu_7883_p3;

assign tmp_109_0_5_fu_7922_p1 = tmp_idx_9_0_5_fu_7914_p3;

assign tmp_109_1_1_fu_7995_p1 = tmp_idx_9_1_1_fu_7987_p3;

assign tmp_109_1_2_fu_8024_p1 = tmp_idx_9_1_2_fu_8016_p3;

assign tmp_109_1_4_fu_8053_p1 = tmp_idx_9_1_4_fu_8045_p3;

assign tmp_109_1_5_fu_8082_p1 = tmp_idx_9_1_5_fu_8074_p3;

assign tmp_109_1_fu_7964_p1 = tmp_idx_9_1_fu_7956_p3;

assign tmp_109_2_1_fu_8142_p1 = tmp_idx_9_2_1_fu_8134_p3;

assign tmp_109_2_2_fu_8173_p1 = tmp_idx_9_2_2_fu_8165_p3;

assign tmp_109_2_3_fu_8204_p1 = tmp_idx_9_2_3_fu_8196_p3;

assign tmp_109_2_5_fu_8233_p1 = tmp_idx_9_2_5_fu_8225_p3;

assign tmp_109_2_fu_8113_p1 = tmp_idx_9_2_fu_8105_p3;

assign tmp_109_fu_7766_p1 = tmp_idx_9_fu_7758_p3;

assign tmp_110_0_5_fu_8262_p2 = (tmp57_fu_8256_p2 ^ tmp55_fu_8242_p2);

assign tmp_110_1_5_fu_8298_p2 = (tmp62_fu_8292_p2 ^ tmp60_fu_8275_p2);

assign tmp_110_2_5_fu_8335_p2 = (tmp67_fu_8329_p2 ^ tmp65_fu_8311_p2);

assign tmp_110_fu_3911_p1 = var2chk_shift_idx_2_3[8:0];

assign tmp_111_fu_7645_p2 = (notrhs10_fu_7639_p2 | notlhs10_fu_7633_p2);

assign tmp_114_fu_7662_p4 = {{soft_dec_tmp_5_load_2_fu_7658_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_115_fu_3919_p1 = var2chk_shift_idx_2_4[8:0];

assign tmp_116_fu_7688_p2 = (notrhs11_fu_7682_p2 | notlhs11_fu_7676_p2);

assign tmp_119_fu_8367_p2 = (tmp70_fu_8361_p2 & syndrome_0_V_q0);

assign tmp_120_fu_3927_p1 = var2chk_shift_idx_2_5[8:0];

assign tmp_121_fu_3935_p1 = var2chk_shift_idx_2_s[8:0];

assign tmp_122_fu_4739_p1 = p_Val2_s_fu_4735_p1[30:0];

assign tmp_123_fu_4747_p1 = p_Val2_1_fu_4743_p1[30:0];

assign tmp_124_fu_4755_p1 = p_Val2_2_fu_4751_p1[30:0];

assign tmp_125_fu_5159_p4 = {{p_Val2_6_fu_5119_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_126_fu_4763_p1 = p_Val2_3_fu_4759_p1[30:0];

assign tmp_127_fu_5185_p2 = (notrhs12_fu_5179_p2 | notlhs12_fu_5173_p2);

assign tmp_129_fu_5191_p2 = (tmp_127_fu_5185_p2 & tmp_128_fu_3150_p2);

assign tmp_12_fu_3741_p1 = jdx_0_i_reg_2233;

assign tmp_130_fu_5197_p4 = {{p_Val2_7_fu_5127_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_131_fu_4771_p1 = p_Val2_4_fu_4767_p1[30:0];

assign tmp_132_fu_5223_p2 = (notrhs13_fu_5217_p2 | notlhs13_fu_5211_p2);

assign tmp_134_fu_5229_p2 = (tmp_132_fu_5223_p2 & tmp_133_fu_3156_p2);

assign tmp_135_fu_5235_p4 = {{p_Val2_8_fu_5135_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_136_fu_4785_p1 = p_Val2_s_fu_4735_p1[22:0];

assign tmp_137_fu_5261_p2 = (notrhs14_fu_5255_p2 | notlhs14_fu_5249_p2);

assign tmp_139_fu_5267_p2 = (tmp_137_fu_5261_p2 & tmp_138_fu_3162_p2);

assign tmp_13_fu_3773_p2 = ((idx_2_reg_2255 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_140_fu_5273_p4 = {{p_Val2_9_fu_5143_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_141_fu_4823_p1 = p_Val2_1_fu_4743_p1[22:0];

assign tmp_142_fu_5299_p2 = (notrhs15_fu_5293_p2 | notlhs15_fu_5287_p2);

assign tmp_144_fu_5305_p2 = (tmp_142_fu_5299_p2 & tmp_143_fu_3168_p2);

assign tmp_145_fu_5311_p4 = {{p_Val2_10_fu_5151_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_146_fu_4861_p1 = p_Val2_2_fu_4751_p1[22:0];

assign tmp_147_fu_5337_p2 = (notrhs16_fu_5331_p2 | notlhs16_fu_5325_p2);

assign tmp_149_fu_5343_p2 = (tmp_147_fu_5337_p2 & tmp_148_fu_3174_p2);

assign tmp_14_fu_3785_p1 = idx_2_reg_2255;

assign tmp_150_fu_4899_p1 = p_Val2_3_fu_4759_p1[22:0];

assign tmp_151_fu_5381_p4 = {{p_Val2_11_fu_5373_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_152_fu_4937_p1 = p_Val2_4_fu_4767_p1[22:0];

assign tmp_153_fu_5407_p2 = (notrhs17_fu_5401_p2 | notlhs17_fu_5395_p2);

assign tmp_155_fu_5413_p2 = (tmp_153_fu_5407_p2 & tmp_154_fu_3180_p2);

assign tmp_158_fu_4993_p1 = p_Val2_5_fu_4989_p1[30:0];

assign tmp_159_fu_5007_p1 = p_Val2_5_fu_4989_p1[22:0];

assign tmp_15_fu_4095_p2 = ((n_iter_reg_2278 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign tmp_160_fu_7457_p1 = soft_dec_tmp_0_load_2_fu_7443_p1[22:0];

assign tmp_161_fu_7500_p1 = soft_dec_tmp_1_load_2_fu_7486_p1[22:0];

assign tmp_162_fu_7543_p1 = soft_dec_tmp_2_load_2_fu_7529_p1[22:0];

assign tmp_163_fu_5543_p4 = {{p_Val2_12_fu_5503_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_164_fu_7586_p1 = soft_dec_tmp_3_load_2_fu_7572_p1[22:0];

assign tmp_165_fu_5569_p2 = (notrhs18_fu_5563_p2 | notlhs18_fu_5557_p2);

assign tmp_167_fu_5575_p2 = (tmp_165_fu_5569_p2 & tmp_166_fu_3186_p2);

assign tmp_168_fu_5581_p4 = {{p_Val2_13_fu_5511_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_169_fu_7629_p1 = soft_dec_tmp_4_load_2_fu_7615_p1[22:0];

assign tmp_16_fu_4083_p2 = ((jdx_2_reg_2267 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign tmp_170_fu_5607_p2 = (notrhs19_fu_5601_p2 | notlhs19_fu_5595_p2);

assign tmp_172_fu_5613_p2 = (tmp_170_fu_5607_p2 & tmp_171_fu_3192_p2);

assign tmp_173_fu_5619_p4 = {{p_Val2_14_fu_5519_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_174_fu_7672_p1 = soft_dec_tmp_5_load_2_fu_7658_p1[22:0];

assign tmp_175_fu_5645_p2 = (notrhs20_fu_5639_p2 | notlhs20_fu_5633_p2);

assign tmp_177_fu_5651_p2 = (tmp_175_fu_5645_p2 & tmp_176_fu_3198_p2);

assign tmp_178_fu_5657_p4 = {{p_Val2_15_fu_5527_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_179_fu_7742_p2 = ((tmp_108_fu_7736_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_17_fu_4107_p2 = ((i_assign_2_phi_fu_2293_p4 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_180_fu_5683_p2 = (notrhs21_fu_5677_p2 | notlhs21_fu_5671_p2);

assign tmp_182_fu_5689_p2 = (tmp_180_fu_5683_p2 & tmp_181_fu_3204_p2);

assign tmp_183_fu_5695_p4 = {{p_Val2_16_fu_5535_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_184_fu_7748_p2 = ($signed(idx_8_reg_2345) + $signed(ap_const_lv8_CC));

assign tmp_185_fu_5721_p2 = (notrhs22_fu_5715_p2 | notlhs22_fu_5709_p2);

assign tmp_187_fu_5727_p2 = (tmp_185_fu_5721_p2 & tmp_186_fu_3210_p2);

assign tmp_188_fu_7777_p2 = ((tmp_108_0_1_fu_7771_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_189_fu_5765_p4 = {{p_Val2_17_fu_5757_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_18_fu_3718_p1 = phi_mul_reg_2222;

assign tmp_190_fu_7783_p2 = (idx_8_reg_2345 + ap_const_lv8_66);

assign tmp_191_fu_5791_p2 = (notrhs23_fu_5785_p2 | notlhs23_fu_5779_p2);

assign tmp_193_fu_5797_p2 = (tmp_191_fu_5791_p2 & tmp_192_fu_3216_p2);

assign tmp_194_fu_7809_p2 = ((tmp_108_0_2_fu_7803_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_195_fu_7815_p2 = (idx_8_reg_2345 + ap_const_lv8_72);

assign tmp_196_fu_7840_p2 = ((tmp_108_0_3_fu_7834_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_197_cast_fu_3381_p1 = $signed(tmp_19_fu_3376_p2);

assign tmp_197_fu_7846_p2 = ($signed(idx_8_cast_fu_7720_p1) + $signed(ap_const_lv9_1FF));

assign tmp_198_fu_7871_p2 = ((tmp_108_0_4_fu_7865_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_199_fu_7877_p2 = (idx_8_reg_2345 + ap_const_lv8_6A);

assign tmp_19_fu_3376_p2 = (tmp_5_cast_fu_3372_p1 + tmp_5_reg_8529);

assign tmp_1_fu_3330_p3 = {{idx_reg_2186}, {ap_const_lv3_0}};

assign tmp_200_fu_7902_p2 = ((tmp_108_0_5_fu_7896_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_201_fu_7908_p2 = ($signed(idx_8_cast_fu_7720_p1) + $signed(ap_const_lv9_1DA));

assign tmp_202_cast_fu_7754_p1 = $signed(tmp_184_fu_7748_p2);

assign tmp_202_fu_7940_p2 = ((tmp_108_1_fu_7935_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_203_fu_7946_p2 = ($signed(idx_8_reg_2345) + $signed(ap_const_lv8_D5));

assign tmp_204_fu_7975_p2 = ((tmp_108_1_1_fu_7969_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_205_fu_7981_p2 = (idx_8_reg_2345 + ap_const_lv8_7F);

assign tmp_206_fu_8005_p2 = ((tmp_108_1_2_fu_8000_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_207_fu_8011_p2 = ($signed(idx_8_cast_reg_10137) + $signed(ap_const_lv9_1E2));

assign tmp_208_fu_8034_p2 = ((tmp_108_1_4_fu_8029_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_209_fu_8040_p2 = ($signed(idx_8_cast_reg_10137) + $signed(ap_const_lv9_1F9));

assign tmp_20_fu_6553_p2 = ((i_assign_1_reg_2301 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_210_fu_8063_p2 = ((tmp_108_1_5_fu_8058_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_211_fu_8069_p2 = ($signed(idx_8_cast_reg_10137) + $signed(ap_const_lv9_1E1));

assign tmp_212_fu_8093_p2 = ((tmp_108_2_fu_8087_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_213_fu_8099_p2 = ($signed(idx_8_reg_2345) + $signed(ap_const_lv8_A4));

assign tmp_214_cast_fu_7952_p1 = $signed(tmp_203_fu_7946_p2);

assign tmp_214_fu_8123_p2 = ((tmp_108_2_1_fu_8118_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_215_fu_8129_p2 = ($signed(idx_8_cast_reg_10137) + $signed(ap_const_lv9_1F1));

assign tmp_216_fu_8153_p2 = ((tmp_108_2_2_fu_8147_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_217_fu_8159_p2 = ($signed(idx_8_reg_2345) + $signed(ap_const_lv8_B2));

assign tmp_218_fu_8184_p2 = ((tmp_108_2_3_fu_8178_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_219_fu_8190_p2 = ($signed(idx_8_reg_2345) + $signed(ap_const_lv8_A2));

assign tmp_220_fu_8214_p2 = ((tmp_108_2_5_fu_8209_p2 < ap_const_lv9_A7) ? 1'b1 : 1'b0);

assign tmp_221_fu_8220_p2 = ($signed(idx_8_cast_reg_10137) + $signed(ap_const_lv9_1EA));

assign tmp_222_fu_5123_p1 = p_Val2_6_fu_5119_p1[30:0];

assign tmp_223_fu_5131_p1 = p_Val2_7_fu_5127_p1[30:0];

assign tmp_224_fu_5139_p1 = p_Val2_8_fu_5135_p1[30:0];

assign tmp_225_fu_5147_p1 = p_Val2_9_fu_5143_p1[30:0];

assign tmp_226_fu_5155_p1 = p_Val2_10_fu_5151_p1[30:0];

assign tmp_227_fu_5169_p1 = p_Val2_6_fu_5119_p1[22:0];

assign tmp_228_fu_5207_p1 = p_Val2_7_fu_5127_p1[22:0];

assign tmp_229_fu_5245_p1 = p_Val2_8_fu_5135_p1[22:0];

assign tmp_22_fu_6569_p1 = i_assign_1_reg_2301;

assign tmp_230_fu_5283_p1 = p_Val2_9_fu_5143_p1[22:0];

assign tmp_231_fu_5321_p1 = p_Val2_10_fu_5151_p1[22:0];

assign tmp_232_fu_5377_p1 = p_Val2_11_fu_5373_p1[30:0];

assign tmp_233_fu_5391_p1 = p_Val2_11_fu_5373_p1[22:0];

assign tmp_234_fu_8397_p1 = phi_mul7_reg_2392;

assign tmp_235_fu_8470_p1 = phi_mul9_reg_2426;

assign tmp_236_fu_5507_p1 = p_Val2_12_fu_5503_p1[30:0];

assign tmp_237_fu_5515_p1 = p_Val2_13_fu_5511_p1[30:0];

assign tmp_238_fu_5523_p1 = p_Val2_14_fu_5519_p1[30:0];

assign tmp_239_fu_5531_p1 = p_Val2_15_fu_5527_p1[30:0];

assign tmp_23_fu_7195_p2 = ((i_assign_reg_2312 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_240_fu_5539_p1 = p_Val2_16_fu_5535_p1[30:0];

assign tmp_241_fu_5553_p1 = p_Val2_12_fu_5503_p1[22:0];

assign tmp_242_fu_5591_p1 = p_Val2_13_fu_5511_p1[22:0];

assign tmp_243_fu_5629_p1 = p_Val2_14_fu_5519_p1[22:0];

assign tmp_244_fu_5667_p1 = p_Val2_15_fu_5527_p1[22:0];

assign tmp_245_fu_5705_p1 = p_Val2_16_fu_5535_p1[22:0];

assign tmp_246_fu_5761_p1 = p_Val2_17_fu_5757_p1[30:0];

assign tmp_247_fu_5775_p1 = p_Val2_17_fu_5757_p1[22:0];

assign tmp_24_fu_7207_p1 = i_assign_reg_2312;

assign tmp_25_fu_7222_p2 = ((tmp_idx_fu_7217_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_26_fu_7246_p1 = $unsigned(tmp_idx_2_cast_fu_7242_p1);

assign tmp_28_fu_7421_p2 = ((jdx_5_reg_2323 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_29_fu_7433_p1 = jdx_5_reg_2323;

assign tmp_2_fu_3706_p2 = ((idx_0_i_reg_2210 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign tmp_30_fu_7701_p2 = ((idx_7_reg_2334 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_31_fu_7713_p1 = idx_7_reg_2334;

assign tmp_32_fu_7724_p2 = ((idx_8_reg_2345 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_33_fu_7927_p1 = idx_8_reg_2345;

assign tmp_34_fu_8342_p2 = ((idx_9_reg_2369 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_35_fu_8354_p1 = idx_9_reg_2369;

assign tmp_36_fu_8385_p2 = ((idx_0_i1_reg_2380 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign tmp_37_fu_3392_p2 = ((tmp_6_fu_3386_p2 < ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_38_fu_8458_p2 = ((idx_1_i_reg_2414 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign tmp_39_fu_8408_p2 = ((jdx_0_i1_reg_2403 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_3_fu_3360_p2 = ((jdx_reg_2198 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign tmp_40_fu_3398_p2 = (tmp_6_fu_3386_p2 + ap_const_lv8_59);

assign tmp_41_fu_8420_p1 = jdx_0_i1_reg_2403;

assign tmp_42_fu_3799_p1 = var2chk_shift_idx_0_1[8:0];

assign tmp_44_fu_8481_p2 = ((jdx_1_i_reg_2437 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_45_fu_8493_p1 = jdx_1_i_reg_2437;

assign tmp_46_fu_3807_p1 = var2chk_shift_idx_0_2[8:0];

assign tmp_47_fu_3815_p1 = var2chk_shift_idx_0_3[8:0];

assign tmp_48_fu_4775_p4 = {{p_Val2_s_fu_4735_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_49_fu_3823_p1 = var2chk_shift_idx_0_4[8:0];

assign tmp_4_fu_3342_p3 = {{idx_reg_2186}, {1'b0}};

assign tmp_50_fu_4801_p2 = (notrhs_fu_4795_p2 | notlhs_fu_4789_p2);

assign tmp_52_fu_4807_p2 = (tmp_50_fu_4801_p2 & grp_fu_3114_p2);

assign tmp_53_fu_4813_p4 = {{p_Val2_1_fu_4743_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_54_fu_3831_p1 = var2chk_shift_idx_0_5[8:0];

assign tmp_55_1_fu_7256_p2 = ((tmp_idx_s_fu_7251_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_55_2_fu_7290_p2 = ((tmp_idx_6_fu_7285_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_55_3_fu_7324_p2 = ((tmp_idx_3_fu_7319_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_55_4_fu_7358_p2 = ((tmp_idx_4_fu_7353_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_55_5_fu_7392_p2 = ((tmp_idx_5_fu_7387_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_55_fu_4839_p2 = (notrhs1_fu_4833_p2 | notlhs1_fu_4827_p2);

assign tmp_56_1_fu_7280_p1 = $unsigned(tmp_idx_2_1_cast_fu_7276_p1);

assign tmp_56_2_fu_7314_p1 = $unsigned(tmp_idx_2_2_cast_fu_7310_p1);

assign tmp_56_3_fu_7348_p1 = $unsigned(tmp_idx_2_3_cast_fu_7344_p1);

assign tmp_56_4_fu_7382_p1 = $unsigned(tmp_idx_2_4_cast_fu_7378_p1);

assign tmp_56_5_fu_7416_p1 = $unsigned(tmp_idx_2_5_cast_fu_7412_p1);

assign tmp_57_fu_4845_p2 = (tmp_55_fu_4839_p2 & grp_fu_3120_p2);

assign tmp_58_fu_4851_p4 = {{p_Val2_2_fu_4751_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_59_fu_3839_p1 = var2chk_shift_idx_0_s[8:0];

assign tmp_5_cast_fu_3372_p1 = jdx_reg_2198;

assign tmp_5_fu_3354_p2 = (p_shl_cast_fu_3338_p1 - p_shl6_cast_fu_3350_p1);

assign tmp_60_fu_4877_p2 = (notrhs2_fu_4871_p2 | notlhs2_fu_4865_p2);

assign tmp_62_fu_4883_p2 = (tmp_60_fu_4877_p2 & grp_fu_3126_p2);

assign tmp_63_fu_4889_p4 = {{p_Val2_3_fu_4759_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_64_fu_3847_p1 = var2chk_shift_idx_1_1[8:0];

assign tmp_65_fu_4915_p2 = (notrhs3_fu_4909_p2 | notlhs3_fu_4903_p2);

assign tmp_67_fu_4921_p2 = (tmp_65_fu_4915_p2 & grp_fu_3132_p2);

assign tmp_68_fu_4927_p4 = {{p_Val2_4_fu_4767_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_69_fu_3855_p1 = var2chk_shift_idx_1_2[8:0];

assign tmp_6_fu_3386_p2 = ($signed(ap_const_lv8_A7) - $signed(H_proto_shift_q0));

assign tmp_70_fu_4953_p2 = (notrhs4_fu_4947_p2 | notlhs4_fu_4941_p2);

assign tmp_72_fu_4959_p2 = (tmp_70_fu_4953_p2 & grp_fu_3138_p2);

assign tmp_73_fu_6135_p1 = tmp_82_neg_fu_6129_p2;

assign tmp_74_fu_6140_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_75_0_0_1_fu_4162_p2 = ((tmp_idx_3_0_0_1_fu_4157_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_0_0_2_fu_4196_p2 = ((tmp_idx_3_0_0_2_fu_4191_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_0_0_3_fu_4230_p2 = ((tmp_idx_3_0_0_3_fu_4225_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_0_0_4_fu_4264_p2 = ((tmp_idx_3_0_0_4_fu_4259_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_0_1_4_fu_4298_p2 = ((tmp_idx_3_0_1_4_fu_4293_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_0_1_fu_4366_p2 = ((tmp_idx_3_1_0_1_fu_4361_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_0_2_fu_4400_p2 = ((tmp_idx_3_1_0_2_fu_4395_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_0_3_fu_4434_p2 = ((tmp_idx_3_1_0_3_fu_4429_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_0_4_fu_4468_p2 = ((tmp_idx_3_1_0_4_fu_4463_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_1_4_fu_4502_p2 = ((tmp_idx_3_1_1_4_fu_4497_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_1_fu_4332_p2 = ((tmp_idx_3_1_fu_4327_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_0_1_fu_4570_p2 = ((tmp_idx_3_2_0_1_fu_4565_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_0_2_fu_4604_p2 = ((tmp_idx_3_2_0_2_fu_4599_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_0_3_fu_4638_p2 = ((tmp_idx_3_2_0_3_fu_4633_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_0_4_fu_4672_p2 = ((tmp_idx_3_2_0_4_fu_4667_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_1_4_fu_4706_p2 = ((tmp_idx_3_2_1_4_fu_4701_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_2_fu_4536_p2 = ((tmp_idx_3_2_fu_4531_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_75_fu_4128_p2 = ((tmp_idx_10_fu_4123_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_76_0_0_1_fu_4186_p1 = $unsigned(tmp_idx_5_0_0_1_cast_fu_4182_p1);

assign tmp_76_0_0_2_fu_4220_p1 = $unsigned(tmp_idx_5_0_0_2_cast_fu_4216_p1);

assign tmp_76_0_0_3_fu_4254_p1 = $unsigned(tmp_idx_5_0_0_3_cast_fu_4250_p1);

assign tmp_76_0_0_4_fu_4288_p1 = $unsigned(tmp_idx_5_0_0_4_cast_fu_4284_p1);

assign tmp_76_0_1_4_fu_4322_p1 = $unsigned(tmp_idx_5_0_1_4_cast_fu_4318_p1);

assign tmp_76_1_0_1_fu_4390_p1 = $unsigned(tmp_idx_5_1_0_1_cast_fu_4386_p1);

assign tmp_76_1_0_2_fu_4424_p1 = $unsigned(tmp_idx_5_1_0_2_cast_fu_4420_p1);

assign tmp_76_1_0_3_fu_4458_p1 = $unsigned(tmp_idx_5_1_0_3_cast_fu_4454_p1);

assign tmp_76_1_0_4_fu_4492_p1 = $unsigned(tmp_idx_5_1_0_4_cast_fu_4488_p1);

assign tmp_76_1_1_4_fu_4526_p1 = $unsigned(tmp_idx_5_1_1_4_cast_fu_4522_p1);

assign tmp_76_1_fu_4356_p1 = $unsigned(tmp_idx_5_1_cast_fu_4352_p1);

assign tmp_76_2_0_1_fu_4594_p1 = $unsigned(tmp_idx_5_2_0_1_cast_fu_4590_p1);

assign tmp_76_2_0_2_fu_4628_p1 = $unsigned(tmp_idx_5_2_0_2_cast_fu_4624_p1);

assign tmp_76_2_0_3_fu_4662_p1 = $unsigned(tmp_idx_5_2_0_3_cast_fu_4658_p1);

assign tmp_76_2_0_4_fu_4696_p1 = $unsigned(tmp_idx_5_2_0_4_cast_fu_4692_p1);

assign tmp_76_2_1_4_fu_4730_p1 = $unsigned(tmp_idx_5_2_1_4_cast_fu_4726_p1);

assign tmp_76_2_fu_4560_p1 = $unsigned(tmp_idx_5_2_cast_fu_4556_p1);

assign tmp_76_fu_4152_p1 = $unsigned(tmp_idx_5_0_cast_fu_4148_p1);

assign tmp_77_fu_6121_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_78_fu_3863_p1 = var2chk_shift_idx_1_3[8:0];

assign tmp_79_fu_4997_p4 = {{p_Val2_5_fu_4989_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_7_fu_3763_p1 = jdx_1_reg_2244;

assign tmp_80_fu_3871_p1 = var2chk_shift_idx_1_4[8:0];

assign tmp_81_fu_5023_p2 = (notrhs5_fu_5017_p2 | notlhs5_fu_5011_p2);

assign tmp_82_0_1_fu_6159_p1 = tmp_82_neg_0_1_fu_6153_p2;

assign tmp_82_0_2_fu_6183_p1 = tmp_82_neg_0_2_fu_6177_p2;

assign tmp_82_0_3_fu_6207_p1 = tmp_82_neg_0_3_fu_6201_p2;

assign tmp_82_0_4_fu_6231_p1 = tmp_82_neg_0_4_fu_6225_p2;

assign tmp_82_0_5_fu_6255_p1 = tmp_82_neg_0_5_fu_6249_p2;

assign tmp_82_1_1_fu_6303_p1 = tmp_82_neg_1_1_fu_6297_p2;

assign tmp_82_1_2_fu_6327_p1 = tmp_82_neg_1_2_fu_6321_p2;

assign tmp_82_1_3_fu_6351_p1 = tmp_82_neg_1_3_fu_6345_p2;

assign tmp_82_1_4_fu_6375_p1 = tmp_82_neg_1_4_fu_6369_p2;

assign tmp_82_1_5_fu_6399_p1 = tmp_82_neg_1_5_fu_6393_p2;

assign tmp_82_1_fu_6279_p1 = tmp_82_neg_1_fu_6273_p2;

assign tmp_82_2_1_fu_6447_p1 = tmp_82_neg_2_1_fu_6441_p2;

assign tmp_82_2_2_fu_6471_p1 = tmp_82_neg_2_2_fu_6465_p2;

assign tmp_82_2_3_fu_6495_p1 = tmp_82_neg_2_3_fu_6489_p2;

assign tmp_82_2_4_fu_6519_p1 = tmp_82_neg_2_4_fu_6513_p2;

assign tmp_82_2_5_fu_6543_p1 = tmp_82_neg_2_5_fu_6537_p2;

assign tmp_82_2_fu_6423_p1 = tmp_82_neg_2_fu_6417_p2;

assign tmp_82_neg_0_1_fu_6153_p2 = (tmp_82_to_int_0_1_fu_6150_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_0_2_fu_6177_p2 = (tmp_82_to_int_0_2_fu_6174_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_0_3_fu_6201_p2 = (tmp_82_to_int_0_3_fu_6198_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_0_4_fu_6225_p2 = (tmp_82_to_int_0_4_fu_6222_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_0_5_fu_6249_p2 = (tmp_82_to_int_0_5_fu_6246_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_1_fu_6297_p2 = (tmp_82_to_int_1_1_fu_6294_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_2_fu_6321_p2 = (tmp_82_to_int_1_2_fu_6318_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_3_fu_6345_p2 = (tmp_82_to_int_1_3_fu_6342_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_4_fu_6369_p2 = (tmp_82_to_int_1_4_fu_6366_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_5_fu_6393_p2 = (tmp_82_to_int_1_5_fu_6390_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_1_fu_6273_p2 = (tmp_82_to_int_1_fu_6270_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_1_fu_6441_p2 = (tmp_82_to_int_2_1_fu_6438_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_2_fu_6465_p2 = (tmp_82_to_int_2_2_fu_6462_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_3_fu_6489_p2 = (tmp_82_to_int_2_3_fu_6486_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_4_fu_6513_p2 = (tmp_82_to_int_2_4_fu_6510_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_5_fu_6537_p2 = (tmp_82_to_int_2_5_fu_6534_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_2_fu_6417_p2 = (tmp_82_to_int_2_fu_6414_p1 ^ ap_const_lv32_80000000);

assign tmp_82_neg_fu_6129_p2 = (tmp_82_to_int_fu_6126_p1 ^ ap_const_lv32_80000000);

assign tmp_82_to_int_0_1_fu_6150_p1 = tmp_i5_reg_9558;

assign tmp_82_to_int_0_2_fu_6174_p1 = tmp_i8_reg_9564;

assign tmp_82_to_int_0_3_fu_6198_p1 = tmp_i1_reg_9570;

assign tmp_82_to_int_0_4_fu_6222_p1 = tmp_i2_reg_9576;

assign tmp_82_to_int_0_5_fu_6246_p1 = tmp_i3_reg_9582;

assign tmp_82_to_int_1_1_fu_6294_p1 = tmp_i6_reg_9594;

assign tmp_82_to_int_1_2_fu_6318_p1 = tmp_i7_reg_9600;

assign tmp_82_to_int_1_3_fu_6342_p1 = tmp_i9_reg_9606;

assign tmp_82_to_int_1_4_fu_6366_p1 = tmp_i10_reg_9612;

assign tmp_82_to_int_1_5_fu_6390_p1 = tmp_i11_reg_9618;

assign tmp_82_to_int_1_fu_6270_p1 = tmp_i4_reg_9588;

assign tmp_82_to_int_2_1_fu_6438_p1 = tmp_i13_reg_9630;

assign tmp_82_to_int_2_2_fu_6462_p1 = tmp_i14_reg_9636;

assign tmp_82_to_int_2_3_fu_6486_p1 = tmp_i15_reg_9642;

assign tmp_82_to_int_2_4_fu_6510_p1 = tmp_i16_reg_9648;

assign tmp_82_to_int_2_5_fu_6534_p1 = tmp_i17_reg_9654;

assign tmp_82_to_int_2_fu_6414_p1 = tmp_i12_reg_9624;

assign tmp_82_to_int_fu_6126_p1 = tmp_i_reg_9552;

assign tmp_83_fu_5029_p2 = (tmp_81_fu_5023_p2 & grp_fu_3144_p2);

assign tmp_84_0_1_fu_6164_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_0_2_fu_6188_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_0_3_fu_6212_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_0_4_fu_6236_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_0_5_fu_6260_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_1_fu_6308_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_2_fu_6332_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_3_fu_6356_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_4_fu_6380_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_5_fu_6404_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_1_fu_6284_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_1_fu_6452_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_2_fu_6476_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_3_fu_6500_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_4_fu_6524_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_5_fu_6548_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_2_fu_6428_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_84_fu_7447_p4 = {{soft_dec_tmp_0_load_2_fu_7443_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_85_fu_3879_p1 = var2chk_shift_idx_1_5[8:0];

assign tmp_86_0_1_fu_6145_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_0_2_fu_6169_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_0_3_fu_6193_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_0_4_fu_6217_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_0_5_fu_6241_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_1_fu_6289_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_2_fu_6313_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_3_fu_6337_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_4_fu_6361_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_5_fu_6385_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_1_fu_6265_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_1_fu_6433_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_2_fu_6457_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_3_fu_6481_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_4_fu_6505_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_5_fu_6529_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_2_fu_6409_p1 = ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289;

assign tmp_86_fu_7473_p2 = (notrhs6_fu_7467_p2 | notlhs6_fu_7461_p2);

assign tmp_89_fu_7490_p4 = {{soft_dec_tmp_1_load_2_fu_7486_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_fu_3751_p2 = ((jdx_1_reg_2244 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_90_fu_3887_p1 = var2chk_shift_idx_1_s[8:0];

assign tmp_91_fu_7516_p2 = (notrhs7_fu_7510_p2 | notlhs7_fu_7504_p2);

assign tmp_92_0_0_1_fu_6618_p2 = ((tmp_idx_6_0_0_1_fu_6613_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_0_1_1_fu_6652_p2 = ((tmp_idx_6_0_1_1_fu_6647_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_1_0_1_fu_6720_p2 = ((tmp_idx_6_1_0_1_fu_6715_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_1_1_1_fu_6754_p2 = ((tmp_idx_6_1_1_1_fu_6749_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_1_fu_6686_p2 = ((tmp_idx_6_1_fu_6681_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_2_0_1_fu_6822_p2 = ((tmp_idx_6_2_0_1_fu_6817_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_2_1_1_fu_6856_p2 = ((tmp_idx_6_2_1_1_fu_6851_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_2_fu_6788_p2 = ((tmp_idx_6_2_fu_6783_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_3_0_1_fu_6924_p2 = ((tmp_idx_6_3_0_1_fu_6919_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_3_1_1_fu_6958_p2 = ((tmp_idx_6_3_1_1_fu_6953_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_3_fu_6890_p2 = ((tmp_idx_6_3_fu_6885_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_4_0_1_fu_7026_p2 = ((tmp_idx_6_4_0_1_fu_7021_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_4_1_1_fu_7060_p2 = ((tmp_idx_6_4_1_1_fu_7055_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_4_fu_6992_p2 = ((tmp_idx_6_4_fu_6987_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_5_0_1_fu_7128_p2 = ((tmp_idx_6_5_0_1_fu_7123_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_5_1_1_fu_7162_p2 = ((tmp_idx_6_5_1_1_fu_7157_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_5_fu_7094_p2 = ((tmp_idx_6_5_fu_7089_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_92_fu_6584_p2 = ((tmp_idx_13_fu_6579_p2 > ap_const_lv9_A6) ? 1'b1 : 1'b0);

assign tmp_93_0_0_1_fu_6642_p1 = $unsigned(tmp_idx_8_0_0_1_cast_fu_6638_p1);

assign tmp_93_0_1_1_fu_6676_p1 = $unsigned(tmp_idx_8_0_1_1_cast_fu_6672_p1);

assign tmp_93_1_0_1_fu_6744_p1 = $unsigned(tmp_idx_8_1_0_1_cast_fu_6740_p1);

assign tmp_93_1_1_1_fu_6778_p1 = $unsigned(tmp_idx_8_1_1_1_cast_fu_6774_p1);

assign tmp_93_1_fu_6710_p1 = $unsigned(tmp_idx_8_1_cast_fu_6706_p1);

assign tmp_93_2_0_1_fu_6846_p1 = $unsigned(tmp_idx_8_2_0_1_cast_fu_6842_p1);

assign tmp_93_2_1_1_fu_6880_p1 = $unsigned(tmp_idx_8_2_1_1_cast_fu_6876_p1);

assign tmp_93_2_fu_6812_p1 = $unsigned(tmp_idx_8_2_cast_fu_6808_p1);

assign tmp_93_3_0_1_fu_6948_p1 = $unsigned(tmp_idx_8_3_0_1_cast_fu_6944_p1);

assign tmp_93_3_1_1_fu_6982_p1 = $unsigned(tmp_idx_8_3_1_1_cast_fu_6978_p1);

assign tmp_93_3_fu_6914_p1 = $unsigned(tmp_idx_8_3_cast_fu_6910_p1);

assign tmp_93_4_0_1_fu_7050_p1 = $unsigned(tmp_idx_8_4_0_1_cast_fu_7046_p1);

assign tmp_93_4_1_1_fu_7084_p1 = $unsigned(tmp_idx_8_4_1_1_cast_fu_7080_p1);

assign tmp_93_4_fu_7016_p1 = $unsigned(tmp_idx_8_4_cast_fu_7012_p1);

assign tmp_93_5_0_1_fu_7152_p1 = $unsigned(tmp_idx_8_5_0_1_cast_fu_7148_p1);

assign tmp_93_5_1_1_fu_7186_p1 = $unsigned(tmp_idx_8_5_1_1_cast_fu_7182_p1);

assign tmp_93_5_fu_7118_p1 = $unsigned(tmp_idx_8_5_cast_fu_7114_p1);

assign tmp_93_fu_6608_p1 = $unsigned(tmp_idx_8_0_cast_fu_6604_p1);

assign tmp_97_fu_7533_p4 = {{soft_dec_tmp_2_load_2_fu_7529_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_98_fu_3895_p1 = var2chk_shift_idx_2_1[8:0];

assign tmp_99_fu_7559_p2 = (notrhs8_fu_7553_p2 | notlhs8_fu_7547_p2);

assign tmp_9_fu_3729_p2 = ((jdx_0_i_reg_2233 == ap_const_lv8_A7) ? 1'b1 : 1'b0);

assign tmp_idx_10_fu_4123_p2 = (tmp_42_reg_8800 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_11_fu_4134_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_10_fu_4123_p2));

assign tmp_idx_12_fu_4140_p3 = ((tmp_75_fu_4128_p2[0:0] === 1'b1) ? tmp_idx_11_fu_4134_p2 : tmp_idx_10_fu_4123_p2);

assign tmp_idx_13_fu_6579_p2 = (extLd1_reg_8890 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_1_1_fu_7262_p2 = ($signed(tmp_idx_s_fu_7251_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_1_2_fu_7296_p2 = ($signed(tmp_idx_6_fu_7285_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_1_3_fu_7330_p2 = ($signed(tmp_idx_3_fu_7319_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_1_4_fu_7364_p2 = ($signed(tmp_idx_4_fu_7353_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_1_5_fu_7398_p2 = ($signed(tmp_idx_5_fu_7387_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_1_fu_7228_p2 = ($signed(tmp_idx_fu_7217_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_2_1_cast_fu_7276_p1 = $signed(tmp_idx_2_1_fu_7268_p3);

assign tmp_idx_2_1_fu_7268_p3 = ((tmp_55_1_fu_7256_p2[0:0] === 1'b1) ? tmp_idx_1_1_fu_7262_p2 : tmp_idx_s_fu_7251_p2);

assign tmp_idx_2_2_cast_fu_7310_p1 = $signed(tmp_idx_2_2_fu_7302_p3);

assign tmp_idx_2_2_fu_7302_p3 = ((tmp_55_2_fu_7290_p2[0:0] === 1'b1) ? tmp_idx_1_2_fu_7296_p2 : tmp_idx_6_fu_7285_p2);

assign tmp_idx_2_3_cast_fu_7344_p1 = $signed(tmp_idx_2_3_fu_7336_p3);

assign tmp_idx_2_3_fu_7336_p3 = ((tmp_55_3_fu_7324_p2[0:0] === 1'b1) ? tmp_idx_1_3_fu_7330_p2 : tmp_idx_3_fu_7319_p2);

assign tmp_idx_2_4_cast_fu_7378_p1 = $signed(tmp_idx_2_4_fu_7370_p3);

assign tmp_idx_2_4_fu_7370_p3 = ((tmp_55_4_fu_7358_p2[0:0] === 1'b1) ? tmp_idx_1_4_fu_7364_p2 : tmp_idx_4_fu_7353_p2);

assign tmp_idx_2_5_cast_fu_7412_p1 = $signed(tmp_idx_2_5_fu_7404_p3);

assign tmp_idx_2_5_fu_7404_p3 = ((tmp_55_5_fu_7392_p2[0:0] === 1'b1) ? tmp_idx_1_5_fu_7398_p2 : tmp_idx_5_fu_7387_p2);

assign tmp_idx_2_cast_fu_7242_p1 = $signed(tmp_idx_2_fu_7234_p3);

assign tmp_idx_2_fu_7234_p3 = ((tmp_25_fu_7222_p2[0:0] === 1'b1) ? tmp_idx_1_fu_7228_p2 : tmp_idx_fu_7217_p2);

assign tmp_idx_3_0_0_1_fu_4157_p2 = (tmp_46_reg_8805 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_0_0_2_fu_4191_p2 = (tmp_47_reg_8810 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_0_0_3_fu_4225_p2 = (tmp_49_reg_8815 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_0_0_4_fu_4259_p2 = (tmp_54_reg_8820 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_0_1_4_fu_4293_p2 = (tmp_59_reg_8825 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_0_1_fu_4361_p2 = (tmp_69_reg_8835 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_0_2_fu_4395_p2 = (tmp_78_reg_8840 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_0_3_fu_4429_p2 = (tmp_80_reg_8845 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_0_4_fu_4463_p2 = (tmp_85_reg_8850 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_1_4_fu_4497_p2 = (tmp_90_reg_8855 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_1_fu_4327_p2 = (tmp_64_reg_8830 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_0_1_fu_4565_p2 = (tmp_103_reg_8865 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_0_2_fu_4599_p2 = (tmp_110_reg_8870 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_0_3_fu_4633_p2 = (tmp_115_reg_8875 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_0_4_fu_4667_p2 = (tmp_120_reg_8880 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_1_4_fu_4701_p2 = (tmp_121_reg_8885 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_2_fu_4531_p2 = (tmp_98_reg_8860 + i_assign_2_cast_fu_4119_p1);

assign tmp_idx_3_fu_7319_p2 = (extLd11_reg_8948 + i_assign_cast_fu_7191_p1);

assign tmp_idx_4_0_0_1_fu_4168_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_0_0_1_fu_4157_p2));

assign tmp_idx_4_0_0_2_fu_4202_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_0_0_2_fu_4191_p2));

assign tmp_idx_4_0_0_3_fu_4236_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_0_0_3_fu_4225_p2));

assign tmp_idx_4_0_0_4_fu_4270_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_0_0_4_fu_4259_p2));

assign tmp_idx_4_0_1_4_fu_4304_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_0_1_4_fu_4293_p2));

assign tmp_idx_4_1_0_1_fu_4372_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_0_1_fu_4361_p2));

assign tmp_idx_4_1_0_2_fu_4406_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_0_2_fu_4395_p2));

assign tmp_idx_4_1_0_3_fu_4440_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_0_3_fu_4429_p2));

assign tmp_idx_4_1_0_4_fu_4474_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_0_4_fu_4463_p2));

assign tmp_idx_4_1_1_4_fu_4508_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_1_4_fu_4497_p2));

assign tmp_idx_4_1_fu_4338_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_1_fu_4327_p2));

assign tmp_idx_4_2_0_1_fu_4576_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_0_1_fu_4565_p2));

assign tmp_idx_4_2_0_2_fu_4610_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_0_2_fu_4599_p2));

assign tmp_idx_4_2_0_3_fu_4644_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_0_3_fu_4633_p2));

assign tmp_idx_4_2_0_4_fu_4678_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_0_4_fu_4667_p2));

assign tmp_idx_4_2_1_4_fu_4712_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_1_4_fu_4701_p2));

assign tmp_idx_4_2_fu_4542_p2 = ($signed(ap_const_lv9_159) + $signed(tmp_idx_3_2_fu_4531_p2));

assign tmp_idx_4_fu_7353_p2 = (extLd14_reg_8964 + i_assign_cast_fu_7191_p1);

assign tmp_idx_5_0_0_1_cast_fu_4182_p1 = $signed(tmp_idx_5_0_0_1_fu_4174_p3);

assign tmp_idx_5_0_0_1_fu_4174_p3 = ((tmp_75_0_0_1_fu_4162_p2[0:0] === 1'b1) ? tmp_idx_4_0_0_1_fu_4168_p2 : tmp_idx_3_0_0_1_fu_4157_p2);

assign tmp_idx_5_0_0_2_cast_fu_4216_p1 = $signed(tmp_idx_5_0_0_2_fu_4208_p3);

assign tmp_idx_5_0_0_2_fu_4208_p3 = ((tmp_75_0_0_2_fu_4196_p2[0:0] === 1'b1) ? tmp_idx_4_0_0_2_fu_4202_p2 : tmp_idx_3_0_0_2_fu_4191_p2);

assign tmp_idx_5_0_0_3_cast_fu_4250_p1 = $signed(tmp_idx_5_0_0_3_fu_4242_p3);

assign tmp_idx_5_0_0_3_fu_4242_p3 = ((tmp_75_0_0_3_fu_4230_p2[0:0] === 1'b1) ? tmp_idx_4_0_0_3_fu_4236_p2 : tmp_idx_3_0_0_3_fu_4225_p2);

assign tmp_idx_5_0_0_4_cast_fu_4284_p1 = $signed(tmp_idx_5_0_0_4_fu_4276_p3);

assign tmp_idx_5_0_0_4_fu_4276_p3 = ((tmp_75_0_0_4_fu_4264_p2[0:0] === 1'b1) ? tmp_idx_4_0_0_4_fu_4270_p2 : tmp_idx_3_0_0_4_fu_4259_p2);

assign tmp_idx_5_0_1_4_cast_fu_4318_p1 = $signed(tmp_idx_5_0_1_4_fu_4310_p3);

assign tmp_idx_5_0_1_4_fu_4310_p3 = ((tmp_75_0_1_4_fu_4298_p2[0:0] === 1'b1) ? tmp_idx_4_0_1_4_fu_4304_p2 : tmp_idx_3_0_1_4_fu_4293_p2);

assign tmp_idx_5_0_cast_fu_4148_p1 = $signed(tmp_idx_12_fu_4140_p3);

assign tmp_idx_5_1_0_1_cast_fu_4386_p1 = $signed(tmp_idx_5_1_0_1_fu_4378_p3);

assign tmp_idx_5_1_0_1_fu_4378_p3 = ((tmp_75_1_0_1_fu_4366_p2[0:0] === 1'b1) ? tmp_idx_4_1_0_1_fu_4372_p2 : tmp_idx_3_1_0_1_fu_4361_p2);

assign tmp_idx_5_1_0_2_cast_fu_4420_p1 = $signed(tmp_idx_5_1_0_2_fu_4412_p3);

assign tmp_idx_5_1_0_2_fu_4412_p3 = ((tmp_75_1_0_2_fu_4400_p2[0:0] === 1'b1) ? tmp_idx_4_1_0_2_fu_4406_p2 : tmp_idx_3_1_0_2_fu_4395_p2);

assign tmp_idx_5_1_0_3_cast_fu_4454_p1 = $signed(tmp_idx_5_1_0_3_fu_4446_p3);

assign tmp_idx_5_1_0_3_fu_4446_p3 = ((tmp_75_1_0_3_fu_4434_p2[0:0] === 1'b1) ? tmp_idx_4_1_0_3_fu_4440_p2 : tmp_idx_3_1_0_3_fu_4429_p2);

assign tmp_idx_5_1_0_4_cast_fu_4488_p1 = $signed(tmp_idx_5_1_0_4_fu_4480_p3);

assign tmp_idx_5_1_0_4_fu_4480_p3 = ((tmp_75_1_0_4_fu_4468_p2[0:0] === 1'b1) ? tmp_idx_4_1_0_4_fu_4474_p2 : tmp_idx_3_1_0_4_fu_4463_p2);

assign tmp_idx_5_1_1_4_cast_fu_4522_p1 = $signed(tmp_idx_5_1_1_4_fu_4514_p3);

assign tmp_idx_5_1_1_4_fu_4514_p3 = ((tmp_75_1_1_4_fu_4502_p2[0:0] === 1'b1) ? tmp_idx_4_1_1_4_fu_4508_p2 : tmp_idx_3_1_1_4_fu_4497_p2);

assign tmp_idx_5_1_cast_fu_4352_p1 = $signed(tmp_idx_5_1_fu_4344_p3);

assign tmp_idx_5_1_fu_4344_p3 = ((tmp_75_1_fu_4332_p2[0:0] === 1'b1) ? tmp_idx_4_1_fu_4338_p2 : tmp_idx_3_1_fu_4327_p2);

assign tmp_idx_5_2_0_1_cast_fu_4590_p1 = $signed(tmp_idx_5_2_0_1_fu_4582_p3);

assign tmp_idx_5_2_0_1_fu_4582_p3 = ((tmp_75_2_0_1_fu_4570_p2[0:0] === 1'b1) ? tmp_idx_4_2_0_1_fu_4576_p2 : tmp_idx_3_2_0_1_fu_4565_p2);

assign tmp_idx_5_2_0_2_cast_fu_4624_p1 = $signed(tmp_idx_5_2_0_2_fu_4616_p3);

assign tmp_idx_5_2_0_2_fu_4616_p3 = ((tmp_75_2_0_2_fu_4604_p2[0:0] === 1'b1) ? tmp_idx_4_2_0_2_fu_4610_p2 : tmp_idx_3_2_0_2_fu_4599_p2);

assign tmp_idx_5_2_0_3_cast_fu_4658_p1 = $signed(tmp_idx_5_2_0_3_fu_4650_p3);

assign tmp_idx_5_2_0_3_fu_4650_p3 = ((tmp_75_2_0_3_fu_4638_p2[0:0] === 1'b1) ? tmp_idx_4_2_0_3_fu_4644_p2 : tmp_idx_3_2_0_3_fu_4633_p2);

assign tmp_idx_5_2_0_4_cast_fu_4692_p1 = $signed(tmp_idx_5_2_0_4_fu_4684_p3);

assign tmp_idx_5_2_0_4_fu_4684_p3 = ((tmp_75_2_0_4_fu_4672_p2[0:0] === 1'b1) ? tmp_idx_4_2_0_4_fu_4678_p2 : tmp_idx_3_2_0_4_fu_4667_p2);

assign tmp_idx_5_2_1_4_cast_fu_4726_p1 = $signed(tmp_idx_5_2_1_4_fu_4718_p3);

assign tmp_idx_5_2_1_4_fu_4718_p3 = ((tmp_75_2_1_4_fu_4706_p2[0:0] === 1'b1) ? tmp_idx_4_2_1_4_fu_4712_p2 : tmp_idx_3_2_1_4_fu_4701_p2);

assign tmp_idx_5_2_cast_fu_4556_p1 = $signed(tmp_idx_5_2_fu_4548_p3);

assign tmp_idx_5_2_fu_4548_p3 = ((tmp_75_2_fu_4536_p2[0:0] === 1'b1) ? tmp_idx_4_2_fu_4542_p2 : tmp_idx_3_2_fu_4531_p2);

assign tmp_idx_5_fu_7387_p2 = (extLd17_reg_8980 + i_assign_cast_fu_7191_p1);

assign tmp_idx_6_0_0_1_fu_6613_p2 = (extLd2_reg_8895 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_0_1_1_fu_6647_p2 = (extLd_reg_8900 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_1_0_1_fu_6715_p2 = (extLd4_reg_8911 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_1_1_1_fu_6749_p2 = (extLd5_reg_8916 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_1_fu_6681_p2 = (extLd3_reg_8906 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_2_0_1_fu_6817_p2 = (extLd7_reg_8927 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_2_1_1_fu_6851_p2 = (extLd8_reg_8932 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_2_fu_6783_p2 = (extLd6_reg_8922 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_3_0_1_fu_6919_p2 = (extLd10_reg_8943 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_3_1_1_fu_6953_p2 = (extLd11_reg_8948 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_3_fu_6885_p2 = (extLd9_reg_8938 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_4_0_1_fu_7021_p2 = (extLd13_reg_8959 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_4_1_1_fu_7055_p2 = (extLd14_reg_8964 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_4_fu_6987_p2 = (extLd12_reg_8954 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_5_0_1_fu_7123_p2 = (extLd16_reg_8975 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_5_1_1_fu_7157_p2 = (extLd17_reg_8980 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_5_fu_7089_p2 = (extLd15_reg_8970 + i_assign_1_cast_fu_6565_p1);

assign tmp_idx_6_fu_7285_p2 = (extLd8_reg_8932 + i_assign_cast_fu_7191_p1);

assign tmp_idx_7_0_0_1_fu_6624_p2 = ($signed(tmp_idx_6_0_0_1_fu_6613_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_0_1_1_fu_6658_p2 = ($signed(tmp_idx_6_0_1_1_fu_6647_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_1_0_1_fu_6726_p2 = ($signed(tmp_idx_6_1_0_1_fu_6715_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_1_1_1_fu_6760_p2 = ($signed(tmp_idx_6_1_1_1_fu_6749_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_1_fu_6692_p2 = ($signed(tmp_idx_6_1_fu_6681_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_2_0_1_fu_6828_p2 = ($signed(tmp_idx_6_2_0_1_fu_6817_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_2_1_1_fu_6862_p2 = ($signed(tmp_idx_6_2_1_1_fu_6851_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_2_fu_6794_p2 = ($signed(tmp_idx_6_2_fu_6783_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_3_0_1_fu_6930_p2 = ($signed(tmp_idx_6_3_0_1_fu_6919_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_3_1_1_fu_6964_p2 = ($signed(tmp_idx_6_3_1_1_fu_6953_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_3_fu_6896_p2 = ($signed(tmp_idx_6_3_fu_6885_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_4_0_1_fu_7032_p2 = ($signed(tmp_idx_6_4_0_1_fu_7021_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_4_1_1_fu_7066_p2 = ($signed(tmp_idx_6_4_1_1_fu_7055_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_4_fu_6998_p2 = ($signed(tmp_idx_6_4_fu_6987_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_5_0_1_fu_7134_p2 = ($signed(tmp_idx_6_5_0_1_fu_7123_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_5_1_1_fu_7168_p2 = ($signed(tmp_idx_6_5_1_1_fu_7157_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_5_fu_7100_p2 = ($signed(tmp_idx_6_5_fu_7089_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_7_fu_6590_p2 = ($signed(tmp_idx_13_fu_6579_p2) + $signed(ap_const_lv9_159));

assign tmp_idx_8_0_0_1_cast_fu_6638_p1 = $signed(tmp_idx_8_0_0_1_fu_6630_p3);

assign tmp_idx_8_0_0_1_fu_6630_p3 = ((tmp_92_0_0_1_fu_6618_p2[0:0] === 1'b1) ? tmp_idx_7_0_0_1_fu_6624_p2 : tmp_idx_6_0_0_1_fu_6613_p2);

assign tmp_idx_8_0_1_1_cast_fu_6672_p1 = $signed(tmp_idx_8_0_1_1_fu_6664_p3);

assign tmp_idx_8_0_1_1_fu_6664_p3 = ((tmp_92_0_1_1_fu_6652_p2[0:0] === 1'b1) ? tmp_idx_7_0_1_1_fu_6658_p2 : tmp_idx_6_0_1_1_fu_6647_p2);

assign tmp_idx_8_0_cast_fu_6604_p1 = $signed(tmp_idx_8_fu_6596_p3);

assign tmp_idx_8_1_0_1_cast_fu_6740_p1 = $signed(tmp_idx_8_1_0_1_fu_6732_p3);

assign tmp_idx_8_1_0_1_fu_6732_p3 = ((tmp_92_1_0_1_fu_6720_p2[0:0] === 1'b1) ? tmp_idx_7_1_0_1_fu_6726_p2 : tmp_idx_6_1_0_1_fu_6715_p2);

assign tmp_idx_8_1_1_1_cast_fu_6774_p1 = $signed(tmp_idx_8_1_1_1_fu_6766_p3);

assign tmp_idx_8_1_1_1_fu_6766_p3 = ((tmp_92_1_1_1_fu_6754_p2[0:0] === 1'b1) ? tmp_idx_7_1_1_1_fu_6760_p2 : tmp_idx_6_1_1_1_fu_6749_p2);

assign tmp_idx_8_1_cast_fu_6706_p1 = $signed(tmp_idx_8_1_fu_6698_p3);

assign tmp_idx_8_1_fu_6698_p3 = ((tmp_92_1_fu_6686_p2[0:0] === 1'b1) ? tmp_idx_7_1_fu_6692_p2 : tmp_idx_6_1_fu_6681_p2);

assign tmp_idx_8_2_0_1_cast_fu_6842_p1 = $signed(tmp_idx_8_2_0_1_fu_6834_p3);

assign tmp_idx_8_2_0_1_fu_6834_p3 = ((tmp_92_2_0_1_fu_6822_p2[0:0] === 1'b1) ? tmp_idx_7_2_0_1_fu_6828_p2 : tmp_idx_6_2_0_1_fu_6817_p2);

assign tmp_idx_8_2_1_1_cast_fu_6876_p1 = $signed(tmp_idx_8_2_1_1_fu_6868_p3);

assign tmp_idx_8_2_1_1_fu_6868_p3 = ((tmp_92_2_1_1_fu_6856_p2[0:0] === 1'b1) ? tmp_idx_7_2_1_1_fu_6862_p2 : tmp_idx_6_2_1_1_fu_6851_p2);

assign tmp_idx_8_2_cast_fu_6808_p1 = $signed(tmp_idx_8_2_fu_6800_p3);

assign tmp_idx_8_2_fu_6800_p3 = ((tmp_92_2_fu_6788_p2[0:0] === 1'b1) ? tmp_idx_7_2_fu_6794_p2 : tmp_idx_6_2_fu_6783_p2);

assign tmp_idx_8_3_0_1_cast_fu_6944_p1 = $signed(tmp_idx_8_3_0_1_fu_6936_p3);

assign tmp_idx_8_3_0_1_fu_6936_p3 = ((tmp_92_3_0_1_fu_6924_p2[0:0] === 1'b1) ? tmp_idx_7_3_0_1_fu_6930_p2 : tmp_idx_6_3_0_1_fu_6919_p2);

assign tmp_idx_8_3_1_1_cast_fu_6978_p1 = $signed(tmp_idx_8_3_1_1_fu_6970_p3);

assign tmp_idx_8_3_1_1_fu_6970_p3 = ((tmp_92_3_1_1_fu_6958_p2[0:0] === 1'b1) ? tmp_idx_7_3_1_1_fu_6964_p2 : tmp_idx_6_3_1_1_fu_6953_p2);

assign tmp_idx_8_3_cast_fu_6910_p1 = $signed(tmp_idx_8_3_fu_6902_p3);

assign tmp_idx_8_3_fu_6902_p3 = ((tmp_92_3_fu_6890_p2[0:0] === 1'b1) ? tmp_idx_7_3_fu_6896_p2 : tmp_idx_6_3_fu_6885_p2);

assign tmp_idx_8_4_0_1_cast_fu_7046_p1 = $signed(tmp_idx_8_4_0_1_fu_7038_p3);

assign tmp_idx_8_4_0_1_fu_7038_p3 = ((tmp_92_4_0_1_fu_7026_p2[0:0] === 1'b1) ? tmp_idx_7_4_0_1_fu_7032_p2 : tmp_idx_6_4_0_1_fu_7021_p2);

assign tmp_idx_8_4_1_1_cast_fu_7080_p1 = $signed(tmp_idx_8_4_1_1_fu_7072_p3);

assign tmp_idx_8_4_1_1_fu_7072_p3 = ((tmp_92_4_1_1_fu_7060_p2[0:0] === 1'b1) ? tmp_idx_7_4_1_1_fu_7066_p2 : tmp_idx_6_4_1_1_fu_7055_p2);

assign tmp_idx_8_4_cast_fu_7012_p1 = $signed(tmp_idx_8_4_fu_7004_p3);

assign tmp_idx_8_4_fu_7004_p3 = ((tmp_92_4_fu_6992_p2[0:0] === 1'b1) ? tmp_idx_7_4_fu_6998_p2 : tmp_idx_6_4_fu_6987_p2);

assign tmp_idx_8_5_0_1_cast_fu_7148_p1 = $signed(tmp_idx_8_5_0_1_fu_7140_p3);

assign tmp_idx_8_5_0_1_fu_7140_p3 = ((tmp_92_5_0_1_fu_7128_p2[0:0] === 1'b1) ? tmp_idx_7_5_0_1_fu_7134_p2 : tmp_idx_6_5_0_1_fu_7123_p2);

assign tmp_idx_8_5_1_1_cast_fu_7182_p1 = $signed(tmp_idx_8_5_1_1_fu_7174_p3);

assign tmp_idx_8_5_1_1_fu_7174_p3 = ((tmp_92_5_1_1_fu_7162_p2[0:0] === 1'b1) ? tmp_idx_7_5_1_1_fu_7168_p2 : tmp_idx_6_5_1_1_fu_7157_p2);

assign tmp_idx_8_5_cast_fu_7114_p1 = $signed(tmp_idx_8_5_fu_7106_p3);

assign tmp_idx_8_5_fu_7106_p3 = ((tmp_92_5_fu_7094_p2[0:0] === 1'b1) ? tmp_idx_7_5_fu_7100_p2 : tmp_idx_6_5_fu_7089_p2);

assign tmp_idx_8_fu_6596_p3 = ((tmp_92_fu_6584_p2[0:0] === 1'b1) ? tmp_idx_7_fu_6590_p2 : tmp_idx_13_fu_6579_p2);

assign tmp_idx_9_0_1_fu_7789_p3 = ((tmp_188_fu_7777_p2[0:0] === 1'b1) ? tmp_108_0_1_fu_7771_p2 : tmp_190_fu_7783_p2);

assign tmp_idx_9_0_2_fu_7821_p3 = ((tmp_194_fu_7809_p2[0:0] === 1'b1) ? tmp_108_0_2_fu_7803_p2 : tmp_195_fu_7815_p2);

assign tmp_idx_9_0_3_fu_7852_p3 = ((tmp_196_fu_7840_p2[0:0] === 1'b1) ? tmp_108_0_3_fu_7834_p2 : tmp_197_fu_7846_p2);

assign tmp_idx_9_0_4_fu_7883_p3 = ((tmp_198_fu_7871_p2[0:0] === 1'b1) ? tmp_108_0_4_fu_7865_p2 : tmp_199_fu_7877_p2);

assign tmp_idx_9_0_5_fu_7914_p3 = ((tmp_200_fu_7902_p2[0:0] === 1'b1) ? tmp_108_0_5_fu_7896_p2 : tmp_201_fu_7908_p2);

assign tmp_idx_9_1_1_fu_7987_p3 = ((tmp_204_fu_7975_p2[0:0] === 1'b1) ? tmp_108_1_1_fu_7969_p2 : tmp_205_fu_7981_p2);

assign tmp_idx_9_1_2_fu_8016_p3 = ((tmp_206_fu_8005_p2[0:0] === 1'b1) ? tmp_108_1_2_fu_8000_p2 : tmp_207_fu_8011_p2);

assign tmp_idx_9_1_4_fu_8045_p3 = ((tmp_208_fu_8034_p2[0:0] === 1'b1) ? tmp_108_1_4_fu_8029_p2 : tmp_209_fu_8040_p2);

assign tmp_idx_9_1_5_fu_8074_p3 = ((tmp_210_fu_8063_p2[0:0] === 1'b1) ? tmp_108_1_5_fu_8058_p2 : tmp_211_fu_8069_p2);

assign tmp_idx_9_1_fu_7956_p3 = ((tmp_202_fu_7940_p2[0:0] === 1'b1) ? tmp_108_1_fu_7935_p2 : tmp_214_cast_fu_7952_p1);

assign tmp_idx_9_2_1_fu_8134_p3 = ((tmp_214_fu_8123_p2[0:0] === 1'b1) ? tmp_108_2_1_fu_8118_p2 : tmp_215_fu_8129_p2);

assign tmp_idx_9_2_2_fu_8165_p3 = ((tmp_216_fu_8153_p2[0:0] === 1'b1) ? tmp_108_2_2_fu_8147_p2 : tmp_217_fu_8159_p2);

assign tmp_idx_9_2_3_fu_8196_p3 = ((tmp_218_fu_8184_p2[0:0] === 1'b1) ? tmp_108_2_3_fu_8178_p2 : tmp_219_fu_8190_p2);

assign tmp_idx_9_2_5_fu_8225_p3 = ((tmp_220_fu_8214_p2[0:0] === 1'b1) ? tmp_108_2_5_fu_8209_p2 : tmp_221_fu_8220_p2);

assign tmp_idx_9_2_fu_8105_p3 = ((tmp_212_fu_8093_p2[0:0] === 1'b1) ? tmp_108_2_fu_8087_p2 : tmp_213_fu_8099_p2);

assign tmp_idx_9_fu_7758_p3 = ((tmp_179_fu_7742_p2[0:0] === 1'b1) ? tmp_108_fu_7736_p2 : tmp_202_cast_fu_7754_p1);

assign tmp_idx_fu_7217_p2 = (extLd_reg_8900 + i_assign_cast_fu_7191_p1);

assign tmp_idx_s_fu_7251_p2 = (extLd5_reg_8916 + i_assign_cast_fu_7191_p1);

assign tmp_s_fu_3318_p2 = ((idx_reg_2186 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign x_assign_10_fu_5972_p1 = p_Result_6_fu_5965_p3;

assign x_assign_12_fu_5998_p1 = p_Result_8_fu_5991_p3;

assign x_assign_20_fu_6050_p1 = p_Result_12_fu_6043_p3;

assign x_assign_22_fu_6076_p1 = p_Result_14_fu_6069_p3;

assign x_assign_2_fu_5920_p1 = p_Result_2_fu_5913_p3;

assign x_assign_s_fu_5894_p1 = p_Result_s_fu_5887_p3;

assign y_assign_10_fu_6024_p1 = p_Result_10_fu_6017_p3;

assign y_assign_12_fu_6037_p1 = p_Result_11_fu_6030_p3;

assign y_assign_15_fu_6063_p1 = p_Result_13_fu_6056_p3;

assign y_assign_16_fu_6089_p1 = p_Result_15_fu_6082_p3;

assign y_assign_18_fu_6102_p1 = p_Result_16_fu_6095_p3;

assign y_assign_1_fu_5946_p1 = p_Result_4_fu_5939_p3;

assign y_assign_20_fu_6115_p1 = p_Result_17_fu_6108_p3;

assign y_assign_3_fu_5959_p1 = p_Result_5_fu_5952_p3;

assign y_assign_6_fu_5985_p1 = p_Result_7_fu_5978_p3;

assign y_assign_7_fu_6011_p1 = p_Result_9_fu_6004_p3;

assign y_assign_9_fu_5907_p1 = p_Result_1_fu_5900_p3;

assign y_assign_s_fu_5933_p1 = p_Result_3_fu_5926_p3;

always @ (posedge ap_clk) begin
    var2chk_shift_idx_0_1[9:8] <= 2'b00;
    var2chk_shift_idx_0_2[9:8] <= 2'b00;
    var2chk_shift_idx_0_3[9:8] <= 2'b00;
    var2chk_shift_idx_0_4[9:8] <= 2'b00;
    var2chk_shift_idx_0_5[9:8] <= 2'b00;
    var2chk_shift_idx_0_s[9:8] <= 2'b00;
    var2chk_shift_idx_1_1[9:8] <= 2'b00;
    var2chk_shift_idx_1_2[9:8] <= 2'b00;
    var2chk_shift_idx_1_3[9:8] <= 2'b00;
    var2chk_shift_idx_1_4[9:8] <= 2'b00;
    var2chk_shift_idx_1_5[9:8] <= 2'b00;
    var2chk_shift_idx_1_s[9:8] <= 2'b00;
    var2chk_shift_idx_2_1[9:8] <= 2'b00;
    var2chk_shift_idx_2_2[9:8] <= 2'b00;
    var2chk_shift_idx_2_3[9:8] <= 2'b00;
    var2chk_shift_idx_2_4[9:8] <= 2'b00;
    var2chk_shift_idx_2_5[9:8] <= 2'b00;
    var2chk_shift_idx_2_s[9:8] <= 2'b00;
    tmp_5_reg_8529[0] <= 1'b0;
    tmp_7_reg_8632[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_42_reg_8800[8] <= 1'b0;
    tmp_46_reg_8805[8] <= 1'b0;
    tmp_47_reg_8810[8] <= 1'b0;
    tmp_49_reg_8815[8] <= 1'b0;
    tmp_54_reg_8820[8] <= 1'b0;
    tmp_59_reg_8825[8] <= 1'b0;
    tmp_64_reg_8830[8] <= 1'b0;
    tmp_69_reg_8835[8] <= 1'b0;
    tmp_78_reg_8840[8] <= 1'b0;
    tmp_80_reg_8845[8] <= 1'b0;
    tmp_85_reg_8850[8] <= 1'b0;
    tmp_90_reg_8855[8] <= 1'b0;
    tmp_98_reg_8860[8] <= 1'b0;
    tmp_103_reg_8865[8] <= 1'b0;
    tmp_110_reg_8870[8] <= 1'b0;
    tmp_115_reg_8875[8] <= 1'b0;
    tmp_120_reg_8880[8] <= 1'b0;
    tmp_121_reg_8885[8] <= 1'b0;
    extLd1_reg_8890[8] <= 1'b0;
    extLd2_reg_8895[8] <= 1'b0;
    extLd_reg_8900[8] <= 1'b0;
    extLd3_reg_8906[8] <= 1'b0;
    extLd4_reg_8911[8] <= 1'b0;
    extLd5_reg_8916[8] <= 1'b0;
    extLd6_reg_8922[8] <= 1'b0;
    extLd7_reg_8927[8] <= 1'b0;
    extLd8_reg_8932[8] <= 1'b0;
    extLd9_reg_8938[8] <= 1'b0;
    extLd10_reg_8943[8] <= 1'b0;
    extLd11_reg_8948[8] <= 1'b0;
    extLd12_reg_8954[8] <= 1'b0;
    extLd13_reg_8959[8] <= 1'b0;
    extLd14_reg_8964[8] <= 1'b0;
    extLd15_reg_8970[8] <= 1'b0;
    extLd16_reg_8975[8] <= 1'b0;
    extLd17_reg_8980[8] <= 1'b0;
    x_assign_s_reg_9264[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264[31] <= 1'b0;
    y_assign_9_reg_9269[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269[31] <= 1'b0;
    x_assign_2_reg_9280[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280[31] <= 1'b0;
    y_assign_s_reg_9285[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285[31] <= 1'b0;
    y_assign_1_reg_9296[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296[31] <= 1'b0;
    y_assign_3_reg_9313[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313[31] <= 1'b0;
    x_assign_10_reg_9330[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330[31] <= 1'b0;
    y_assign_6_reg_9335[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335[31] <= 1'b0;
    x_assign_12_reg_9346[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346[31] <= 1'b0;
    y_assign_7_reg_9351[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351[31] <= 1'b0;
    y_assign_10_reg_9362[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362[31] <= 1'b0;
    y_assign_12_reg_9379[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379[31] <= 1'b0;
    x_assign_20_reg_9396[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396[31] <= 1'b0;
    y_assign_15_reg_9401[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401[31] <= 1'b0;
    x_assign_22_reg_9412[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412[31] <= 1'b0;
    y_assign_16_reg_9417[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417[31] <= 1'b0;
    y_assign_18_reg_9428[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428[31] <= 1'b0;
    y_assign_20_reg_9445[31] <= 1'b0;
    ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445[31] <= 1'b0;
    tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_24_reg_9981[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_29_reg_10089[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    idx_8_cast_reg_10137[8] <= 1'b0;
end

endmodule //min_sum_dec
