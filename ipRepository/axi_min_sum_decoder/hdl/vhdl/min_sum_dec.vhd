-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity min_sum_dec is
generic (
    C_M_AXI_NOISY_INPUT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_NOISY_INPUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_NOISY_INPUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_NOISY_INPUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_NOISY_INPUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_NOISY_INPUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_NOISY_INPUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_NOISY_INPUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_SOFT_DEC_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_HARD_DEC_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_SOFT_DEC_OUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_SOFT_DEC_OUT_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_HARD_DEC_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_NOISY_INPUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_SOFT_DEC_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_NOISY_INPUT_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_SOFT_DEC_OUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_HARD_DEC_OUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_HARD_DEC_OUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_HARD_DEC_OUT_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_NOISY_INPUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_NOISY_INPUT_PROT_VALUE : INTEGER := 0 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    variance : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_noisy_input_AWVALID : OUT STD_LOGIC;
    m_axi_noisy_input_AWREADY : IN STD_LOGIC;
    m_axi_noisy_input_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ADDR_WIDTH-1 downto 0);
    m_axi_noisy_input_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ID_WIDTH-1 downto 0);
    m_axi_noisy_input_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_noisy_input_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_noisy_input_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_noisy_input_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_AWUSER_WIDTH-1 downto 0);
    m_axi_noisy_input_WVALID : OUT STD_LOGIC;
    m_axi_noisy_input_WREADY : IN STD_LOGIC;
    m_axi_noisy_input_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_DATA_WIDTH-1 downto 0);
    m_axi_noisy_input_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_DATA_WIDTH/8-1 downto 0);
    m_axi_noisy_input_WLAST : OUT STD_LOGIC;
    m_axi_noisy_input_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ID_WIDTH-1 downto 0);
    m_axi_noisy_input_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_WUSER_WIDTH-1 downto 0);
    m_axi_noisy_input_ARVALID : OUT STD_LOGIC;
    m_axi_noisy_input_ARREADY : IN STD_LOGIC;
    m_axi_noisy_input_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ADDR_WIDTH-1 downto 0);
    m_axi_noisy_input_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ID_WIDTH-1 downto 0);
    m_axi_noisy_input_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_noisy_input_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_noisy_input_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_noisy_input_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_noisy_input_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ARUSER_WIDTH-1 downto 0);
    m_axi_noisy_input_RVALID : IN STD_LOGIC;
    m_axi_noisy_input_RREADY : OUT STD_LOGIC;
    m_axi_noisy_input_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_DATA_WIDTH-1 downto 0);
    m_axi_noisy_input_RLAST : IN STD_LOGIC;
    m_axi_noisy_input_RID : IN STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ID_WIDTH-1 downto 0);
    m_axi_noisy_input_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_RUSER_WIDTH-1 downto 0);
    m_axi_noisy_input_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_BVALID : IN STD_LOGIC;
    m_axi_noisy_input_BREADY : OUT STD_LOGIC;
    m_axi_noisy_input_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_noisy_input_BID : IN STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_ID_WIDTH-1 downto 0);
    m_axi_noisy_input_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_NOISY_INPUT_BUSER_WIDTH-1 downto 0);
    m_axi_soft_dec_out_AWVALID : OUT STD_LOGIC;
    m_axi_soft_dec_out_AWREADY : IN STD_LOGIC;
    m_axi_soft_dec_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_soft_dec_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_soft_dec_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_soft_dec_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_soft_dec_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_soft_dec_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_soft_dec_out_WVALID : OUT STD_LOGIC;
    m_axi_soft_dec_out_WREADY : IN STD_LOGIC;
    m_axi_soft_dec_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH-1 downto 0);
    m_axi_soft_dec_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_soft_dec_out_WLAST : OUT STD_LOGIC;
    m_axi_soft_dec_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_soft_dec_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_soft_dec_out_ARVALID : OUT STD_LOGIC;
    m_axi_soft_dec_out_ARREADY : IN STD_LOGIC;
    m_axi_soft_dec_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_soft_dec_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_soft_dec_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_soft_dec_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_soft_dec_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_soft_dec_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_soft_dec_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_soft_dec_out_RVALID : IN STD_LOGIC;
    m_axi_soft_dec_out_RREADY : OUT STD_LOGIC;
    m_axi_soft_dec_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH-1 downto 0);
    m_axi_soft_dec_out_RLAST : IN STD_LOGIC;
    m_axi_soft_dec_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_soft_dec_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_soft_dec_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_BVALID : IN STD_LOGIC;
    m_axi_soft_dec_out_BREADY : OUT STD_LOGIC;
    m_axi_soft_dec_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_soft_dec_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_soft_dec_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH-1 downto 0);
    m_axi_hard_dec_out_AWVALID : OUT STD_LOGIC;
    m_axi_hard_dec_out_AWREADY : IN STD_LOGIC;
    m_axi_hard_dec_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_hard_dec_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_hard_dec_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_hard_dec_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hard_dec_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hard_dec_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_hard_dec_out_WVALID : OUT STD_LOGIC;
    m_axi_hard_dec_out_WREADY : IN STD_LOGIC;
    m_axi_hard_dec_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_DATA_WIDTH-1 downto 0);
    m_axi_hard_dec_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_hard_dec_out_WLAST : OUT STD_LOGIC;
    m_axi_hard_dec_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_hard_dec_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_hard_dec_out_ARVALID : OUT STD_LOGIC;
    m_axi_hard_dec_out_ARREADY : IN STD_LOGIC;
    m_axi_hard_dec_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_hard_dec_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_hard_dec_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_hard_dec_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hard_dec_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hard_dec_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hard_dec_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_hard_dec_out_RVALID : IN STD_LOGIC;
    m_axi_hard_dec_out_RREADY : OUT STD_LOGIC;
    m_axi_hard_dec_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_DATA_WIDTH-1 downto 0);
    m_axi_hard_dec_out_RLAST : IN STD_LOGIC;
    m_axi_hard_dec_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_hard_dec_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_hard_dec_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_BVALID : IN STD_LOGIC;
    m_axi_hard_dec_out_BREADY : OUT STD_LOGIC;
    m_axi_hard_dec_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hard_dec_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_ID_WIDTH-1 downto 0);
    m_axi_hard_dec_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of min_sum_dec is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "min_sum_dec,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=36624,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=90,HLS_SYN_FF=20336,HLS_SYN_LUT=40193}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (62 downto 0) := "000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (62 downto 0) := "000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (62 downto 0) := "000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (62 downto 0) := "000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (62 downto 0) := "000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (62 downto 0) := "000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (62 downto 0) := "000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (62 downto 0) := "000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (62 downto 0) := "000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (62 downto 0) := "001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (62 downto 0) := "010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (62 downto 0) := "100000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_A7 : STD_LOGIC_VECTOR (7 downto 0) := "10100111";
    constant ap_const_lv8_59 : STD_LOGIC_VECTOR (7 downto 0) := "01011001";
    constant ap_const_lv10_A7 : STD_LOGIC_VECTOR (9 downto 0) := "0010100111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_A6 : STD_LOGIC_VECTOR (8 downto 0) := "010100110";
    constant ap_const_lv9_159 : STD_LOGIC_VECTOR (8 downto 0) := "101011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv9_73 : STD_LOGIC_VECTOR (8 downto 0) := "001110011";
    constant ap_const_lv9_A7 : STD_LOGIC_VECTOR (8 downto 0) := "010100111";
    constant ap_const_lv8_CC : STD_LOGIC_VECTOR (7 downto 0) := "11001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv8_72 : STD_LOGIC_VECTOR (7 downto 0) := "01110010";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_6A : STD_LOGIC_VECTOR (7 downto 0) := "01101010";
    constant ap_const_lv9_81 : STD_LOGIC_VECTOR (8 downto 0) := "010000001";
    constant ap_const_lv9_1DA : STD_LOGIC_VECTOR (8 downto 0) := "111011010";
    constant ap_const_lv9_7C : STD_LOGIC_VECTOR (8 downto 0) := "001111100";
    constant ap_const_lv8_D5 : STD_LOGIC_VECTOR (7 downto 0) := "11010101";
    constant ap_const_lv8_26 : STD_LOGIC_VECTOR (7 downto 0) := "00100110";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv9_89 : STD_LOGIC_VECTOR (8 downto 0) := "010001001";
    constant ap_const_lv9_1E2 : STD_LOGIC_VECTOR (8 downto 0) := "111100010";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv9_88 : STD_LOGIC_VECTOR (8 downto 0) := "010001000";
    constant ap_const_lv9_1E1 : STD_LOGIC_VECTOR (8 downto 0) := "111100001";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv8_A4 : STD_LOGIC_VECTOR (7 downto 0) := "10100100";
    constant ap_const_lv9_98 : STD_LOGIC_VECTOR (8 downto 0) := "010011000";
    constant ap_const_lv9_1F1 : STD_LOGIC_VECTOR (8 downto 0) := "111110001";
    constant ap_const_lv8_B2 : STD_LOGIC_VECTOR (7 downto 0) := "10110010";
    constant ap_const_lv8_49 : STD_LOGIC_VECTOR (7 downto 0) := "01001001";
    constant ap_const_lv8_A2 : STD_LOGIC_VECTOR (7 downto 0) := "10100010";
    constant ap_const_lv9_91 : STD_LOGIC_VECTOR (8 downto 0) := "010010001";
    constant ap_const_lv9_1EA : STD_LOGIC_VECTOR (8 downto 0) := "111101010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal H_proto_shift_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal H_proto_shift_ce0 : STD_LOGIC;
    signal H_proto_shift_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_shift_idx_0_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_0_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_0_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_0_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_0_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_0_s : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_1_s : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal var2chk_shift_idx_2_s : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal chk2var_shift_idx_1_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_1_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_1_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_1_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_2_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal chk2var_shift_idx_0_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal noisy_input_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_2_fu_3706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal noisy_input_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_9_fu_3729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state69 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_38_fu_8458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state72 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal soft_dec_out_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal hard_dec_out_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal tmp_36_fu_8385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_out_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state64 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal hard_dec_out_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state68 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal noisy_input_AWREADY : STD_LOGIC;
    signal noisy_input_WREADY : STD_LOGIC;
    signal noisy_input_ARVALID : STD_LOGIC;
    signal noisy_input_ARREADY : STD_LOGIC;
    signal noisy_input_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_RVALID : STD_LOGIC;
    signal noisy_input_RREADY : STD_LOGIC;
    signal noisy_input_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_RLAST : STD_LOGIC;
    signal noisy_input_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal noisy_input_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal noisy_input_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal noisy_input_BVALID : STD_LOGIC;
    signal noisy_input_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal noisy_input_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal noisy_input_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_AWVALID : STD_LOGIC;
    signal soft_dec_out_AWREADY : STD_LOGIC;
    signal soft_dec_out_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_out_WVALID : STD_LOGIC;
    signal soft_dec_out_WREADY : STD_LOGIC;
    signal soft_dec_out_ARREADY : STD_LOGIC;
    signal soft_dec_out_RVALID : STD_LOGIC;
    signal soft_dec_out_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_out_RLAST : STD_LOGIC;
    signal soft_dec_out_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal soft_dec_out_BVALID : STD_LOGIC;
    signal soft_dec_out_BREADY : STD_LOGIC;
    signal soft_dec_out_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal soft_dec_out_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_out_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_out_AWVALID : STD_LOGIC;
    signal hard_dec_out_AWREADY : STD_LOGIC;
    signal hard_dec_out_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal hard_dec_out_WVALID : STD_LOGIC;
    signal hard_dec_out_WREADY : STD_LOGIC;
    signal hard_dec_out_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal hard_dec_out_ARREADY : STD_LOGIC;
    signal hard_dec_out_RVALID : STD_LOGIC;
    signal hard_dec_out_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal hard_dec_out_RLAST : STD_LOGIC;
    signal hard_dec_out_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_out_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_out_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal hard_dec_out_BVALID : STD_LOGIC;
    signal hard_dec_out_BREADY : STD_LOGIC;
    signal hard_dec_out_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal hard_dec_out_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_out_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_2_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_1_reg_2301 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3228 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal llr_vec_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3236 : STD_LOGIC_VECTOR (31 downto 0);
    signal llr_vec_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3244 : STD_LOGIC_VECTOR (31 downto 0);
    signal llr_vec_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3252 : STD_LOGIC_VECTOR (31 downto 0);
    signal llr_vec_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3260 : STD_LOGIC_VECTOR (31 downto 0);
    signal llr_vec_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3268 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal chk2var_0_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3283 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3290 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_1_fu_3324_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal idx_1_reg_8524 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_5_fu_3354_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_8529 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_3318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal jdx_8_fu_3366_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal jdx_8_reg_8537 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_fu_3360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_3700_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal next_mul_reg_8547 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_ioackin_noisy_input_ARREADY : STD_LOGIC;
    signal idx_3_fu_3712_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx_3_reg_8555 : STD_LOGIC_VECTOR (2 downto 0);
    signal jdx_6_fu_3735_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_6_reg_8579 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_addr_rea_reg_8584 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_0_ad_reg_8594 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_1_ad_reg_8599 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_2_ad_reg_8604 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_3_ad_reg_8609 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_4_ad_reg_8614 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_5_ad_reg_8619 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_3_fu_3757_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_3_reg_8627 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_7_fu_3763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_8632 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_3751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal noisy_input_vec_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_0_lo_reg_8672 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal noisy_input_vec_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_1_lo_reg_8677 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_2_lo_reg_8682 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_3_lo_reg_8687 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_4_lo_reg_8692 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal noisy_input_vec_5_lo_reg_8697 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_8702 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_3065_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_1_reg_8707 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3070_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_2_reg_8712 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_3_reg_8717 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3080_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_4_reg_8722 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_5_reg_8727 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_8732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fu_3094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_1_reg_8737 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_2_reg_8742 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_3_reg_8747 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_4_reg_8752 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_5_reg_8757 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_4_fu_3779_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_4_reg_8765 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_13_fu_3773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_3799_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_reg_8800 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_3807_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_reg_8805 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_fu_3815_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_reg_8810 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_fu_3823_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_reg_8815 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_3831_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_reg_8820 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_59_fu_3839_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_59_reg_8825 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_fu_3847_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_reg_8830 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_69_fu_3855_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_69_reg_8835 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_fu_3863_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_reg_8840 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_80_fu_3871_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_80_reg_8845 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_85_fu_3879_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_85_reg_8850 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_90_fu_3887_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_90_reg_8855 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_98_fu_3895_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_98_reg_8860 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_103_fu_3903_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_103_reg_8865 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_110_fu_3911_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_110_reg_8870 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_115_fu_3919_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_115_reg_8875 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_120_fu_3927_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_120_reg_8880 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_121_fu_3935_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_121_reg_8885 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd1_fu_3943_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd1_reg_8890 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd2_fu_3951_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd2_reg_8895 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd_fu_3959_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd_reg_8900 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd3_fu_3967_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd3_reg_8906 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4_fu_3975_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd4_reg_8911 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd5_fu_3983_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd5_reg_8916 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd6_fu_3991_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd6_reg_8922 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd7_fu_3999_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd7_reg_8927 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd8_fu_4007_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd8_reg_8932 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd9_fu_4015_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd9_reg_8938 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd10_fu_4023_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd10_reg_8943 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd11_fu_4031_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd11_reg_8948 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd12_fu_4039_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd12_reg_8954 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd13_fu_4047_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd13_reg_8959 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd14_fu_4055_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd14_reg_8964 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd15_fu_4063_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd15_reg_8970 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd16_fu_4071_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd16_reg_8975 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd17_fu_4079_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd17_reg_8980 : STD_LOGIC_VECTOR (8 downto 0);
    signal jdx_4_fu_4089_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_15_fu_4095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_8994 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal n_iter_1_fu_4101_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_iter_1_reg_8998 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_fu_4107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_9003 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_15_fu_4113_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_15_reg_9007 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_122_fu_4739_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_122_reg_9102 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_123_fu_4747_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_123_reg_9107 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_124_fu_4755_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_124_reg_9112 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_126_fu_4763_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_126_reg_9117 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_131_fu_4771_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_131_reg_9122 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_fu_4983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_reg_9127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_reg_9127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_reg_9127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_reg_9127 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_fu_4993_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_158_reg_9131 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_0_1_fu_5053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_1_reg_9136 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_2_fu_5077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_2_reg_9140 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_3_fu_5089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_3_reg_9144 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_4_fu_5101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_4_reg_9148 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_5_fu_5113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_0_5_reg_9152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_222_fu_5123_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_222_reg_9156 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_223_fu_5131_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_223_reg_9161 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_224_fu_5139_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_224_reg_9166 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_225_fu_5147_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_225_reg_9171 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_226_fu_5155_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_226_reg_9176 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_1_fu_5367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_reg_9181 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_232_fu_5377_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_232_reg_9185 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_1_1_fu_5437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_1_reg_9190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_2_fu_5461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_2_reg_9194 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_3_fu_5473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_3_reg_9198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_4_fu_5485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_4_reg_9202 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_5_fu_5497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_1_5_reg_9206 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_236_fu_5507_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_236_reg_9210 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_237_fu_5515_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_237_reg_9215 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_238_fu_5523_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_238_reg_9220 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_239_fu_5531_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_239_reg_9225 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_240_fu_5539_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_240_reg_9230 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_2_fu_5751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_reg_9235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_246_fu_5761_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_246_reg_9239 : STD_LOGIC_VECTOR (30 downto 0);
    signal sign_product_2_1_fu_5821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_1_reg_9244 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_2_fu_5845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_2_reg_9248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_3_fu_5857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_3_reg_9252 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_4_fu_5869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_4_reg_9256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_5_fu_5881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_product_2_5_reg_9260 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_s_fu_5894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_reg_9264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_9_fu_5907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_9_reg_9269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_1_fminf_fu_2448_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_1_reg_9274 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_fu_5920_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_reg_9280 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_s_fu_5933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_s_reg_9285 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_fminf_fu_2454_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_reg_9290 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_1_fu_5946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_1_reg_9296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_3_fminf_fu_2460_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_3_reg_9301 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_2_fminf_fu_2466_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_2_reg_9307 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_3_fu_5959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_3_reg_9313 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_4_fminf_fu_2472_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_4_reg_9318 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_5_fminf_fu_2478_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_5_reg_9324 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_10_fu_5972_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_10_reg_9330 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_6_fu_5985_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_6_reg_9335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_11_fminf_fu_2484_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_11_reg_9340 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_12_fu_5998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_12_reg_9346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_7_fu_6011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_7_reg_9351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_8_fminf_fu_2490_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_8_reg_9356 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_10_fu_6024_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_10_reg_9362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_14_fminf_fu_2496_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_14_reg_9367 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_11_fminf_fu_2502_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_11_reg_9373 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_12_fu_6037_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_12_reg_9379 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_13_fminf_fu_2508_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_13_reg_9384 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_14_fminf_fu_2514_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_14_reg_9390 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_20_fu_6050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_20_reg_9396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_15_fu_6063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_15_reg_9401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_21_fminf_fu_2520_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_21_reg_9406 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_22_fu_6076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_22_reg_9412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_16_fu_6089_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_16_reg_9417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_17_fminf_fu_2526_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_17_reg_9422 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_18_fu_6102_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_18_reg_9428 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_24_fminf_fu_2532_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_24_reg_9433 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_19_fminf_fu_2538_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_19_reg_9439 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_20_fu_6115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_20_reg_9445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_21_fminf_fu_2544_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_21_reg_9450 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_22_fminf_fu_2550_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_22_reg_9456 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_6_fminf_fu_2556_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_6_reg_9462 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_4_fminf_fu_2562_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_4_reg_9467 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_5_fminf_fu_2568_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_5_reg_9472 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_7_fminf_fu_2574_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_7_reg_9477 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_8_fminf_fu_2580_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_8_reg_9482 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_9_fminf_fu_2586_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_9_reg_9487 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_13_fminf_fu_2592_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_13_reg_9492 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_15_fminf_fu_2598_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_15_reg_9497 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_16_fminf_fu_2604_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_16_reg_9502 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_17_fminf_fu_2610_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_17_reg_9507 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_18_fminf_fu_2616_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_18_reg_9512 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_19_fminf_fu_2622_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_19_reg_9517 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_23_fminf_fu_2628_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_23_reg_9522 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_25_fminf_fu_2634_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_25_reg_9527 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_26_fminf_fu_2640_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_26_reg_9532 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_27_fminf_fu_2646_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_27_reg_9537 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_28_fminf_fu_2652_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_28_reg_9542 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_29_fminf_fu_2658_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_29_reg_9547 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fminf_fu_2664_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_9552 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i5_fminf_fu_2670_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i5_reg_9558 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i8_fminf_fu_2676_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i8_reg_9564 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_fminf_fu_2682_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_reg_9570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i2_fminf_fu_2688_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i2_reg_9576 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i3_fminf_fu_2694_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i3_reg_9582 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i4_fminf_fu_2700_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i4_reg_9588 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i6_fminf_fu_2706_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i6_reg_9594 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i7_fminf_fu_2712_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i7_reg_9600 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i9_fminf_fu_2718_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i9_reg_9606 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i10_fminf_fu_2724_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i10_reg_9612 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i11_fminf_fu_2730_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i11_reg_9618 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i12_fminf_fu_2736_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i12_reg_9624 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i13_fminf_fu_2742_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i13_reg_9630 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i14_fminf_fu_2748_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i14_reg_9636 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i15_fminf_fu_2754_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i15_reg_9642 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i16_fminf_fu_2760_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i16_reg_9648 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i17_fminf_fu_2766_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i17_reg_9654 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_6553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_5_fu_6559_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_22_fu_6569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669 : STD_LOGIC_VECTOR (63 downto 0);
    signal chk2var_1_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_0_dram_l_reg_9811 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_0_dram_l_reg_9817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_1_dram_l_reg_9823 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_1_dram_l_reg_9829 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_2_dram_l_reg_9835 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_2_dram_l_reg_9841 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_3_dram_l_reg_9847 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_3_dram_l_reg_9853 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_4_dram_l_reg_9859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_4_dram_l_reg_9865 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_5_dram_l_reg_9871 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_5_dram_l_reg_9877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_reg_9883 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal grp_fu_2850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_0_1_reg_9888 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_0_2_reg_9893 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_1_reg_9898 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_1_1_reg_9903 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_1_2_reg_9908 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2880_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_2_reg_9913 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_2_1_reg_9918 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2892_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_2_2_reg_9923 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_3_reg_9928 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2904_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_3_1_reg_9933 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2910_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_3_2_reg_9938 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_4_reg_9943 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_4_1_reg_9948 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_4_2_reg_9953 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2934_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_5_reg_9958 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_5_1_reg_9963 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2946_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_5_2_reg_9968 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_6_fu_7201_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_6_reg_9976 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal tmp_24_fu_7207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_reg_9981 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_7195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal var2chk_0_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal jdx_7_fu_7427_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_7_reg_10084 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal tmp_29_fu_7433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_reg_10089 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_7421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_10_fu_7707_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal idx_8_cast_fu_7720_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal idx_8_cast_reg_10137 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal idx_11_fu_7730_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_11_reg_10155 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_7724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_0_V_addr_1_reg_10195 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal hard_dec_tmp_0_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_0_V_lo_reg_10200 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_1_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_1_V_lo_reg_10205 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_2_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_2_V_lo_reg_10210 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_3_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_3_V_lo_reg_10215 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_4_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_4_V_lo_reg_10220 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_5_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_5_V_lo_reg_10225 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_1_V_addr_1_reg_10230 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_3_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_3_V_lo_1_reg_10250 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_2_V_addr_1_reg_10265 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_12_fu_8348_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_12_reg_10303 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal tmp_34_fu_8342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_V_2_fu_8373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal next_mul8_fu_8379_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal next_mul8_reg_10328 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_ioackin_hard_dec_out_AWREADY : STD_LOGIC;
    signal idx_13_fu_8391_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx_13_reg_10336 : STD_LOGIC_VECTOR (2 downto 0);
    signal jdx_9_fu_8414_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_9_reg_10349 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp_39_fu_8408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_156_fu_8430_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_156_reg_10384 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal next_mul1_fu_8452_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal next_mul1_reg_10389 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_ioackin_soft_dec_out_AWREADY : STD_LOGIC;
    signal idx_14_fu_8464_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx_14_reg_10397 : STD_LOGIC_VECTOR (2 downto 0);
    signal jdx_10_fu_8487_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal jdx_10_reg_10410 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal tmp_44_fu_8481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_fu_8503_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_157_reg_10445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal noisy_input_vec_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_0_ce0 : STD_LOGIC;
    signal noisy_input_vec_0_we0 : STD_LOGIC;
    signal noisy_input_vec_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_1_ce0 : STD_LOGIC;
    signal noisy_input_vec_1_we0 : STD_LOGIC;
    signal noisy_input_vec_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_2_ce0 : STD_LOGIC;
    signal noisy_input_vec_2_we0 : STD_LOGIC;
    signal noisy_input_vec_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_3_ce0 : STD_LOGIC;
    signal noisy_input_vec_3_we0 : STD_LOGIC;
    signal noisy_input_vec_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_4_ce0 : STD_LOGIC;
    signal noisy_input_vec_4_we0 : STD_LOGIC;
    signal noisy_input_vec_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal noisy_input_vec_5_ce0 : STD_LOGIC;
    signal noisy_input_vec_5_we0 : STD_LOGIC;
    signal llr_vec_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_0_ce0 : STD_LOGIC;
    signal llr_vec_0_we0 : STD_LOGIC;
    signal llr_vec_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_1_ce0 : STD_LOGIC;
    signal llr_vec_1_we0 : STD_LOGIC;
    signal llr_vec_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_2_ce0 : STD_LOGIC;
    signal llr_vec_2_we0 : STD_LOGIC;
    signal llr_vec_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_3_ce0 : STD_LOGIC;
    signal llr_vec_3_we0 : STD_LOGIC;
    signal llr_vec_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_4_ce0 : STD_LOGIC;
    signal llr_vec_4_we0 : STD_LOGIC;
    signal llr_vec_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal llr_vec_5_ce0 : STD_LOGIC;
    signal llr_vec_5_we0 : STD_LOGIC;
    signal chk2var_0_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_0_dram_ce0 : STD_LOGIC;
    signal chk2var_0_0_dram_we0 : STD_LOGIC;
    signal chk2var_0_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_1_dram_ce0 : STD_LOGIC;
    signal chk2var_0_1_dram_we0 : STD_LOGIC;
    signal chk2var_0_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_2_dram_ce0 : STD_LOGIC;
    signal chk2var_0_2_dram_we0 : STD_LOGIC;
    signal chk2var_0_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_3_dram_ce0 : STD_LOGIC;
    signal chk2var_0_3_dram_we0 : STD_LOGIC;
    signal chk2var_0_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_4_dram_ce0 : STD_LOGIC;
    signal chk2var_0_4_dram_we0 : STD_LOGIC;
    signal chk2var_0_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_0_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_0_5_dram_ce0 : STD_LOGIC;
    signal chk2var_0_5_dram_we0 : STD_LOGIC;
    signal chk2var_0_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_0_dram_ce0 : STD_LOGIC;
    signal chk2var_1_0_dram_we0 : STD_LOGIC;
    signal chk2var_1_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_1_dram_ce0 : STD_LOGIC;
    signal chk2var_1_1_dram_we0 : STD_LOGIC;
    signal chk2var_1_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_2_dram_ce0 : STD_LOGIC;
    signal chk2var_1_2_dram_we0 : STD_LOGIC;
    signal chk2var_1_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_3_dram_ce0 : STD_LOGIC;
    signal chk2var_1_3_dram_we0 : STD_LOGIC;
    signal chk2var_1_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_4_dram_ce0 : STD_LOGIC;
    signal chk2var_1_4_dram_we0 : STD_LOGIC;
    signal chk2var_1_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_1_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_1_5_dram_ce0 : STD_LOGIC;
    signal chk2var_1_5_dram_we0 : STD_LOGIC;
    signal chk2var_1_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_0_dram_ce0 : STD_LOGIC;
    signal chk2var_2_0_dram_we0 : STD_LOGIC;
    signal chk2var_2_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_1_dram_ce0 : STD_LOGIC;
    signal chk2var_2_1_dram_we0 : STD_LOGIC;
    signal chk2var_2_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_2_dram_ce0 : STD_LOGIC;
    signal chk2var_2_2_dram_we0 : STD_LOGIC;
    signal chk2var_2_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_3_dram_ce0 : STD_LOGIC;
    signal chk2var_2_3_dram_we0 : STD_LOGIC;
    signal chk2var_2_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_4_dram_ce0 : STD_LOGIC;
    signal chk2var_2_4_dram_we0 : STD_LOGIC;
    signal chk2var_2_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal chk2var_2_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal chk2var_2_5_dram_ce0 : STD_LOGIC;
    signal chk2var_2_5_dram_we0 : STD_LOGIC;
    signal chk2var_2_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_0_dram_ce0 : STD_LOGIC;
    signal var2chk_0_0_dram_we0 : STD_LOGIC;
    signal var2chk_0_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_1_dram_ce0 : STD_LOGIC;
    signal var2chk_0_1_dram_we0 : STD_LOGIC;
    signal var2chk_0_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_2_dram_ce0 : STD_LOGIC;
    signal var2chk_0_2_dram_we0 : STD_LOGIC;
    signal var2chk_0_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_3_dram_ce0 : STD_LOGIC;
    signal var2chk_0_3_dram_we0 : STD_LOGIC;
    signal var2chk_0_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_4_dram_ce0 : STD_LOGIC;
    signal var2chk_0_4_dram_we0 : STD_LOGIC;
    signal var2chk_0_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_0_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_0_5_dram_ce0 : STD_LOGIC;
    signal var2chk_0_5_dram_we0 : STD_LOGIC;
    signal var2chk_0_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_0_dram_ce0 : STD_LOGIC;
    signal var2chk_1_0_dram_we0 : STD_LOGIC;
    signal var2chk_1_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_1_dram_ce0 : STD_LOGIC;
    signal var2chk_1_1_dram_we0 : STD_LOGIC;
    signal var2chk_1_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_2_dram_ce0 : STD_LOGIC;
    signal var2chk_1_2_dram_we0 : STD_LOGIC;
    signal var2chk_1_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_3_dram_ce0 : STD_LOGIC;
    signal var2chk_1_3_dram_we0 : STD_LOGIC;
    signal var2chk_1_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_4_dram_ce0 : STD_LOGIC;
    signal var2chk_1_4_dram_we0 : STD_LOGIC;
    signal var2chk_1_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_1_5_dram_ce0 : STD_LOGIC;
    signal var2chk_1_5_dram_we0 : STD_LOGIC;
    signal var2chk_1_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_1_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_0_dram_ce0 : STD_LOGIC;
    signal var2chk_2_0_dram_we0 : STD_LOGIC;
    signal var2chk_2_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_0_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_1_dram_ce0 : STD_LOGIC;
    signal var2chk_2_1_dram_we0 : STD_LOGIC;
    signal var2chk_2_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_1_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_2_dram_ce0 : STD_LOGIC;
    signal var2chk_2_2_dram_we0 : STD_LOGIC;
    signal var2chk_2_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_2_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_3_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_3_dram_ce0 : STD_LOGIC;
    signal var2chk_2_3_dram_we0 : STD_LOGIC;
    signal var2chk_2_3_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_3_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_4_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_4_dram_ce0 : STD_LOGIC;
    signal var2chk_2_4_dram_we0 : STD_LOGIC;
    signal var2chk_2_4_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_4_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_5_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal var2chk_2_5_dram_ce0 : STD_LOGIC;
    signal var2chk_2_5_dram_we0 : STD_LOGIC;
    signal var2chk_2_5_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var2chk_2_5_dram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_0_ce0 : STD_LOGIC;
    signal soft_dec_tmp_0_we0 : STD_LOGIC;
    signal soft_dec_tmp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_1_ce0 : STD_LOGIC;
    signal soft_dec_tmp_1_we0 : STD_LOGIC;
    signal soft_dec_tmp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_2_ce0 : STD_LOGIC;
    signal soft_dec_tmp_2_we0 : STD_LOGIC;
    signal soft_dec_tmp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_3_ce0 : STD_LOGIC;
    signal soft_dec_tmp_3_we0 : STD_LOGIC;
    signal soft_dec_tmp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_4_ce0 : STD_LOGIC;
    signal soft_dec_tmp_4_we0 : STD_LOGIC;
    signal soft_dec_tmp_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal soft_dec_tmp_5_ce0 : STD_LOGIC;
    signal soft_dec_tmp_5_we0 : STD_LOGIC;
    signal soft_dec_tmp_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hard_dec_tmp_0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_0_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_0_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_0_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_0_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_0_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_0_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_1_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_1_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_1_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_1_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_1_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_1_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_2_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_2_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_2_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_2_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_2_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_2_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_3_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_3_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_3_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_3_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_3_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_3_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_4_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_4_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_4_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_4_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_4_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_4_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_4_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_5_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_5_V_ce0 : STD_LOGIC;
    signal hard_dec_tmp_5_V_we0 : STD_LOGIC;
    signal hard_dec_tmp_5_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_dec_tmp_5_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hard_dec_tmp_5_V_ce1 : STD_LOGIC;
    signal hard_dec_tmp_5_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal syndrome_0_V_ce0 : STD_LOGIC;
    signal syndrome_0_V_we0 : STD_LOGIC;
    signal syndrome_0_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_0_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal syndrome_1_V_ce0 : STD_LOGIC;
    signal syndrome_1_V_we0 : STD_LOGIC;
    signal syndrome_1_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_1_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal syndrome_2_V_ce0 : STD_LOGIC;
    signal syndrome_2_V_we0 : STD_LOGIC;
    signal syndrome_2_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal syndrome_2_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0 : STD_LOGIC;
    signal StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_reg_2186 : STD_LOGIC_VECTOR (1 downto 0);
    signal jdx_reg_2198 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal idx_0_i_reg_2210 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul_reg_2222 : STD_LOGIC_VECTOR (9 downto 0);
    signal jdx_0_i_reg_2233 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal jdx_1_reg_2244 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal idx_2_reg_2255 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_4083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal jdx_2_reg_2267 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_iter_reg_2278 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_1_phi_fu_2361_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_assign_2_phi_fu_2293_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_reg_2312 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal jdx_5_reg_2323 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal idx_7_reg_2334 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_7701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_8_reg_2345 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal p_1_reg_2357 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_9_reg_2369 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx_0_i1_reg_2380 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul7_reg_2392 : STD_LOGIC_VECTOR (9 downto 0);
    signal jdx_0_i1_reg_2403 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_ioackin_hard_dec_out_WREADY : STD_LOGIC;
    signal idx_1_i_reg_2414 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul9_reg_2426 : STD_LOGIC_VECTOR (9 downto 0);
    signal jdx_1_i_reg_2437 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_ioackin_soft_dec_out_WREADY : STD_LOGIC;
    signal tmp_197_cast_fu_3381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_3741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_3785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_4152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_0_0_1_fu_4186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_0_0_2_fu_4220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_0_0_3_fu_4254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_0_0_4_fu_4288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_0_1_4_fu_4322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_fu_4356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_0_1_fu_4390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_0_2_fu_4424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_0_3_fu_4458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_0_4_fu_4492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_1_1_4_fu_4526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_fu_4560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_0_1_fu_4594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_0_2_fu_4628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_0_3_fu_4662_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_0_4_fu_4696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_2_1_4_fu_4730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_fu_6121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_74_fu_6140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_0_1_fu_6145_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_0_1_fu_6164_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_0_2_fu_6169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_0_2_fu_6188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_0_3_fu_6193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_0_3_fu_6212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_0_4_fu_6217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_0_4_fu_6236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_0_5_fu_6241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_0_5_fu_6260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_fu_6265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_fu_6284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_1_fu_6289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_1_fu_6308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_2_fu_6313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_2_fu_6332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_3_fu_6337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_3_fu_6356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_4_fu_6361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_4_fu_6380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_1_5_fu_6385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_1_5_fu_6404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_fu_6409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_fu_6428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_1_fu_6433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_1_fu_6452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_2_fu_6457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_2_fu_6476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_3_fu_6481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_3_fu_6500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_4_fu_6505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_4_fu_6524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_2_5_fu_6529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_2_5_fu_6548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_fu_6608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_0_0_1_fu_6642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_0_1_1_fu_6676_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_1_fu_6710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_1_0_1_fu_6744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_1_1_1_fu_6778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_2_fu_6812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_2_0_1_fu_6846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_2_1_1_fu_6880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_3_fu_6914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_3_0_1_fu_6948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_3_1_1_fu_6982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_4_fu_7016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_4_0_1_fu_7050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_4_1_1_fu_7084_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_5_fu_7118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_5_0_1_fu_7152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_5_1_1_fu_7186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_7246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_1_fu_7280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_2_fu_7314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_3_fu_7348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_4_fu_7382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_5_fu_7416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_7713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_7766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_0_1_fu_7797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_0_2_fu_7829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_0_3_fu_7860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_0_4_fu_7891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_0_5_fu_7922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_7927_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_fu_7964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_1_fu_7995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_2_fu_8024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_4_fu_8053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_1_5_fu_8082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_fu_8113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_1_fu_8142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_2_fu_8173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_3_fu_8204_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_2_5_fu_8233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_8354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_8420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_8493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_3718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_234_fu_8397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_235_fu_8470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_noisy_input_ARREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_hard_dec_out_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_hard_dec_out_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_soft_dec_out_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_soft_dec_out_WREADY : STD_LOGIC := '0';
    signal H_proto_shift_load_c_1_fu_3610_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_2_fu_3600_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_3_fu_3590_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_4_fu_3580_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_5_fu_3630_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_fu_3620_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_7_fu_3550_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_8_fu_3540_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_9_fu_3530_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_10_fu_3520_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_11_fu_3570_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_6_fu_3560_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_13_fu_3670_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_14_fu_3660_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_15_fu_3650_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_16_fu_3640_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_17_fu_3690_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal H_proto_shift_load_c_12_fu_3680_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal idx_assign_fu_3404_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3002_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3017_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3032_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3037_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2962_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_6135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_0_1_fu_6159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_0_2_fu_6183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_0_3_fu_6207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_0_4_fu_6231_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_0_5_fu_6255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_fu_6279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_1_fu_6303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_2_fu_6327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_3_fu_6351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_4_fu_6375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_1_5_fu_6399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_fu_6423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_1_fu_6447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_2_fu_6471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_3_fu_6495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_4_fu_6519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_2_5_fu_6543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_0_5_fu_8262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_1_5_fu_8298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_2_5_fu_8335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2844_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2850_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2850_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2856_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2862_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2868_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2874_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_3114_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3120_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3126_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3132_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3138_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3144_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_3330_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_3342_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_fu_3338_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl6_cast_fu_3350_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_cast_fu_3372_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_3376_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_3386_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_3392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_3398_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_assign_2_cast_fu_4119_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_10_fu_4123_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_fu_4128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_11_fu_4134_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_12_fu_4140_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_cast_fu_4148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_0_0_1_fu_4157_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_0_0_1_fu_4162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_0_0_1_fu_4168_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_1_fu_4174_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_1_cast_fu_4182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_0_0_2_fu_4191_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_0_0_2_fu_4196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_0_0_2_fu_4202_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_2_fu_4208_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_2_cast_fu_4216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_0_0_3_fu_4225_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_0_0_3_fu_4230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_0_0_3_fu_4236_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_3_fu_4242_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_3_cast_fu_4250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_0_0_4_fu_4259_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_0_0_4_fu_4264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_0_0_4_fu_4270_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_4_fu_4276_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_0_4_cast_fu_4284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_0_1_4_fu_4293_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_0_1_4_fu_4298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_0_1_4_fu_4304_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_1_4_fu_4310_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_0_1_4_cast_fu_4318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_fu_4327_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_fu_4332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_fu_4338_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_fu_4344_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_cast_fu_4352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_0_1_fu_4361_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_0_1_fu_4366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_0_1_fu_4372_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_1_fu_4378_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_1_cast_fu_4386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_0_2_fu_4395_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_0_2_fu_4400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_0_2_fu_4406_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_2_fu_4412_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_2_cast_fu_4420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_0_3_fu_4429_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_0_3_fu_4434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_0_3_fu_4440_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_3_fu_4446_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_3_cast_fu_4454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_0_4_fu_4463_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_0_4_fu_4468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_0_4_fu_4474_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_4_fu_4480_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_0_4_cast_fu_4488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_1_1_4_fu_4497_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_1_4_fu_4502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_1_1_4_fu_4508_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_1_4_fu_4514_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_1_1_4_cast_fu_4522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_fu_4531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_fu_4536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_fu_4542_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_fu_4548_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_cast_fu_4556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_0_1_fu_4565_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_0_1_fu_4570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_0_1_fu_4576_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_1_fu_4582_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_1_cast_fu_4590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_0_2_fu_4599_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_0_2_fu_4604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_0_2_fu_4610_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_2_fu_4616_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_2_cast_fu_4624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_0_3_fu_4633_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_0_3_fu_4638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_0_3_fu_4644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_3_fu_4650_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_3_cast_fu_4658_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_0_4_fu_4667_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_0_4_fu_4672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_0_4_fu_4678_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_4_fu_4684_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_0_4_cast_fu_4692_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_2_1_4_fu_4701_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_1_4_fu_4706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_4_2_1_4_fu_4712_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_1_4_fu_4718_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_5_2_1_4_cast_fu_4726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_4735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_fu_4743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_fu_4751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_4759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_4767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_4775_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_136_fu_4785_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_4795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_4789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_4801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_4813_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_141_fu_4823_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_4833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_4827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_4839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_4851_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_fu_4861_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_4871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_4865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_4877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_4889_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_150_fu_4899_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_4909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_4903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_4915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_4927_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_152_fu_4937_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_4947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_4941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_4953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_4807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_4845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_4921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_4959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_4971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_4883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_4977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_4965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_4989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_4997_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_159_fu_5007_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs5_fu_5017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_5011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_5023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_5029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_5041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_5047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_5035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_5065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_5071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_5059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_5083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp14_fu_5095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp17_fu_5107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_5119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_5127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_5135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_5143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_10_fu_5151_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_5159_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_227_fu_5169_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs12_fu_5179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs12_fu_5173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_5185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_5197_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_228_fu_5207_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs13_fu_5217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs13_fu_5211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_5223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_5235_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_229_fu_5245_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs14_fu_5255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs14_fu_5249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_5261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_3162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_5273_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_230_fu_5283_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs15_fu_5293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs15_fu_5287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_5299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_fu_3168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_fu_5311_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_231_fu_5321_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs16_fu_5331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs16_fu_5325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_fu_5337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_fu_3174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_5191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_5229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_fu_5305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_fu_5343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp21_fu_5355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_5267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp20_fu_5361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp19_fu_5349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_fu_5373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_151_fu_5381_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_233_fu_5391_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs17_fu_5401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs17_fu_5395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_153_fu_5407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_fu_3180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_fu_5413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp24_fu_5425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp23_fu_5431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp22_fu_5419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp27_fu_5449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp26_fu_5455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp25_fu_5443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp29_fu_5467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_fu_5479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp35_fu_5491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_5503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_13_fu_5511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_14_fu_5519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_fu_5527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_16_fu_5535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_163_fu_5543_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_241_fu_5553_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs18_fu_5563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs18_fu_5557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_fu_5569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_fu_3186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_fu_5581_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_242_fu_5591_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs19_fu_5601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs19_fu_5595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_5607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_171_fu_3192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_fu_5619_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_243_fu_5629_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs20_fu_5639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs20_fu_5633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_175_fu_5645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_fu_3198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_fu_5657_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_244_fu_5667_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs21_fu_5677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs21_fu_5671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_180_fu_5683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_3204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_183_fu_5695_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_245_fu_5705_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs22_fu_5715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs22_fu_5709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_185_fu_5721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_186_fu_3210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_fu_5575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_172_fu_5613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_fu_5689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_fu_5727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp39_fu_5739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_177_fu_5651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp38_fu_5745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp37_fu_5733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_fu_5757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_fu_5765_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_247_fu_5775_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs23_fu_5785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs23_fu_5779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_fu_5791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_fu_3216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_fu_5797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp42_fu_5809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp41_fu_5815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp40_fu_5803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp45_fu_5833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp44_fu_5839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp43_fu_5827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp47_fu_5851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp50_fu_5863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp53_fu_5875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_5887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_5900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_5913_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_fu_5926_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_5939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_5952_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_fu_5965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_fu_5978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_fu_5991_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_fu_6004_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_6017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_11_fu_6030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_12_fu_6043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_13_fu_6056_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_14_fu_6069_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_15_fu_6082_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_16_fu_6095_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_17_fu_6108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_fu_6126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_fu_6129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_0_1_fu_6150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_0_1_fu_6153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_0_2_fu_6174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_0_2_fu_6177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_0_3_fu_6198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_0_3_fu_6201_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_0_4_fu_6222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_0_4_fu_6225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_0_5_fu_6246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_0_5_fu_6249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_fu_6270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_fu_6273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_1_fu_6294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_1_fu_6297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_2_fu_6318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_2_fu_6321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_3_fu_6342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_3_fu_6345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_4_fu_6366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_4_fu_6369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_1_5_fu_6390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_1_5_fu_6393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_fu_6414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_fu_6417_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_1_fu_6438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_1_fu_6441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_2_fu_6462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_2_fu_6465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_3_fu_6486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_3_fu_6489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_4_fu_6510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_4_fu_6513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_to_int_2_5_fu_6534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_neg_2_5_fu_6537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_1_cast_fu_6565_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_13_fu_6579_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_fu_6584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_fu_6590_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_fu_6596_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_0_cast_fu_6604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_0_0_1_fu_6613_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_0_0_1_fu_6618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_0_0_1_fu_6624_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_0_0_1_fu_6630_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_0_0_1_cast_fu_6638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_0_1_1_fu_6647_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_0_1_1_fu_6652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_0_1_1_fu_6658_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_0_1_1_fu_6664_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_0_1_1_cast_fu_6672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_1_fu_6681_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_1_fu_6686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_1_fu_6692_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_fu_6698_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_cast_fu_6706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_1_0_1_fu_6715_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_1_0_1_fu_6720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_1_0_1_fu_6726_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_0_1_fu_6732_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_0_1_cast_fu_6740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_1_1_1_fu_6749_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_1_1_1_fu_6754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_1_1_1_fu_6760_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_1_1_fu_6766_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_1_1_1_cast_fu_6774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_2_fu_6783_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_2_fu_6788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_2_fu_6794_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_fu_6800_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_cast_fu_6808_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_2_0_1_fu_6817_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_2_0_1_fu_6822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_2_0_1_fu_6828_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_0_1_fu_6834_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_0_1_cast_fu_6842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_2_1_1_fu_6851_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_2_1_1_fu_6856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_2_1_1_fu_6862_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_1_1_fu_6868_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_2_1_1_cast_fu_6876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_3_fu_6885_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_3_fu_6890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_3_fu_6896_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_fu_6902_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_cast_fu_6910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_3_0_1_fu_6919_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_3_0_1_fu_6924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_3_0_1_fu_6930_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_0_1_fu_6936_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_0_1_cast_fu_6944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_3_1_1_fu_6953_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_3_1_1_fu_6958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_3_1_1_fu_6964_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_1_1_fu_6970_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_3_1_1_cast_fu_6978_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_4_fu_6987_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_4_fu_6992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_4_fu_6998_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_fu_7004_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_cast_fu_7012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_4_0_1_fu_7021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_4_0_1_fu_7026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_4_0_1_fu_7032_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_0_1_fu_7038_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_0_1_cast_fu_7046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_4_1_1_fu_7055_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_4_1_1_fu_7060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_4_1_1_fu_7066_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_1_1_fu_7072_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_4_1_1_cast_fu_7080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_5_fu_7089_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_5_fu_7094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_5_fu_7100_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_fu_7106_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_cast_fu_7114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_5_0_1_fu_7123_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_5_0_1_fu_7128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_5_0_1_fu_7134_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_0_1_fu_7140_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_0_1_cast_fu_7148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_5_1_1_fu_7157_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_5_1_1_fu_7162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_7_5_1_1_fu_7168_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_1_1_fu_7174_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_8_5_1_1_cast_fu_7182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_assign_cast_fu_7191_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_fu_7217_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_7222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_fu_7228_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_fu_7234_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_cast_fu_7242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_s_fu_7251_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_1_fu_7256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_1_fu_7262_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_1_fu_7268_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_1_cast_fu_7276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_6_fu_7285_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_2_fu_7290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_2_fu_7296_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_2_fu_7302_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_2_cast_fu_7310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_3_fu_7319_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_3_fu_7324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_3_fu_7330_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_3_fu_7336_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_3_cast_fu_7344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_4_fu_7353_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_4_fu_7358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_4_fu_7364_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_4_fu_7370_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_4_cast_fu_7378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_idx_5_fu_7387_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_5_fu_7392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_idx_1_5_fu_7398_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_5_fu_7404_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_2_5_cast_fu_7412_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal soft_dec_tmp_0_load_2_fu_7443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_7447_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_160_fu_7457_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_7467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs6_fu_7461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_7473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_tmp_1_load_2_fu_7486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_7490_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_161_fu_7500_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs7_fu_7510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs7_fu_7504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_7516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_tmp_2_load_2_fu_7529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_7533_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_162_fu_7543_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs8_fu_7553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs8_fu_7547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_7559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_tmp_3_load_2_fu_7572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_fu_7576_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_164_fu_7586_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs9_fu_7596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs9_fu_7590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_7602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_tmp_4_load_2_fu_7615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_7619_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_169_fu_7629_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs10_fu_7639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs10_fu_7633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_7645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal soft_dec_tmp_5_load_2_fu_7658_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_fu_7662_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_174_fu_7672_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs11_fu_7682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs11_fu_7676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_7688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_7736_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_184_fu_7748_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_179_fu_7742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_202_cast_fu_7754_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_fu_7758_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_0_1_fu_7771_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_188_fu_7777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_fu_7783_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_0_1_fu_7789_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_0_2_fu_7803_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_194_fu_7809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_195_fu_7815_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_0_2_fu_7821_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_0_3_fu_7834_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_196_fu_7840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_fu_7846_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_0_3_fu_7852_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_0_4_fu_7865_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_198_fu_7871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_fu_7877_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_0_4_fu_7883_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_0_5_fu_7896_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_200_fu_7902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_201_fu_7908_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_0_5_fu_7914_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_1_fu_7935_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_203_fu_7946_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_202_fu_7940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_214_cast_fu_7952_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_1_fu_7956_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_1_1_fu_7969_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_204_fu_7975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_fu_7981_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_1_1_fu_7987_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_1_2_fu_8000_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_206_fu_8005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_207_fu_8011_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_1_2_fu_8016_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_1_4_fu_8029_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_208_fu_8034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_fu_8040_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_1_4_fu_8045_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_1_5_fu_8058_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_210_fu_8063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_211_fu_8069_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_1_5_fu_8074_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_2_fu_8087_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_212_fu_8093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_213_fu_8099_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_2_fu_8105_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_2_1_fu_8118_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_214_fu_8123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_215_fu_8129_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_2_1_fu_8134_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_108_2_2_fu_8147_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_216_fu_8153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_fu_8159_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_2_2_fu_8165_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_2_3_fu_8178_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_218_fu_8184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_219_fu_8190_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_idx_9_2_3_fu_8196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_2_5_fu_8209_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_220_fu_8214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_221_fu_8220_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_idx_9_2_5_fu_8225_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp56_fu_8238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp59_fu_8252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp58_fu_8248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp57_fu_8256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp55_fu_8242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp61_fu_8269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp64_fu_8286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp63_fu_8281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp62_fu_8292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp60_fu_8275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp66_fu_8305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp69_fu_8323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp68_fu_8317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp67_fu_8329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp65_fu_8311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp70_fu_8361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_8367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (62 downto 0);

    component fminf IS
    port (
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        y : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component set_dram IS
    port (
        circular_ram_0_dram_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        circular_ram_0_dram_ce0 : OUT STD_LOGIC;
        circular_ram_0_dram_we0 : OUT STD_LOGIC;
        circular_ram_0_dram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        circular_ram_1_dram_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        circular_ram_1_dram_ce0 : OUT STD_LOGIC;
        circular_ram_1_dram_we0 : OUT STD_LOGIC;
        circular_ram_1_dram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        circular_ram_2_dram_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        circular_ram_2_dram_ce0 : OUT STD_LOGIC;
        circular_ram_2_dram_we0 : OUT STD_LOGIC;
        circular_ram_2_dram_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_36 : IN STD_LOGIC_VECTOR (1 downto 0);
        i : IN STD_LOGIC_VECTOR (7 downto 0);
        tmp : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_fadd_bdk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_fmul_bek IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_fdiv_bfk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_fcmp_bgk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_mux_6bhl IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_mux_6bil IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_H_probkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component min_sum_dec_noisycud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component min_sum_dec_hard_4jc IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_syndrbak IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_noisy_input_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_soft_dec_out_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component min_sum_dec_hard_dec_out_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    H_proto_shift_U : component min_sum_dec_H_probkb
    generic map (
        DataWidth => 8,
        AddressRange => 18,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => H_proto_shift_address0,
        ce0 => H_proto_shift_ce0,
        q0 => H_proto_shift_q0);

    min_sum_dec_noisy_input_m_axi_U : component min_sum_dec_noisy_input_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_NOISY_INPUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_NOISY_INPUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_NOISY_INPUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_NOISY_INPUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_NOISY_INPUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_NOISY_INPUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_NOISY_INPUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_NOISY_INPUT_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_NOISY_INPUT_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_NOISY_INPUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_NOISY_INPUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_NOISY_INPUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_noisy_input_AWVALID,
        AWREADY => m_axi_noisy_input_AWREADY,
        AWADDR => m_axi_noisy_input_AWADDR,
        AWID => m_axi_noisy_input_AWID,
        AWLEN => m_axi_noisy_input_AWLEN,
        AWSIZE => m_axi_noisy_input_AWSIZE,
        AWBURST => m_axi_noisy_input_AWBURST,
        AWLOCK => m_axi_noisy_input_AWLOCK,
        AWCACHE => m_axi_noisy_input_AWCACHE,
        AWPROT => m_axi_noisy_input_AWPROT,
        AWQOS => m_axi_noisy_input_AWQOS,
        AWREGION => m_axi_noisy_input_AWREGION,
        AWUSER => m_axi_noisy_input_AWUSER,
        WVALID => m_axi_noisy_input_WVALID,
        WREADY => m_axi_noisy_input_WREADY,
        WDATA => m_axi_noisy_input_WDATA,
        WSTRB => m_axi_noisy_input_WSTRB,
        WLAST => m_axi_noisy_input_WLAST,
        WID => m_axi_noisy_input_WID,
        WUSER => m_axi_noisy_input_WUSER,
        ARVALID => m_axi_noisy_input_ARVALID,
        ARREADY => m_axi_noisy_input_ARREADY,
        ARADDR => m_axi_noisy_input_ARADDR,
        ARID => m_axi_noisy_input_ARID,
        ARLEN => m_axi_noisy_input_ARLEN,
        ARSIZE => m_axi_noisy_input_ARSIZE,
        ARBURST => m_axi_noisy_input_ARBURST,
        ARLOCK => m_axi_noisy_input_ARLOCK,
        ARCACHE => m_axi_noisy_input_ARCACHE,
        ARPROT => m_axi_noisy_input_ARPROT,
        ARQOS => m_axi_noisy_input_ARQOS,
        ARREGION => m_axi_noisy_input_ARREGION,
        ARUSER => m_axi_noisy_input_ARUSER,
        RVALID => m_axi_noisy_input_RVALID,
        RREADY => m_axi_noisy_input_RREADY,
        RDATA => m_axi_noisy_input_RDATA,
        RLAST => m_axi_noisy_input_RLAST,
        RID => m_axi_noisy_input_RID,
        RUSER => m_axi_noisy_input_RUSER,
        RRESP => m_axi_noisy_input_RRESP,
        BVALID => m_axi_noisy_input_BVALID,
        BREADY => m_axi_noisy_input_BREADY,
        BRESP => m_axi_noisy_input_BRESP,
        BID => m_axi_noisy_input_BID,
        BUSER => m_axi_noisy_input_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => noisy_input_ARVALID,
        I_ARREADY => noisy_input_ARREADY,
        I_ARADDR => noisy_input_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_A7,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => noisy_input_RVALID,
        I_RREADY => noisy_input_RREADY,
        I_RDATA => noisy_input_RDATA,
        I_RID => noisy_input_RID,
        I_RUSER => noisy_input_RUSER,
        I_RRESP => noisy_input_RRESP,
        I_RLAST => noisy_input_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => noisy_input_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => noisy_input_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => noisy_input_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => noisy_input_BRESP,
        I_BID => noisy_input_BID,
        I_BUSER => noisy_input_BUSER);

    min_sum_dec_soft_dec_out_m_axi_U : component min_sum_dec_soft_dec_out_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_SOFT_DEC_OUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_SOFT_DEC_OUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_SOFT_DEC_OUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_SOFT_DEC_OUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_SOFT_DEC_OUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_SOFT_DEC_OUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_SOFT_DEC_OUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_SOFT_DEC_OUT_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_SOFT_DEC_OUT_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_SOFT_DEC_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_SOFT_DEC_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_SOFT_DEC_OUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_soft_dec_out_AWVALID,
        AWREADY => m_axi_soft_dec_out_AWREADY,
        AWADDR => m_axi_soft_dec_out_AWADDR,
        AWID => m_axi_soft_dec_out_AWID,
        AWLEN => m_axi_soft_dec_out_AWLEN,
        AWSIZE => m_axi_soft_dec_out_AWSIZE,
        AWBURST => m_axi_soft_dec_out_AWBURST,
        AWLOCK => m_axi_soft_dec_out_AWLOCK,
        AWCACHE => m_axi_soft_dec_out_AWCACHE,
        AWPROT => m_axi_soft_dec_out_AWPROT,
        AWQOS => m_axi_soft_dec_out_AWQOS,
        AWREGION => m_axi_soft_dec_out_AWREGION,
        AWUSER => m_axi_soft_dec_out_AWUSER,
        WVALID => m_axi_soft_dec_out_WVALID,
        WREADY => m_axi_soft_dec_out_WREADY,
        WDATA => m_axi_soft_dec_out_WDATA,
        WSTRB => m_axi_soft_dec_out_WSTRB,
        WLAST => m_axi_soft_dec_out_WLAST,
        WID => m_axi_soft_dec_out_WID,
        WUSER => m_axi_soft_dec_out_WUSER,
        ARVALID => m_axi_soft_dec_out_ARVALID,
        ARREADY => m_axi_soft_dec_out_ARREADY,
        ARADDR => m_axi_soft_dec_out_ARADDR,
        ARID => m_axi_soft_dec_out_ARID,
        ARLEN => m_axi_soft_dec_out_ARLEN,
        ARSIZE => m_axi_soft_dec_out_ARSIZE,
        ARBURST => m_axi_soft_dec_out_ARBURST,
        ARLOCK => m_axi_soft_dec_out_ARLOCK,
        ARCACHE => m_axi_soft_dec_out_ARCACHE,
        ARPROT => m_axi_soft_dec_out_ARPROT,
        ARQOS => m_axi_soft_dec_out_ARQOS,
        ARREGION => m_axi_soft_dec_out_ARREGION,
        ARUSER => m_axi_soft_dec_out_ARUSER,
        RVALID => m_axi_soft_dec_out_RVALID,
        RREADY => m_axi_soft_dec_out_RREADY,
        RDATA => m_axi_soft_dec_out_RDATA,
        RLAST => m_axi_soft_dec_out_RLAST,
        RID => m_axi_soft_dec_out_RID,
        RUSER => m_axi_soft_dec_out_RUSER,
        RRESP => m_axi_soft_dec_out_RRESP,
        BVALID => m_axi_soft_dec_out_BVALID,
        BREADY => m_axi_soft_dec_out_BREADY,
        BRESP => m_axi_soft_dec_out_BRESP,
        BID => m_axi_soft_dec_out_BID,
        BUSER => m_axi_soft_dec_out_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => soft_dec_out_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => soft_dec_out_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => soft_dec_out_RDATA,
        I_RID => soft_dec_out_RID,
        I_RUSER => soft_dec_out_RUSER,
        I_RRESP => soft_dec_out_RRESP,
        I_RLAST => soft_dec_out_RLAST,
        I_AWVALID => soft_dec_out_AWVALID,
        I_AWREADY => soft_dec_out_AWREADY,
        I_AWADDR => soft_dec_out_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_A7,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => soft_dec_out_WVALID,
        I_WREADY => soft_dec_out_WREADY,
        I_WDATA => tmp_157_reg_10445,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => soft_dec_out_BVALID,
        I_BREADY => soft_dec_out_BREADY,
        I_BRESP => soft_dec_out_BRESP,
        I_BID => soft_dec_out_BID,
        I_BUSER => soft_dec_out_BUSER);

    min_sum_dec_hard_dec_out_m_axi_U : component min_sum_dec_hard_dec_out_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_HARD_DEC_OUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_HARD_DEC_OUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_HARD_DEC_OUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_HARD_DEC_OUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_HARD_DEC_OUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_HARD_DEC_OUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_HARD_DEC_OUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_HARD_DEC_OUT_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_HARD_DEC_OUT_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_HARD_DEC_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_HARD_DEC_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_HARD_DEC_OUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_hard_dec_out_AWVALID,
        AWREADY => m_axi_hard_dec_out_AWREADY,
        AWADDR => m_axi_hard_dec_out_AWADDR,
        AWID => m_axi_hard_dec_out_AWID,
        AWLEN => m_axi_hard_dec_out_AWLEN,
        AWSIZE => m_axi_hard_dec_out_AWSIZE,
        AWBURST => m_axi_hard_dec_out_AWBURST,
        AWLOCK => m_axi_hard_dec_out_AWLOCK,
        AWCACHE => m_axi_hard_dec_out_AWCACHE,
        AWPROT => m_axi_hard_dec_out_AWPROT,
        AWQOS => m_axi_hard_dec_out_AWQOS,
        AWREGION => m_axi_hard_dec_out_AWREGION,
        AWUSER => m_axi_hard_dec_out_AWUSER,
        WVALID => m_axi_hard_dec_out_WVALID,
        WREADY => m_axi_hard_dec_out_WREADY,
        WDATA => m_axi_hard_dec_out_WDATA,
        WSTRB => m_axi_hard_dec_out_WSTRB,
        WLAST => m_axi_hard_dec_out_WLAST,
        WID => m_axi_hard_dec_out_WID,
        WUSER => m_axi_hard_dec_out_WUSER,
        ARVALID => m_axi_hard_dec_out_ARVALID,
        ARREADY => m_axi_hard_dec_out_ARREADY,
        ARADDR => m_axi_hard_dec_out_ARADDR,
        ARID => m_axi_hard_dec_out_ARID,
        ARLEN => m_axi_hard_dec_out_ARLEN,
        ARSIZE => m_axi_hard_dec_out_ARSIZE,
        ARBURST => m_axi_hard_dec_out_ARBURST,
        ARLOCK => m_axi_hard_dec_out_ARLOCK,
        ARCACHE => m_axi_hard_dec_out_ARCACHE,
        ARPROT => m_axi_hard_dec_out_ARPROT,
        ARQOS => m_axi_hard_dec_out_ARQOS,
        ARREGION => m_axi_hard_dec_out_ARREGION,
        ARUSER => m_axi_hard_dec_out_ARUSER,
        RVALID => m_axi_hard_dec_out_RVALID,
        RREADY => m_axi_hard_dec_out_RREADY,
        RDATA => m_axi_hard_dec_out_RDATA,
        RLAST => m_axi_hard_dec_out_RLAST,
        RID => m_axi_hard_dec_out_RID,
        RUSER => m_axi_hard_dec_out_RUSER,
        RRESP => m_axi_hard_dec_out_RRESP,
        BVALID => m_axi_hard_dec_out_BVALID,
        BREADY => m_axi_hard_dec_out_BREADY,
        BRESP => m_axi_hard_dec_out_BRESP,
        BID => m_axi_hard_dec_out_BID,
        BUSER => m_axi_hard_dec_out_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => hard_dec_out_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => hard_dec_out_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => hard_dec_out_RDATA,
        I_RID => hard_dec_out_RID,
        I_RUSER => hard_dec_out_RUSER,
        I_RRESP => hard_dec_out_RRESP,
        I_RLAST => hard_dec_out_RLAST,
        I_AWVALID => hard_dec_out_AWVALID,
        I_AWREADY => hard_dec_out_AWREADY,
        I_AWADDR => hard_dec_out_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_A7,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => hard_dec_out_WVALID,
        I_WREADY => hard_dec_out_WREADY,
        I_WDATA => hard_dec_out_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => hard_dec_out_BVALID,
        I_BREADY => hard_dec_out_BREADY,
        I_BRESP => hard_dec_out_BRESP,
        I_BID => hard_dec_out_BID,
        I_BUSER => hard_dec_out_BUSER);

    noisy_input_vec_0_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_0_address0,
        ce0 => noisy_input_vec_0_ce0,
        we0 => noisy_input_vec_0_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_0_q0);

    noisy_input_vec_1_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_1_address0,
        ce0 => noisy_input_vec_1_ce0,
        we0 => noisy_input_vec_1_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_1_q0);

    noisy_input_vec_2_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_2_address0,
        ce0 => noisy_input_vec_2_ce0,
        we0 => noisy_input_vec_2_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_2_q0);

    noisy_input_vec_3_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_3_address0,
        ce0 => noisy_input_vec_3_ce0,
        we0 => noisy_input_vec_3_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_3_q0);

    noisy_input_vec_4_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_4_address0,
        ce0 => noisy_input_vec_4_ce0,
        we0 => noisy_input_vec_4_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_4_q0);

    noisy_input_vec_5_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => noisy_input_vec_5_address0,
        ce0 => noisy_input_vec_5_ce0,
        we0 => noisy_input_vec_5_we0,
        d0 => noisy_input_addr_rea_reg_8584,
        q0 => noisy_input_vec_5_q0);

    llr_vec_0_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_0_address0,
        ce0 => llr_vec_0_ce0,
        we0 => llr_vec_0_we0,
        d0 => tmp_11_reg_8732,
        q0 => llr_vec_0_q0);

    llr_vec_1_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_1_address0,
        ce0 => llr_vec_1_ce0,
        we0 => llr_vec_1_we0,
        d0 => tmp_33_1_reg_8737,
        q0 => llr_vec_1_q0);

    llr_vec_2_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_2_address0,
        ce0 => llr_vec_2_ce0,
        we0 => llr_vec_2_we0,
        d0 => tmp_33_2_reg_8742,
        q0 => llr_vec_2_q0);

    llr_vec_3_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_3_address0,
        ce0 => llr_vec_3_ce0,
        we0 => llr_vec_3_we0,
        d0 => tmp_33_3_reg_8747,
        q0 => llr_vec_3_q0);

    llr_vec_4_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_4_address0,
        ce0 => llr_vec_4_ce0,
        we0 => llr_vec_4_we0,
        d0 => tmp_33_4_reg_8752,
        q0 => llr_vec_4_q0);

    llr_vec_5_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => llr_vec_5_address0,
        ce0 => llr_vec_5_ce0,
        we0 => llr_vec_5_we0,
        d0 => tmp_33_5_reg_8757,
        q0 => llr_vec_5_q0);

    chk2var_0_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_0_dram_address0,
        ce0 => chk2var_0_0_dram_ce0,
        we0 => chk2var_0_0_dram_we0,
        d0 => chk2var_0_0_dram_d0,
        q0 => chk2var_0_0_dram_q0);

    chk2var_0_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_1_dram_address0,
        ce0 => chk2var_0_1_dram_ce0,
        we0 => chk2var_0_1_dram_we0,
        d0 => chk2var_0_1_dram_d0,
        q0 => chk2var_0_1_dram_q0);

    chk2var_0_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_2_dram_address0,
        ce0 => chk2var_0_2_dram_ce0,
        we0 => chk2var_0_2_dram_we0,
        d0 => chk2var_0_2_dram_d0,
        q0 => chk2var_0_2_dram_q0);

    chk2var_0_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_3_dram_address0,
        ce0 => chk2var_0_3_dram_ce0,
        we0 => chk2var_0_3_dram_we0,
        d0 => chk2var_0_3_dram_d0,
        q0 => chk2var_0_3_dram_q0);

    chk2var_0_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_4_dram_address0,
        ce0 => chk2var_0_4_dram_ce0,
        we0 => chk2var_0_4_dram_we0,
        d0 => chk2var_0_4_dram_d0,
        q0 => chk2var_0_4_dram_q0);

    chk2var_0_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_0_5_dram_address0,
        ce0 => chk2var_0_5_dram_ce0,
        we0 => chk2var_0_5_dram_we0,
        d0 => chk2var_0_5_dram_d0,
        q0 => chk2var_0_5_dram_q0);

    chk2var_1_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_0_dram_address0,
        ce0 => chk2var_1_0_dram_ce0,
        we0 => chk2var_1_0_dram_we0,
        d0 => chk2var_1_0_dram_d0,
        q0 => chk2var_1_0_dram_q0);

    chk2var_1_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_1_dram_address0,
        ce0 => chk2var_1_1_dram_ce0,
        we0 => chk2var_1_1_dram_we0,
        d0 => chk2var_1_1_dram_d0,
        q0 => chk2var_1_1_dram_q0);

    chk2var_1_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_2_dram_address0,
        ce0 => chk2var_1_2_dram_ce0,
        we0 => chk2var_1_2_dram_we0,
        d0 => chk2var_1_2_dram_d0,
        q0 => chk2var_1_2_dram_q0);

    chk2var_1_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_3_dram_address0,
        ce0 => chk2var_1_3_dram_ce0,
        we0 => chk2var_1_3_dram_we0,
        d0 => chk2var_1_3_dram_d0,
        q0 => chk2var_1_3_dram_q0);

    chk2var_1_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_4_dram_address0,
        ce0 => chk2var_1_4_dram_ce0,
        we0 => chk2var_1_4_dram_we0,
        d0 => chk2var_1_4_dram_d0,
        q0 => chk2var_1_4_dram_q0);

    chk2var_1_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_1_5_dram_address0,
        ce0 => chk2var_1_5_dram_ce0,
        we0 => chk2var_1_5_dram_we0,
        d0 => chk2var_1_5_dram_d0,
        q0 => chk2var_1_5_dram_q0);

    chk2var_2_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_0_dram_address0,
        ce0 => chk2var_2_0_dram_ce0,
        we0 => chk2var_2_0_dram_we0,
        d0 => chk2var_2_0_dram_d0,
        q0 => chk2var_2_0_dram_q0);

    chk2var_2_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_1_dram_address0,
        ce0 => chk2var_2_1_dram_ce0,
        we0 => chk2var_2_1_dram_we0,
        d0 => chk2var_2_1_dram_d0,
        q0 => chk2var_2_1_dram_q0);

    chk2var_2_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_2_dram_address0,
        ce0 => chk2var_2_2_dram_ce0,
        we0 => chk2var_2_2_dram_we0,
        d0 => chk2var_2_2_dram_d0,
        q0 => chk2var_2_2_dram_q0);

    chk2var_2_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_3_dram_address0,
        ce0 => chk2var_2_3_dram_ce0,
        we0 => chk2var_2_3_dram_we0,
        d0 => chk2var_2_3_dram_d0,
        q0 => chk2var_2_3_dram_q0);

    chk2var_2_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_4_dram_address0,
        ce0 => chk2var_2_4_dram_ce0,
        we0 => chk2var_2_4_dram_we0,
        d0 => chk2var_2_4_dram_d0,
        q0 => chk2var_2_4_dram_q0);

    chk2var_2_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => chk2var_2_5_dram_address0,
        ce0 => chk2var_2_5_dram_ce0,
        we0 => chk2var_2_5_dram_we0,
        d0 => chk2var_2_5_dram_d0,
        q0 => chk2var_2_5_dram_q0);

    var2chk_0_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_0_dram_address0,
        ce0 => var2chk_0_0_dram_ce0,
        we0 => var2chk_0_0_dram_we0,
        d0 => var2chk_0_0_dram_d0,
        q0 => var2chk_0_0_dram_q0);

    var2chk_0_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_1_dram_address0,
        ce0 => var2chk_0_1_dram_ce0,
        we0 => var2chk_0_1_dram_we0,
        d0 => var2chk_0_1_dram_d0,
        q0 => var2chk_0_1_dram_q0);

    var2chk_0_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_2_dram_address0,
        ce0 => var2chk_0_2_dram_ce0,
        we0 => var2chk_0_2_dram_we0,
        d0 => var2chk_0_2_dram_d0,
        q0 => var2chk_0_2_dram_q0);

    var2chk_0_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_3_dram_address0,
        ce0 => var2chk_0_3_dram_ce0,
        we0 => var2chk_0_3_dram_we0,
        d0 => var2chk_0_3_dram_d0,
        q0 => var2chk_0_3_dram_q0);

    var2chk_0_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_4_dram_address0,
        ce0 => var2chk_0_4_dram_ce0,
        we0 => var2chk_0_4_dram_we0,
        d0 => var2chk_0_4_dram_d0,
        q0 => var2chk_0_4_dram_q0);

    var2chk_0_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_0_5_dram_address0,
        ce0 => var2chk_0_5_dram_ce0,
        we0 => var2chk_0_5_dram_we0,
        d0 => var2chk_0_5_dram_d0,
        q0 => var2chk_0_5_dram_q0);

    var2chk_1_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_0_dram_address0,
        ce0 => var2chk_1_0_dram_ce0,
        we0 => var2chk_1_0_dram_we0,
        d0 => var2chk_1_0_dram_d0,
        q0 => var2chk_1_0_dram_q0);

    var2chk_1_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_1_dram_address0,
        ce0 => var2chk_1_1_dram_ce0,
        we0 => var2chk_1_1_dram_we0,
        d0 => var2chk_1_1_dram_d0,
        q0 => var2chk_1_1_dram_q0);

    var2chk_1_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_2_dram_address0,
        ce0 => var2chk_1_2_dram_ce0,
        we0 => var2chk_1_2_dram_we0,
        d0 => var2chk_1_2_dram_d0,
        q0 => var2chk_1_2_dram_q0);

    var2chk_1_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_3_dram_address0,
        ce0 => var2chk_1_3_dram_ce0,
        we0 => var2chk_1_3_dram_we0,
        d0 => var2chk_1_3_dram_d0,
        q0 => var2chk_1_3_dram_q0);

    var2chk_1_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_4_dram_address0,
        ce0 => var2chk_1_4_dram_ce0,
        we0 => var2chk_1_4_dram_we0,
        d0 => var2chk_1_4_dram_d0,
        q0 => var2chk_1_4_dram_q0);

    var2chk_1_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_1_5_dram_address0,
        ce0 => var2chk_1_5_dram_ce0,
        we0 => var2chk_1_5_dram_we0,
        d0 => var2chk_1_5_dram_d0,
        q0 => var2chk_1_5_dram_q0);

    var2chk_2_0_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_0_dram_address0,
        ce0 => var2chk_2_0_dram_ce0,
        we0 => var2chk_2_0_dram_we0,
        d0 => var2chk_2_0_dram_d0,
        q0 => var2chk_2_0_dram_q0);

    var2chk_2_1_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_1_dram_address0,
        ce0 => var2chk_2_1_dram_ce0,
        we0 => var2chk_2_1_dram_we0,
        d0 => var2chk_2_1_dram_d0,
        q0 => var2chk_2_1_dram_q0);

    var2chk_2_2_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_2_dram_address0,
        ce0 => var2chk_2_2_dram_ce0,
        we0 => var2chk_2_2_dram_we0,
        d0 => var2chk_2_2_dram_d0,
        q0 => var2chk_2_2_dram_q0);

    var2chk_2_3_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_3_dram_address0,
        ce0 => var2chk_2_3_dram_ce0,
        we0 => var2chk_2_3_dram_we0,
        d0 => var2chk_2_3_dram_d0,
        q0 => var2chk_2_3_dram_q0);

    var2chk_2_4_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_4_dram_address0,
        ce0 => var2chk_2_4_dram_ce0,
        we0 => var2chk_2_4_dram_we0,
        d0 => var2chk_2_4_dram_d0,
        q0 => var2chk_2_4_dram_q0);

    var2chk_2_5_dram_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => var2chk_2_5_dram_address0,
        ce0 => var2chk_2_5_dram_ce0,
        we0 => var2chk_2_5_dram_we0,
        d0 => var2chk_2_5_dram_d0,
        q0 => var2chk_2_5_dram_q0);

    soft_dec_tmp_0_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_0_address0,
        ce0 => soft_dec_tmp_0_ce0,
        we0 => soft_dec_tmp_0_we0,
        d0 => grp_fu_2844_p2,
        q0 => soft_dec_tmp_0_q0);

    soft_dec_tmp_1_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_1_address0,
        ce0 => soft_dec_tmp_1_ce0,
        we0 => soft_dec_tmp_1_we0,
        d0 => grp_fu_2850_p2,
        q0 => soft_dec_tmp_1_q0);

    soft_dec_tmp_2_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_2_address0,
        ce0 => soft_dec_tmp_2_ce0,
        we0 => soft_dec_tmp_2_we0,
        d0 => grp_fu_2856_p2,
        q0 => soft_dec_tmp_2_q0);

    soft_dec_tmp_3_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_3_address0,
        ce0 => soft_dec_tmp_3_ce0,
        we0 => soft_dec_tmp_3_we0,
        d0 => grp_fu_2862_p2,
        q0 => soft_dec_tmp_3_q0);

    soft_dec_tmp_4_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_4_address0,
        ce0 => soft_dec_tmp_4_ce0,
        we0 => soft_dec_tmp_4_we0,
        d0 => grp_fu_2868_p2,
        q0 => soft_dec_tmp_4_q0);

    soft_dec_tmp_5_U : component min_sum_dec_noisycud
    generic map (
        DataWidth => 32,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => soft_dec_tmp_5_address0,
        ce0 => soft_dec_tmp_5_ce0,
        we0 => soft_dec_tmp_5_we0,
        d0 => grp_fu_2874_p2,
        q0 => soft_dec_tmp_5_q0);

    hard_dec_tmp_0_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_0_V_address0,
        ce0 => hard_dec_tmp_0_V_ce0,
        we0 => hard_dec_tmp_0_V_we0,
        d0 => hard_dec_tmp_0_V_d0,
        q0 => hard_dec_tmp_0_V_q0,
        address1 => hard_dec_tmp_0_V_address1,
        ce1 => hard_dec_tmp_0_V_ce1,
        q1 => hard_dec_tmp_0_V_q1);

    hard_dec_tmp_1_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_1_V_address0,
        ce0 => hard_dec_tmp_1_V_ce0,
        we0 => hard_dec_tmp_1_V_we0,
        d0 => hard_dec_tmp_1_V_d0,
        q0 => hard_dec_tmp_1_V_q0,
        address1 => hard_dec_tmp_1_V_address1,
        ce1 => hard_dec_tmp_1_V_ce1,
        q1 => hard_dec_tmp_1_V_q1);

    hard_dec_tmp_2_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_2_V_address0,
        ce0 => hard_dec_tmp_2_V_ce0,
        we0 => hard_dec_tmp_2_V_we0,
        d0 => hard_dec_tmp_2_V_d0,
        q0 => hard_dec_tmp_2_V_q0,
        address1 => hard_dec_tmp_2_V_address1,
        ce1 => hard_dec_tmp_2_V_ce1,
        q1 => hard_dec_tmp_2_V_q1);

    hard_dec_tmp_3_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_3_V_address0,
        ce0 => hard_dec_tmp_3_V_ce0,
        we0 => hard_dec_tmp_3_V_we0,
        d0 => hard_dec_tmp_3_V_d0,
        q0 => hard_dec_tmp_3_V_q0,
        address1 => hard_dec_tmp_3_V_address1,
        ce1 => hard_dec_tmp_3_V_ce1,
        q1 => hard_dec_tmp_3_V_q1);

    hard_dec_tmp_4_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_4_V_address0,
        ce0 => hard_dec_tmp_4_V_ce0,
        we0 => hard_dec_tmp_4_V_we0,
        d0 => hard_dec_tmp_4_V_d0,
        q0 => hard_dec_tmp_4_V_q0,
        address1 => hard_dec_tmp_4_V_address1,
        ce1 => hard_dec_tmp_4_V_ce1,
        q1 => hard_dec_tmp_4_V_q1);

    hard_dec_tmp_5_V_U : component min_sum_dec_hard_4jc
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hard_dec_tmp_5_V_address0,
        ce0 => hard_dec_tmp_5_V_ce0,
        we0 => hard_dec_tmp_5_V_we0,
        d0 => hard_dec_tmp_5_V_d0,
        q0 => hard_dec_tmp_5_V_q0,
        address1 => hard_dec_tmp_5_V_address1,
        ce1 => hard_dec_tmp_5_V_ce1,
        q1 => hard_dec_tmp_5_V_q1);

    syndrome_0_V_U : component min_sum_dec_syndrbak
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => syndrome_0_V_address0,
        ce0 => syndrome_0_V_ce0,
        we0 => syndrome_0_V_we0,
        d0 => syndrome_0_V_d0,
        q0 => syndrome_0_V_q0);

    syndrome_1_V_U : component min_sum_dec_syndrbak
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => syndrome_1_V_address0,
        ce0 => syndrome_1_V_ce0,
        we0 => syndrome_1_V_we0,
        d0 => syndrome_1_V_d0,
        q0 => syndrome_1_V_q0);

    syndrome_2_V_U : component min_sum_dec_syndrbak
    generic map (
        DataWidth => 1,
        AddressRange => 167,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => syndrome_2_V_address0,
        ce0 => syndrome_2_V_ce0,
        we0 => syndrome_2_V_we0,
        d0 => syndrome_2_V_d0,
        q0 => syndrome_2_V_q0);

    x_assign_1_fminf_fu_2448 : component fminf
    port map (
        x => x_assign_s_fu_5894_p1,
        y => y_assign_9_fu_5907_p1,
        ap_return => x_assign_1_fminf_fu_2448_ap_return);

    y_assign_fminf_fu_2454 : component fminf
    port map (
        x => x_assign_2_fu_5920_p1,
        y => y_assign_s_fu_5933_p1,
        ap_return => y_assign_fminf_fu_2454_ap_return);

    x_assign_3_fminf_fu_2460 : component fminf
    port map (
        x => y_assign_9_fu_5907_p1,
        y => x_assign_2_fu_5920_p1,
        ap_return => x_assign_3_fminf_fu_2460_ap_return);

    y_assign_2_fminf_fu_2466 : component fminf
    port map (
        x => y_assign_s_fu_5933_p1,
        y => y_assign_1_fu_5946_p1,
        ap_return => y_assign_2_fminf_fu_2466_ap_return);

    y_assign_4_fminf_fu_2472 : component fminf
    port map (
        x => y_assign_1_fu_5946_p1,
        y => y_assign_3_fu_5959_p1,
        ap_return => y_assign_4_fminf_fu_2472_ap_return);

    y_assign_5_fminf_fu_2478 : component fminf
    port map (
        x => y_assign_3_fu_5959_p1,
        y => x_assign_s_fu_5894_p1,
        ap_return => y_assign_5_fminf_fu_2478_ap_return);

    x_assign_11_fminf_fu_2484 : component fminf
    port map (
        x => x_assign_10_fu_5972_p1,
        y => y_assign_6_fu_5985_p1,
        ap_return => x_assign_11_fminf_fu_2484_ap_return);

    y_assign_8_fminf_fu_2490 : component fminf
    port map (
        x => x_assign_12_fu_5998_p1,
        y => y_assign_7_fu_6011_p1,
        ap_return => y_assign_8_fminf_fu_2490_ap_return);

    x_assign_14_fminf_fu_2496 : component fminf
    port map (
        x => y_assign_6_fu_5985_p1,
        y => x_assign_12_fu_5998_p1,
        ap_return => x_assign_14_fminf_fu_2496_ap_return);

    y_assign_11_fminf_fu_2502 : component fminf
    port map (
        x => y_assign_7_fu_6011_p1,
        y => y_assign_10_fu_6024_p1,
        ap_return => y_assign_11_fminf_fu_2502_ap_return);

    y_assign_13_fminf_fu_2508 : component fminf
    port map (
        x => y_assign_10_fu_6024_p1,
        y => y_assign_12_fu_6037_p1,
        ap_return => y_assign_13_fminf_fu_2508_ap_return);

    y_assign_14_fminf_fu_2514 : component fminf
    port map (
        x => y_assign_12_fu_6037_p1,
        y => x_assign_10_fu_5972_p1,
        ap_return => y_assign_14_fminf_fu_2514_ap_return);

    x_assign_21_fminf_fu_2520 : component fminf
    port map (
        x => x_assign_20_fu_6050_p1,
        y => y_assign_15_fu_6063_p1,
        ap_return => x_assign_21_fminf_fu_2520_ap_return);

    y_assign_17_fminf_fu_2526 : component fminf
    port map (
        x => x_assign_22_fu_6076_p1,
        y => y_assign_16_fu_6089_p1,
        ap_return => y_assign_17_fminf_fu_2526_ap_return);

    x_assign_24_fminf_fu_2532 : component fminf
    port map (
        x => y_assign_15_fu_6063_p1,
        y => x_assign_22_fu_6076_p1,
        ap_return => x_assign_24_fminf_fu_2532_ap_return);

    y_assign_19_fminf_fu_2538 : component fminf
    port map (
        x => y_assign_16_fu_6089_p1,
        y => y_assign_18_fu_6102_p1,
        ap_return => y_assign_19_fminf_fu_2538_ap_return);

    y_assign_21_fminf_fu_2544 : component fminf
    port map (
        x => y_assign_18_fu_6102_p1,
        y => y_assign_20_fu_6115_p1,
        ap_return => y_assign_21_fminf_fu_2544_ap_return);

    y_assign_22_fminf_fu_2550 : component fminf
    port map (
        x => y_assign_20_fu_6115_p1,
        y => x_assign_20_fu_6050_p1,
        ap_return => y_assign_22_fminf_fu_2550_ap_return);

    x_assign_6_fminf_fu_2556 : component fminf
    port map (
        x => x_assign_1_reg_9274,
        y => y_assign_reg_9290,
        ap_return => x_assign_6_fminf_fu_2556_ap_return);

    x_assign_4_fminf_fu_2562 : component fminf
    port map (
        x => x_assign_3_reg_9301,
        y => y_assign_2_reg_9307,
        ap_return => x_assign_4_fminf_fu_2562_ap_return);

    x_assign_5_fminf_fu_2568 : component fminf
    port map (
        x => y_assign_reg_9290,
        y => y_assign_4_reg_9318,
        ap_return => x_assign_5_fminf_fu_2568_ap_return);

    x_assign_7_fminf_fu_2574 : component fminf
    port map (
        x => y_assign_2_reg_9307,
        y => y_assign_5_reg_9324,
        ap_return => x_assign_7_fminf_fu_2574_ap_return);

    x_assign_8_fminf_fu_2580 : component fminf
    port map (
        x => y_assign_4_reg_9318,
        y => x_assign_1_reg_9274,
        ap_return => x_assign_8_fminf_fu_2580_ap_return);

    x_assign_9_fminf_fu_2586 : component fminf
    port map (
        x => y_assign_5_reg_9324,
        y => x_assign_3_reg_9301,
        ap_return => x_assign_9_fminf_fu_2586_ap_return);

    x_assign_13_fminf_fu_2592 : component fminf
    port map (
        x => x_assign_11_reg_9340,
        y => y_assign_8_reg_9356,
        ap_return => x_assign_13_fminf_fu_2592_ap_return);

    x_assign_15_fminf_fu_2598 : component fminf
    port map (
        x => x_assign_14_reg_9367,
        y => y_assign_11_reg_9373,
        ap_return => x_assign_15_fminf_fu_2598_ap_return);

    x_assign_16_fminf_fu_2604 : component fminf
    port map (
        x => y_assign_8_reg_9356,
        y => y_assign_13_reg_9384,
        ap_return => x_assign_16_fminf_fu_2604_ap_return);

    x_assign_17_fminf_fu_2610 : component fminf
    port map (
        x => y_assign_11_reg_9373,
        y => y_assign_14_reg_9390,
        ap_return => x_assign_17_fminf_fu_2610_ap_return);

    x_assign_18_fminf_fu_2616 : component fminf
    port map (
        x => y_assign_13_reg_9384,
        y => x_assign_11_reg_9340,
        ap_return => x_assign_18_fminf_fu_2616_ap_return);

    x_assign_19_fminf_fu_2622 : component fminf
    port map (
        x => y_assign_14_reg_9390,
        y => x_assign_14_reg_9367,
        ap_return => x_assign_19_fminf_fu_2622_ap_return);

    x_assign_23_fminf_fu_2628 : component fminf
    port map (
        x => x_assign_21_reg_9406,
        y => y_assign_17_reg_9422,
        ap_return => x_assign_23_fminf_fu_2628_ap_return);

    x_assign_25_fminf_fu_2634 : component fminf
    port map (
        x => x_assign_24_reg_9433,
        y => y_assign_19_reg_9439,
        ap_return => x_assign_25_fminf_fu_2634_ap_return);

    x_assign_26_fminf_fu_2640 : component fminf
    port map (
        x => y_assign_17_reg_9422,
        y => y_assign_21_reg_9450,
        ap_return => x_assign_26_fminf_fu_2640_ap_return);

    x_assign_27_fminf_fu_2646 : component fminf
    port map (
        x => y_assign_19_reg_9439,
        y => y_assign_22_reg_9456,
        ap_return => x_assign_27_fminf_fu_2646_ap_return);

    x_assign_28_fminf_fu_2652 : component fminf
    port map (
        x => y_assign_21_reg_9450,
        y => x_assign_21_reg_9406,
        ap_return => x_assign_28_fminf_fu_2652_ap_return);

    x_assign_29_fminf_fu_2658 : component fminf
    port map (
        x => y_assign_22_reg_9456,
        y => x_assign_24_reg_9433,
        ap_return => x_assign_29_fminf_fu_2658_ap_return);

    tmp_i_fminf_fu_2664 : component fminf
    port map (
        x => x_assign_6_reg_9462,
        y => ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296,
        ap_return => tmp_i_fminf_fu_2664_ap_return);

    tmp_i5_fminf_fu_2670 : component fminf
    port map (
        x => x_assign_4_reg_9467,
        y => ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313,
        ap_return => tmp_i5_fminf_fu_2670_ap_return);

    tmp_i8_fminf_fu_2676 : component fminf
    port map (
        x => x_assign_5_reg_9472,
        y => ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264,
        ap_return => tmp_i8_fminf_fu_2676_ap_return);

    tmp_i1_fminf_fu_2682 : component fminf
    port map (
        x => x_assign_7_reg_9477,
        y => ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269,
        ap_return => tmp_i1_fminf_fu_2682_ap_return);

    tmp_i2_fminf_fu_2688 : component fminf
    port map (
        x => x_assign_8_reg_9482,
        y => ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280,
        ap_return => tmp_i2_fminf_fu_2688_ap_return);

    tmp_i3_fminf_fu_2694 : component fminf
    port map (
        x => x_assign_9_reg_9487,
        y => ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285,
        ap_return => tmp_i3_fminf_fu_2694_ap_return);

    tmp_i4_fminf_fu_2700 : component fminf
    port map (
        x => x_assign_13_reg_9492,
        y => ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362,
        ap_return => tmp_i4_fminf_fu_2700_ap_return);

    tmp_i6_fminf_fu_2706 : component fminf
    port map (
        x => x_assign_15_reg_9497,
        y => ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379,
        ap_return => tmp_i6_fminf_fu_2706_ap_return);

    tmp_i7_fminf_fu_2712 : component fminf
    port map (
        x => x_assign_16_reg_9502,
        y => ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330,
        ap_return => tmp_i7_fminf_fu_2712_ap_return);

    tmp_i9_fminf_fu_2718 : component fminf
    port map (
        x => x_assign_17_reg_9507,
        y => ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335,
        ap_return => tmp_i9_fminf_fu_2718_ap_return);

    tmp_i10_fminf_fu_2724 : component fminf
    port map (
        x => x_assign_18_reg_9512,
        y => ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346,
        ap_return => tmp_i10_fminf_fu_2724_ap_return);

    tmp_i11_fminf_fu_2730 : component fminf
    port map (
        x => x_assign_19_reg_9517,
        y => ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351,
        ap_return => tmp_i11_fminf_fu_2730_ap_return);

    tmp_i12_fminf_fu_2736 : component fminf
    port map (
        x => x_assign_23_reg_9522,
        y => ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428,
        ap_return => tmp_i12_fminf_fu_2736_ap_return);

    tmp_i13_fminf_fu_2742 : component fminf
    port map (
        x => x_assign_25_reg_9527,
        y => ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445,
        ap_return => tmp_i13_fminf_fu_2742_ap_return);

    tmp_i14_fminf_fu_2748 : component fminf
    port map (
        x => x_assign_26_reg_9532,
        y => ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396,
        ap_return => tmp_i14_fminf_fu_2748_ap_return);

    tmp_i15_fminf_fu_2754 : component fminf
    port map (
        x => x_assign_27_reg_9537,
        y => ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401,
        ap_return => tmp_i15_fminf_fu_2754_ap_return);

    tmp_i16_fminf_fu_2760 : component fminf
    port map (
        x => x_assign_28_reg_9542,
        y => ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412,
        ap_return => tmp_i16_fminf_fu_2760_ap_return);

    tmp_i17_fminf_fu_2766 : component fminf
    port map (
        x => x_assign_29_reg_9547,
        y => ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417,
        ap_return => tmp_i17_fminf_fu_2766_ap_return);

    StgValue_531_set_dram_fu_2772 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3228);

    StgValue_532_set_dram_fu_2784 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3236);

    StgValue_533_set_dram_fu_2796 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3244);

    StgValue_534_set_dram_fu_2808 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3252);

    StgValue_535_set_dram_fu_2820 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3260);

    StgValue_536_set_dram_fu_2832 : component set_dram
    port map (
        circular_ram_0_dram_address0 => StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0,
        circular_ram_0_dram_ce0 => StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0,
        circular_ram_0_dram_we0 => StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0,
        circular_ram_0_dram_d0 => StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0,
        circular_ram_1_dram_address0 => StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0,
        circular_ram_1_dram_ce0 => StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0,
        circular_ram_1_dram_we0 => StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0,
        circular_ram_1_dram_d0 => StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0,
        circular_ram_2_dram_address0 => StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0,
        circular_ram_2_dram_ce0 => StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0,
        circular_ram_2_dram_we0 => StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0,
        circular_ram_2_dram_d0 => StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0,
        tmp_36 => jdx_2_reg_2267,
        i => idx_2_reg_2255,
        tmp => reg_3268);

    min_sum_dec_fadd_bdk_U9 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2844_p0,
        din1 => grp_fu_2844_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2844_p2);

    min_sum_dec_fadd_bdk_U10 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2850_p0,
        din1 => grp_fu_2850_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2850_p2);

    min_sum_dec_fadd_bdk_U11 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2856_p0,
        din1 => grp_fu_2856_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2856_p2);

    min_sum_dec_fadd_bdk_U12 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2862_p0,
        din1 => grp_fu_2862_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2862_p2);

    min_sum_dec_fadd_bdk_U13 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2868_p0,
        din1 => grp_fu_2868_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2868_p2);

    min_sum_dec_fadd_bdk_U14 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2874_p0,
        din1 => grp_fu_2874_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2874_p2);

    min_sum_dec_fadd_bdk_U15 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_2_q0,
        din1 => chk2var_1_2_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2880_p2);

    min_sum_dec_fadd_bdk_U16 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_2_q0,
        din1 => chk2var_2_2_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2886_p2);

    min_sum_dec_fadd_bdk_U17 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_2_q0,
        din1 => chk2var_0_2_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2892_p2);

    min_sum_dec_fadd_bdk_U18 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_3_q0,
        din1 => chk2var_1_3_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2898_p2);

    min_sum_dec_fadd_bdk_U19 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_3_q0,
        din1 => chk2var_2_3_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2904_p2);

    min_sum_dec_fadd_bdk_U20 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_3_q0,
        din1 => chk2var_0_3_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2910_p2);

    min_sum_dec_fadd_bdk_U21 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_4_q0,
        din1 => chk2var_1_4_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2916_p2);

    min_sum_dec_fadd_bdk_U22 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_4_q0,
        din1 => chk2var_2_4_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2922_p2);

    min_sum_dec_fadd_bdk_U23 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_4_q0,
        din1 => chk2var_0_4_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2928_p2);

    min_sum_dec_fadd_bdk_U24 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_5_q0,
        din1 => chk2var_1_5_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2934_p2);

    min_sum_dec_fadd_bdk_U25 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_5_q0,
        din1 => chk2var_2_5_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2940_p2);

    min_sum_dec_fadd_bdk_U26 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => llr_vec_5_q0,
        din1 => chk2var_0_5_dram_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_2946_p2);

    min_sum_dec_fadd_bdk_U27 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_reg_9883,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817,
        ce => ap_const_logic_1,
        dout => grp_fu_2952_p2);

    min_sum_dec_fadd_bdk_U28 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_0_1_reg_9888,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3276,
        ce => ap_const_logic_1,
        dout => grp_fu_2957_p2);

    min_sum_dec_fadd_bdk_U29 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_0_2_reg_9893,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811,
        ce => ap_const_logic_1,
        dout => grp_fu_2962_p2);

    min_sum_dec_fadd_bdk_U30 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_1_reg_9898,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829,
        ce => ap_const_logic_1,
        dout => grp_fu_2967_p2);

    min_sum_dec_fadd_bdk_U31 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_1_1_reg_9903,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3283,
        ce => ap_const_logic_1,
        dout => grp_fu_2972_p2);

    min_sum_dec_fadd_bdk_U32 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_1_2_reg_9908,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823,
        ce => ap_const_logic_1,
        dout => grp_fu_2977_p2);

    min_sum_dec_fadd_bdk_U33 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_2_reg_9913,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841,
        ce => ap_const_logic_1,
        dout => grp_fu_2982_p2);

    min_sum_dec_fadd_bdk_U34 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_2_1_reg_9918,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3290,
        ce => ap_const_logic_1,
        dout => grp_fu_2987_p2);

    min_sum_dec_fadd_bdk_U35 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_2_2_reg_9923,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835,
        ce => ap_const_logic_1,
        dout => grp_fu_2992_p2);

    min_sum_dec_fadd_bdk_U36 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_3_reg_9928,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853,
        ce => ap_const_logic_1,
        dout => grp_fu_2997_p2);

    min_sum_dec_fadd_bdk_U37 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_3_1_reg_9933,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3297,
        ce => ap_const_logic_1,
        dout => grp_fu_3002_p2);

    min_sum_dec_fadd_bdk_U38 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_3_2_reg_9938,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847,
        ce => ap_const_logic_1,
        dout => grp_fu_3007_p2);

    min_sum_dec_fadd_bdk_U39 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_4_reg_9943,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865,
        ce => ap_const_logic_1,
        dout => grp_fu_3012_p2);

    min_sum_dec_fadd_bdk_U40 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_4_1_reg_9948,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3304,
        ce => ap_const_logic_1,
        dout => grp_fu_3017_p2);

    min_sum_dec_fadd_bdk_U41 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_4_2_reg_9953,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859,
        ce => ap_const_logic_1,
        dout => grp_fu_3022_p2);

    min_sum_dec_fadd_bdk_U42 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_5_reg_9958,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877,
        ce => ap_const_logic_1,
        dout => grp_fu_3027_p2);

    min_sum_dec_fadd_bdk_U43 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_5_1_reg_9963,
        din1 => ap_pipeline_reg_pp1_iter4_reg_3311,
        ce => ap_const_logic_1,
        dout => grp_fu_3032_p2);

    min_sum_dec_fadd_bdk_U44 : component min_sum_dec_fadd_bdk
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_94_5_2_reg_9968,
        din1 => ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871,
        ce => ap_const_logic_1,
        dout => grp_fu_3037_p2);

    min_sum_dec_fmul_bek_U45 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_0_lo_reg_8672,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3060_p2);

    min_sum_dec_fmul_bek_U46 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_1_lo_reg_8677,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3065_p2);

    min_sum_dec_fmul_bek_U47 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_2_lo_reg_8682,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3070_p2);

    min_sum_dec_fmul_bek_U48 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_3_lo_reg_8687,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3075_p2);

    min_sum_dec_fmul_bek_U49 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_4_lo_reg_8692,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3080_p2);

    min_sum_dec_fmul_bek_U50 : component min_sum_dec_fmul_bek
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => noisy_input_vec_5_lo_reg_8697,
        din1 => ap_const_lv32_C0000000,
        ce => ap_const_logic_1,
        dout => grp_fu_3085_p2);

    min_sum_dec_fdiv_bfk_U51 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_10_reg_8702,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3090_p2);

    min_sum_dec_fdiv_bfk_U52 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_32_1_reg_8707,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3094_p2);

    min_sum_dec_fdiv_bfk_U53 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_32_2_reg_8712,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3098_p2);

    min_sum_dec_fdiv_bfk_U54 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_32_3_reg_8717,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3102_p2);

    min_sum_dec_fdiv_bfk_U55 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_32_4_reg_8722,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3106_p2);

    min_sum_dec_fdiv_bfk_U56 : component min_sum_dec_fdiv_bfk
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_32_5_reg_8727,
        din1 => variance,
        ce => ap_const_logic_1,
        dout => grp_fu_3110_p2);

    min_sum_dec_fcmp_bgk_U57 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3114_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3114_p2);

    min_sum_dec_fcmp_bgk_U58 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3120_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3120_p2);

    min_sum_dec_fcmp_bgk_U59 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3126_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3126_p2);

    min_sum_dec_fcmp_bgk_U60 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3132_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3132_p2);

    min_sum_dec_fcmp_bgk_U61 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3138_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3138_p2);

    min_sum_dec_fcmp_bgk_U62 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_3144_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => grp_fu_3144_p2);

    min_sum_dec_fcmp_bgk_U63 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_1_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_128_fu_3150_p2);

    min_sum_dec_fcmp_bgk_U64 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_2_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_133_fu_3156_p2);

    min_sum_dec_fcmp_bgk_U65 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_3_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_138_fu_3162_p2);

    min_sum_dec_fcmp_bgk_U66 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_4_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_143_fu_3168_p2);

    min_sum_dec_fcmp_bgk_U67 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_5_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_148_fu_3174_p2);

    min_sum_dec_fcmp_bgk_U68 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_1_0_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_154_fu_3180_p2);

    min_sum_dec_fcmp_bgk_U69 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_1_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_166_fu_3186_p2);

    min_sum_dec_fcmp_bgk_U70 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_2_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_171_fu_3192_p2);

    min_sum_dec_fcmp_bgk_U71 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_3_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_176_fu_3198_p2);

    min_sum_dec_fcmp_bgk_U72 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_4_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_181_fu_3204_p2);

    min_sum_dec_fcmp_bgk_U73 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_5_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_186_fu_3210_p2);

    min_sum_dec_fcmp_bgk_U74 : component min_sum_dec_fcmp_bgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => var2chk_2_0_dram_q0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_4,
        dout => tmp_192_fu_3216_p2);

    min_sum_dec_mux_6bhl_U75 : component min_sum_dec_mux_6bhl
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din1 => hard_dec_tmp_0_V_q1,
        din2 => hard_dec_tmp_1_V_q1,
        din3 => hard_dec_tmp_2_V_q1,
        din4 => hard_dec_tmp_3_V_q0,
        din5 => hard_dec_tmp_4_V_q1,
        din6 => hard_dec_tmp_5_V_q1,
        din7 => idx_0_i1_reg_2380,
        dout => tmp_156_fu_8430_p8);

    min_sum_dec_mux_6bil_U76 : component min_sum_dec_mux_6bil
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din1 => soft_dec_tmp_0_q0,
        din2 => soft_dec_tmp_1_q0,
        din3 => soft_dec_tmp_2_q0,
        din4 => soft_dec_tmp_3_q0,
        din5 => soft_dec_tmp_4_q0,
        din6 => soft_dec_tmp_5_q0,
        din7 => idx_1_i_reg_2414,
        dout => tmp_157_fu_8503_p8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = tmp_17_fu_4107_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state30) and (ap_const_lv1_0 = tmp_15_fu_4095_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = tmp_17_fu_4107_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state30) and (ap_const_lv1_0 = tmp_15_fu_4095_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = tmp_17_fu_4107_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = tmp_20_fu_6553_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = tmp_20_fu_6553_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((ap_const_lv1_0 = tmp_20_fu_6553_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
            end if;
        end if;
    end process;


    ap_reg_ioackin_hard_dec_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_hard_dec_out_AWREADY <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state61) and (ap_const_lv1_0 = tmp_36_fu_8385_p2))) then
                    if (not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY)))) then 
                        ap_reg_ioackin_hard_dec_out_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = hard_dec_out_AWREADY)) then 
                        ap_reg_ioackin_hard_dec_out_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_hard_dec_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_hard_dec_out_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_state64)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_WREADY))) then 
                        ap_reg_ioackin_hard_dec_out_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = hard_dec_out_WREADY)) then 
                        ap_reg_ioackin_hard_dec_out_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_noisy_input_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_noisy_input_ARREADY <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (tmp_2_fu_3706_p2 = ap_const_lv1_0))) then
                    if (not(((tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_noisy_input_ARREADY)))) then 
                        ap_reg_ioackin_noisy_input_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = noisy_input_ARREADY)) then 
                        ap_reg_ioackin_noisy_input_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_soft_dec_out_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_soft_dec_out_AWREADY <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state69) and (ap_const_lv1_0 = tmp_38_fu_8458_p2))) then
                    if (not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY)))) then 
                        ap_reg_ioackin_soft_dec_out_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = soft_dec_out_AWREADY)) then 
                        ap_reg_ioackin_soft_dec_out_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_soft_dec_out_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_soft_dec_out_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_state72)) then
                    if (not((ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_WREADY))) then 
                        ap_reg_ioackin_soft_dec_out_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = soft_dec_out_WREADY)) then 
                        ap_reg_ioackin_soft_dec_out_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    i_assign_1_reg_2301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
                i_assign_1_reg_2301 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = tmp_20_fu_6553_p2))) then 
                i_assign_1_reg_2301 <= idx_5_fu_6559_p2;
            end if; 
        end if;
    end process;

    i_assign_2_reg_2289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30) and (ap_const_lv1_0 = tmp_15_fu_4095_p2))) then 
                i_assign_2_reg_2289 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_17_reg_9003))) then 
                i_assign_2_reg_2289 <= idx_15_reg_9007;
            end if; 
        end if;
    end process;

    i_assign_reg_2312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state47))) then 
                i_assign_reg_2312 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
                i_assign_reg_2312 <= idx_6_reg_9976;
            end if; 
        end if;
    end process;

    idx_0_i1_reg_2380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state68) and not((hard_dec_out_BVALID = ap_const_logic_0)))) then 
                idx_0_i1_reg_2380 <= idx_13_reg_10336;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state59) and (not((ap_const_lv1_0 = tmp_15_reg_8994)) or (not((ap_const_lv1_0 = tmp_34_fu_8342_p2)) and not((ap_const_lv1_0 = p_1_phi_fu_2361_p4)))))) then 
                idx_0_i1_reg_2380 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    idx_0_i_reg_2210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_s_fu_3318_p2)))) then 
                idx_0_i_reg_2210 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))) and not((ap_const_lv1_0 = tmp_9_fu_3729_p2)))) then 
                idx_0_i_reg_2210 <= idx_3_reg_8555;
            end if; 
        end if;
    end process;

    idx_1_i_reg_2414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61) and not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_36_fu_8385_p2)))) then 
                idx_1_i_reg_2414 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state76) and not((soft_dec_out_BVALID = ap_const_logic_0)))) then 
                idx_1_i_reg_2414 <= idx_14_reg_10397;
            end if; 
        end if;
    end process;

    idx_2_reg_2255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not((ap_const_lv1_0 = tmp_8_fu_3751_p2)))) then 
                idx_2_reg_2255 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and not((ap_const_lv1_0 = tmp_16_fu_4083_p2)))) then 
                idx_2_reg_2255 <= idx_4_reg_8765;
            end if; 
        end if;
    end process;

    idx_7_reg_2334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53) and not((ap_const_lv1_0 = tmp_28_fu_7421_p2)))) then 
                idx_7_reg_2334 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state55) and (ap_const_lv1_0 = tmp_30_fu_7701_p2))) then 
                idx_7_reg_2334 <= idx_10_fu_7707_p2;
            end if; 
        end if;
    end process;

    idx_8_reg_2345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state55) and not((ap_const_lv1_0 = tmp_30_fu_7701_p2)))) then 
                idx_8_reg_2345 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
                idx_8_reg_2345 <= idx_11_reg_10155;
            end if; 
        end if;
    end process;

    idx_9_reg_2369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not((ap_const_lv1_0 = tmp_32_fu_7724_p2)))) then 
                idx_9_reg_2369 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state60))) then 
                idx_9_reg_2369 <= idx_12_reg_10303;
            end if; 
        end if;
    end process;

    idx_reg_2186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_lv1_0 = tmp_3_fu_3360_p2)))) then 
                idx_reg_2186 <= idx_1_reg_8524;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                idx_reg_2186 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    jdx_0_i1_reg_2403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61) and (ap_const_lv1_0 = tmp_36_fu_8385_p2) and not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))))) then 
                jdx_0_i1_reg_2403 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state64) and not((ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_WREADY)))) then 
                jdx_0_i1_reg_2403 <= jdx_9_reg_10349;
            end if; 
        end if;
    end process;

    jdx_0_i_reg_2233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
                jdx_0_i_reg_2233 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
                jdx_0_i_reg_2233 <= jdx_6_reg_8579;
            end if; 
        end if;
    end process;

    jdx_1_i_reg_2437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state69) and (ap_const_lv1_0 = tmp_38_fu_8458_p2) and not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))))) then 
                jdx_1_i_reg_2437 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state72) and not((ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_WREADY)))) then 
                jdx_1_i_reg_2437 <= jdx_10_reg_10410;
            end if; 
        end if;
    end process;

    jdx_1_reg_2244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not(((tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_noisy_input_ARREADY))) and not((tmp_2_fu_3706_p2 = ap_const_lv1_0)))) then 
                jdx_1_reg_2244 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
                jdx_1_reg_2244 <= jdx_3_reg_8627;
            end if; 
        end if;
    end process;

    jdx_2_reg_2267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                jdx_2_reg_2267 <= ap_const_lv2_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
                jdx_2_reg_2267 <= jdx_4_fu_4089_p2;
            end if; 
        end if;
    end process;

    jdx_5_reg_2323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state48) and not((ap_const_lv1_0 = tmp_23_fu_7195_p2)))) then 
                jdx_5_reg_2323 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
                jdx_5_reg_2323 <= jdx_7_reg_10084;
            end if; 
        end if;
    end process;

    jdx_reg_2198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_s_fu_3318_p2))) then 
                jdx_reg_2198 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                jdx_reg_2198 <= jdx_8_reg_8537;
            end if; 
        end if;
    end process;

    n_iter_reg_2278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state59) and (ap_const_lv1_0 = tmp_15_reg_8994) and (ap_const_lv1_0 = p_1_phi_fu_2361_p4) and not((ap_const_lv1_0 = tmp_34_fu_8342_p2)))) then 
                n_iter_reg_2278 <= n_iter_1_reg_8998;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state27) and not((ap_const_lv1_0 = tmp_13_fu_3773_p2)))) then 
                n_iter_reg_2278 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_1_reg_2357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not((ap_const_lv1_0 = tmp_32_fu_7724_p2)))) then 
                p_1_reg_2357 <= ap_const_lv1_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state60))) then 
                p_1_reg_2357 <= done_V_2_fu_8373_p2;
            end if; 
        end if;
    end process;

    phi_mul7_reg_2392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state68) and not((hard_dec_out_BVALID = ap_const_logic_0)))) then 
                phi_mul7_reg_2392 <= next_mul8_reg_10328;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state59) and (not((ap_const_lv1_0 = tmp_15_reg_8994)) or (not((ap_const_lv1_0 = tmp_34_fu_8342_p2)) and not((ap_const_lv1_0 = p_1_phi_fu_2361_p4)))))) then 
                phi_mul7_reg_2392 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    phi_mul9_reg_2426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61) and not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_36_fu_8385_p2)))) then 
                phi_mul9_reg_2426 <= ap_const_lv10_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state76) and not((soft_dec_out_BVALID = ap_const_logic_0)))) then 
                phi_mul9_reg_2426 <= next_mul1_reg_10389;
            end if; 
        end if;
    end process;

    phi_mul_reg_2222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_s_fu_3318_p2)))) then 
                phi_mul_reg_2222 <= ap_const_lv10_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))) and not((ap_const_lv1_0 = tmp_9_fu_3729_p2)))) then 
                phi_mul_reg_2222 <= next_mul_reg_8547;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289 <= i_assign_2_reg_2289;
                sign_product_0_1_reg_9136 <= sign_product_0_1_fu_5053_p2;
                sign_product_0_2_reg_9140 <= sign_product_0_2_fu_5077_p2;
                sign_product_0_3_reg_9144 <= sign_product_0_3_fu_5089_p2;
                sign_product_0_4_reg_9148 <= sign_product_0_4_fu_5101_p2;
                sign_product_0_5_reg_9152 <= sign_product_0_5_fu_5113_p2;
                sign_product_1_1_reg_9190 <= sign_product_1_1_fu_5437_p2;
                sign_product_1_2_reg_9194 <= sign_product_1_2_fu_5461_p2;
                sign_product_1_3_reg_9198 <= sign_product_1_3_fu_5473_p2;
                sign_product_1_4_reg_9202 <= sign_product_1_4_fu_5485_p2;
                sign_product_1_5_reg_9206 <= sign_product_1_5_fu_5497_p2;
                sign_product_1_reg_9181 <= sign_product_1_fu_5367_p2;
                sign_product_2_1_reg_9244 <= sign_product_2_1_fu_5821_p2;
                sign_product_2_2_reg_9248 <= sign_product_2_2_fu_5845_p2;
                sign_product_2_3_reg_9252 <= sign_product_2_3_fu_5857_p2;
                sign_product_2_4_reg_9256 <= sign_product_2_4_fu_5869_p2;
                sign_product_2_5_reg_9260 <= sign_product_2_5_fu_5881_p2;
                sign_product_2_reg_9235 <= sign_product_2_fu_5751_p2;
                sign_product_reg_9127 <= sign_product_fu_4983_p2;
                tmp_122_reg_9102 <= tmp_122_fu_4739_p1;
                tmp_123_reg_9107 <= tmp_123_fu_4747_p1;
                tmp_124_reg_9112 <= tmp_124_fu_4755_p1;
                tmp_126_reg_9117 <= tmp_126_fu_4763_p1;
                tmp_131_reg_9122 <= tmp_131_fu_4771_p1;
                tmp_158_reg_9131 <= tmp_158_fu_4993_p1;
                tmp_17_reg_9003 <= tmp_17_fu_4107_p2;
                tmp_222_reg_9156 <= tmp_222_fu_5123_p1;
                tmp_223_reg_9161 <= tmp_223_fu_5131_p1;
                tmp_224_reg_9166 <= tmp_224_fu_5139_p1;
                tmp_225_reg_9171 <= tmp_225_fu_5147_p1;
                tmp_226_reg_9176 <= tmp_226_fu_5155_p1;
                tmp_232_reg_9185 <= tmp_232_fu_5377_p1;
                tmp_236_reg_9210 <= tmp_236_fu_5507_p1;
                tmp_237_reg_9215 <= tmp_237_fu_5515_p1;
                tmp_238_reg_9220 <= tmp_238_fu_5523_p1;
                tmp_239_reg_9225 <= tmp_239_fu_5531_p1;
                tmp_240_reg_9230 <= tmp_240_fu_5539_p1;
                tmp_246_reg_9239 <= tmp_246_fu_5761_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter1_i_assign_2_reg_2289;
                ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136 <= sign_product_0_1_reg_9136;
                ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140 <= sign_product_0_2_reg_9140;
                ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144 <= sign_product_0_3_reg_9144;
                ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148 <= sign_product_0_4_reg_9148;
                ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152 <= sign_product_0_5_reg_9152;
                ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190 <= sign_product_1_1_reg_9190;
                ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194 <= sign_product_1_2_reg_9194;
                ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198 <= sign_product_1_3_reg_9198;
                ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202 <= sign_product_1_4_reg_9202;
                ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206 <= sign_product_1_5_reg_9206;
                ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181 <= sign_product_1_reg_9181;
                ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244 <= sign_product_2_1_reg_9244;
                ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248 <= sign_product_2_2_reg_9248;
                ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252 <= sign_product_2_3_reg_9252;
                ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256 <= sign_product_2_4_reg_9256;
                ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260 <= sign_product_2_5_reg_9260;
                ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235 <= sign_product_2_reg_9235;
                ap_pipeline_reg_pp0_iter2_sign_product_reg_9127 <= sign_product_reg_9127;
                ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter2_i_assign_2_reg_2289;
                ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136 <= ap_pipeline_reg_pp0_iter2_sign_product_0_1_reg_9136;
                ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140 <= ap_pipeline_reg_pp0_iter2_sign_product_0_2_reg_9140;
                ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144 <= ap_pipeline_reg_pp0_iter2_sign_product_0_3_reg_9144;
                ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148 <= ap_pipeline_reg_pp0_iter2_sign_product_0_4_reg_9148;
                ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152 <= ap_pipeline_reg_pp0_iter2_sign_product_0_5_reg_9152;
                ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190 <= ap_pipeline_reg_pp0_iter2_sign_product_1_1_reg_9190;
                ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194 <= ap_pipeline_reg_pp0_iter2_sign_product_1_2_reg_9194;
                ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198 <= ap_pipeline_reg_pp0_iter2_sign_product_1_3_reg_9198;
                ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202 <= ap_pipeline_reg_pp0_iter2_sign_product_1_4_reg_9202;
                ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206 <= ap_pipeline_reg_pp0_iter2_sign_product_1_5_reg_9206;
                ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181 <= ap_pipeline_reg_pp0_iter2_sign_product_1_reg_9181;
                ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244 <= ap_pipeline_reg_pp0_iter2_sign_product_2_1_reg_9244;
                ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248 <= ap_pipeline_reg_pp0_iter2_sign_product_2_2_reg_9248;
                ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252 <= ap_pipeline_reg_pp0_iter2_sign_product_2_3_reg_9252;
                ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256 <= ap_pipeline_reg_pp0_iter2_sign_product_2_4_reg_9256;
                ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260 <= ap_pipeline_reg_pp0_iter2_sign_product_2_5_reg_9260;
                ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235 <= ap_pipeline_reg_pp0_iter2_sign_product_2_reg_9235;
                ap_pipeline_reg_pp0_iter3_sign_product_reg_9127 <= ap_pipeline_reg_pp0_iter2_sign_product_reg_9127;
                    ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330(30 downto 0) <= x_assign_10_reg_9330(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346(30 downto 0) <= x_assign_12_reg_9346(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396(30 downto 0) <= x_assign_20_reg_9396(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412(30 downto 0) <= x_assign_22_reg_9412(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280(30 downto 0) <= x_assign_2_reg_9280(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264(30 downto 0) <= x_assign_s_reg_9264(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362(30 downto 0) <= y_assign_10_reg_9362(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379(30 downto 0) <= y_assign_12_reg_9379(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401(30 downto 0) <= y_assign_15_reg_9401(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417(30 downto 0) <= y_assign_16_reg_9417(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428(30 downto 0) <= y_assign_18_reg_9428(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296(30 downto 0) <= y_assign_1_reg_9296(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445(30 downto 0) <= y_assign_20_reg_9445(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313(30 downto 0) <= y_assign_3_reg_9313(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335(30 downto 0) <= y_assign_6_reg_9335(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351(30 downto 0) <= y_assign_7_reg_9351(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269(30 downto 0) <= y_assign_9_reg_9269(30 downto 0);
                    ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285(30 downto 0) <= y_assign_s_reg_9285(30 downto 0);
                ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289 <= ap_pipeline_reg_pp0_iter3_i_assign_2_reg_2289;
                ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136 <= ap_pipeline_reg_pp0_iter3_sign_product_0_1_reg_9136;
                ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140 <= ap_pipeline_reg_pp0_iter3_sign_product_0_2_reg_9140;
                ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144 <= ap_pipeline_reg_pp0_iter3_sign_product_0_3_reg_9144;
                ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148 <= ap_pipeline_reg_pp0_iter3_sign_product_0_4_reg_9148;
                ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152 <= ap_pipeline_reg_pp0_iter3_sign_product_0_5_reg_9152;
                ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190 <= ap_pipeline_reg_pp0_iter3_sign_product_1_1_reg_9190;
                ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194 <= ap_pipeline_reg_pp0_iter3_sign_product_1_2_reg_9194;
                ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198 <= ap_pipeline_reg_pp0_iter3_sign_product_1_3_reg_9198;
                ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202 <= ap_pipeline_reg_pp0_iter3_sign_product_1_4_reg_9202;
                ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206 <= ap_pipeline_reg_pp0_iter3_sign_product_1_5_reg_9206;
                ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181 <= ap_pipeline_reg_pp0_iter3_sign_product_1_reg_9181;
                ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244 <= ap_pipeline_reg_pp0_iter3_sign_product_2_1_reg_9244;
                ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248 <= ap_pipeline_reg_pp0_iter3_sign_product_2_2_reg_9248;
                ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252 <= ap_pipeline_reg_pp0_iter3_sign_product_2_3_reg_9252;
                ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256 <= ap_pipeline_reg_pp0_iter3_sign_product_2_4_reg_9256;
                ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260 <= ap_pipeline_reg_pp0_iter3_sign_product_2_5_reg_9260;
                ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235 <= ap_pipeline_reg_pp0_iter3_sign_product_2_reg_9235;
                ap_pipeline_reg_pp0_iter4_sign_product_reg_9127 <= ap_pipeline_reg_pp0_iter3_sign_product_reg_9127;
                ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811 <= chk2var_1_0_dram_l_reg_9811;
                ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823 <= chk2var_1_1_dram_l_reg_9823;
                ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835 <= chk2var_1_2_dram_l_reg_9835;
                ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847 <= chk2var_1_3_dram_l_reg_9847;
                ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859 <= chk2var_1_4_dram_l_reg_9859;
                ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871 <= chk2var_1_5_dram_l_reg_9871;
                ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817 <= chk2var_2_0_dram_l_reg_9817;
                ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829 <= chk2var_2_1_dram_l_reg_9829;
                ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841 <= chk2var_2_2_dram_l_reg_9841;
                ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853 <= chk2var_2_3_dram_l_reg_9853;
                ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865 <= chk2var_2_4_dram_l_reg_9865;
                ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877 <= chk2var_2_5_dram_l_reg_9877;
                ap_pipeline_reg_pp1_iter2_reg_3276 <= reg_3276;
                ap_pipeline_reg_pp1_iter2_reg_3283 <= reg_3283;
                ap_pipeline_reg_pp1_iter2_reg_3290 <= reg_3290;
                ap_pipeline_reg_pp1_iter2_reg_3297 <= reg_3297;
                ap_pipeline_reg_pp1_iter2_reg_3304 <= reg_3304;
                ap_pipeline_reg_pp1_iter2_reg_3311 <= reg_3311;
                ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669(7 downto 0);
                ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811 <= ap_pipeline_reg_pp1_iter2_chk2var_1_0_dram_l_reg_9811;
                ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823 <= ap_pipeline_reg_pp1_iter2_chk2var_1_1_dram_l_reg_9823;
                ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835 <= ap_pipeline_reg_pp1_iter2_chk2var_1_2_dram_l_reg_9835;
                ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847 <= ap_pipeline_reg_pp1_iter2_chk2var_1_3_dram_l_reg_9847;
                ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859 <= ap_pipeline_reg_pp1_iter2_chk2var_1_4_dram_l_reg_9859;
                ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871 <= ap_pipeline_reg_pp1_iter2_chk2var_1_5_dram_l_reg_9871;
                ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817 <= ap_pipeline_reg_pp1_iter2_chk2var_2_0_dram_l_reg_9817;
                ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829 <= ap_pipeline_reg_pp1_iter2_chk2var_2_1_dram_l_reg_9829;
                ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841 <= ap_pipeline_reg_pp1_iter2_chk2var_2_2_dram_l_reg_9841;
                ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853 <= ap_pipeline_reg_pp1_iter2_chk2var_2_3_dram_l_reg_9853;
                ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865 <= ap_pipeline_reg_pp1_iter2_chk2var_2_4_dram_l_reg_9865;
                ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877 <= ap_pipeline_reg_pp1_iter2_chk2var_2_5_dram_l_reg_9877;
                ap_pipeline_reg_pp1_iter3_reg_3276 <= ap_pipeline_reg_pp1_iter2_reg_3276;
                ap_pipeline_reg_pp1_iter3_reg_3283 <= ap_pipeline_reg_pp1_iter2_reg_3283;
                ap_pipeline_reg_pp1_iter3_reg_3290 <= ap_pipeline_reg_pp1_iter2_reg_3290;
                ap_pipeline_reg_pp1_iter3_reg_3297 <= ap_pipeline_reg_pp1_iter2_reg_3297;
                ap_pipeline_reg_pp1_iter3_reg_3304 <= ap_pipeline_reg_pp1_iter2_reg_3304;
                ap_pipeline_reg_pp1_iter3_reg_3311 <= ap_pipeline_reg_pp1_iter2_reg_3311;
                ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter2_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669(7 downto 0);
                ap_pipeline_reg_pp1_iter4_chk2var_1_0_dram_l_reg_9811 <= ap_pipeline_reg_pp1_iter3_chk2var_1_0_dram_l_reg_9811;
                ap_pipeline_reg_pp1_iter4_chk2var_1_1_dram_l_reg_9823 <= ap_pipeline_reg_pp1_iter3_chk2var_1_1_dram_l_reg_9823;
                ap_pipeline_reg_pp1_iter4_chk2var_1_2_dram_l_reg_9835 <= ap_pipeline_reg_pp1_iter3_chk2var_1_2_dram_l_reg_9835;
                ap_pipeline_reg_pp1_iter4_chk2var_1_3_dram_l_reg_9847 <= ap_pipeline_reg_pp1_iter3_chk2var_1_3_dram_l_reg_9847;
                ap_pipeline_reg_pp1_iter4_chk2var_1_4_dram_l_reg_9859 <= ap_pipeline_reg_pp1_iter3_chk2var_1_4_dram_l_reg_9859;
                ap_pipeline_reg_pp1_iter4_chk2var_1_5_dram_l_reg_9871 <= ap_pipeline_reg_pp1_iter3_chk2var_1_5_dram_l_reg_9871;
                ap_pipeline_reg_pp1_iter4_chk2var_2_0_dram_l_reg_9817 <= ap_pipeline_reg_pp1_iter3_chk2var_2_0_dram_l_reg_9817;
                ap_pipeline_reg_pp1_iter4_chk2var_2_1_dram_l_reg_9829 <= ap_pipeline_reg_pp1_iter3_chk2var_2_1_dram_l_reg_9829;
                ap_pipeline_reg_pp1_iter4_chk2var_2_2_dram_l_reg_9841 <= ap_pipeline_reg_pp1_iter3_chk2var_2_2_dram_l_reg_9841;
                ap_pipeline_reg_pp1_iter4_chk2var_2_3_dram_l_reg_9853 <= ap_pipeline_reg_pp1_iter3_chk2var_2_3_dram_l_reg_9853;
                ap_pipeline_reg_pp1_iter4_chk2var_2_4_dram_l_reg_9865 <= ap_pipeline_reg_pp1_iter3_chk2var_2_4_dram_l_reg_9865;
                ap_pipeline_reg_pp1_iter4_chk2var_2_5_dram_l_reg_9877 <= ap_pipeline_reg_pp1_iter3_chk2var_2_5_dram_l_reg_9877;
                ap_pipeline_reg_pp1_iter4_reg_3276 <= ap_pipeline_reg_pp1_iter3_reg_3276;
                ap_pipeline_reg_pp1_iter4_reg_3283 <= ap_pipeline_reg_pp1_iter3_reg_3283;
                ap_pipeline_reg_pp1_iter4_reg_3290 <= ap_pipeline_reg_pp1_iter3_reg_3290;
                ap_pipeline_reg_pp1_iter4_reg_3297 <= ap_pipeline_reg_pp1_iter3_reg_3297;
                ap_pipeline_reg_pp1_iter4_reg_3304 <= ap_pipeline_reg_pp1_iter3_reg_3304;
                ap_pipeline_reg_pp1_iter4_reg_3311 <= ap_pipeline_reg_pp1_iter3_reg_3311;
                ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669(7 downto 0);
                ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter4_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669(7 downto 0);
                ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter5_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669(7 downto 0);
                ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660 <= ap_pipeline_reg_pp1_iter6_tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(7 downto 0) <= ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669(7 downto 0);
                tmp_i10_reg_9612 <= tmp_i10_fminf_fu_2724_ap_return;
                tmp_i11_reg_9618 <= tmp_i11_fminf_fu_2730_ap_return;
                tmp_i12_reg_9624 <= tmp_i12_fminf_fu_2736_ap_return;
                tmp_i13_reg_9630 <= tmp_i13_fminf_fu_2742_ap_return;
                tmp_i14_reg_9636 <= tmp_i14_fminf_fu_2748_ap_return;
                tmp_i15_reg_9642 <= tmp_i15_fminf_fu_2754_ap_return;
                tmp_i16_reg_9648 <= tmp_i16_fminf_fu_2760_ap_return;
                tmp_i17_reg_9654 <= tmp_i17_fminf_fu_2766_ap_return;
                tmp_i1_reg_9570 <= tmp_i1_fminf_fu_2682_ap_return;
                tmp_i2_reg_9576 <= tmp_i2_fminf_fu_2688_ap_return;
                tmp_i3_reg_9582 <= tmp_i3_fminf_fu_2694_ap_return;
                tmp_i4_reg_9588 <= tmp_i4_fminf_fu_2700_ap_return;
                tmp_i5_reg_9558 <= tmp_i5_fminf_fu_2670_ap_return;
                tmp_i6_reg_9594 <= tmp_i6_fminf_fu_2706_ap_return;
                tmp_i7_reg_9600 <= tmp_i7_fminf_fu_2712_ap_return;
                tmp_i8_reg_9564 <= tmp_i8_fminf_fu_2676_ap_return;
                tmp_i9_reg_9606 <= tmp_i9_fminf_fu_2718_ap_return;
                tmp_i_reg_9552 <= tmp_i_fminf_fu_2664_ap_return;
                    x_assign_10_reg_9330(30 downto 0) <= x_assign_10_fu_5972_p1(30 downto 0);
                x_assign_11_reg_9340 <= x_assign_11_fminf_fu_2484_ap_return;
                    x_assign_12_reg_9346(30 downto 0) <= x_assign_12_fu_5998_p1(30 downto 0);
                x_assign_13_reg_9492 <= x_assign_13_fminf_fu_2592_ap_return;
                x_assign_14_reg_9367 <= x_assign_14_fminf_fu_2496_ap_return;
                x_assign_15_reg_9497 <= x_assign_15_fminf_fu_2598_ap_return;
                x_assign_16_reg_9502 <= x_assign_16_fminf_fu_2604_ap_return;
                x_assign_17_reg_9507 <= x_assign_17_fminf_fu_2610_ap_return;
                x_assign_18_reg_9512 <= x_assign_18_fminf_fu_2616_ap_return;
                x_assign_19_reg_9517 <= x_assign_19_fminf_fu_2622_ap_return;
                x_assign_1_reg_9274 <= x_assign_1_fminf_fu_2448_ap_return;
                    x_assign_20_reg_9396(30 downto 0) <= x_assign_20_fu_6050_p1(30 downto 0);
                x_assign_21_reg_9406 <= x_assign_21_fminf_fu_2520_ap_return;
                    x_assign_22_reg_9412(30 downto 0) <= x_assign_22_fu_6076_p1(30 downto 0);
                x_assign_23_reg_9522 <= x_assign_23_fminf_fu_2628_ap_return;
                x_assign_24_reg_9433 <= x_assign_24_fminf_fu_2532_ap_return;
                x_assign_25_reg_9527 <= x_assign_25_fminf_fu_2634_ap_return;
                x_assign_26_reg_9532 <= x_assign_26_fminf_fu_2640_ap_return;
                x_assign_27_reg_9537 <= x_assign_27_fminf_fu_2646_ap_return;
                x_assign_28_reg_9542 <= x_assign_28_fminf_fu_2652_ap_return;
                x_assign_29_reg_9547 <= x_assign_29_fminf_fu_2658_ap_return;
                    x_assign_2_reg_9280(30 downto 0) <= x_assign_2_fu_5920_p1(30 downto 0);
                x_assign_3_reg_9301 <= x_assign_3_fminf_fu_2460_ap_return;
                x_assign_4_reg_9467 <= x_assign_4_fminf_fu_2562_ap_return;
                x_assign_5_reg_9472 <= x_assign_5_fminf_fu_2568_ap_return;
                x_assign_6_reg_9462 <= x_assign_6_fminf_fu_2556_ap_return;
                x_assign_7_reg_9477 <= x_assign_7_fminf_fu_2574_ap_return;
                x_assign_8_reg_9482 <= x_assign_8_fminf_fu_2580_ap_return;
                x_assign_9_reg_9487 <= x_assign_9_fminf_fu_2586_ap_return;
                    x_assign_s_reg_9264(30 downto 0) <= x_assign_s_fu_5894_p1(30 downto 0);
                    y_assign_10_reg_9362(30 downto 0) <= y_assign_10_fu_6024_p1(30 downto 0);
                y_assign_11_reg_9373 <= y_assign_11_fminf_fu_2502_ap_return;
                    y_assign_12_reg_9379(30 downto 0) <= y_assign_12_fu_6037_p1(30 downto 0);
                y_assign_13_reg_9384 <= y_assign_13_fminf_fu_2508_ap_return;
                y_assign_14_reg_9390 <= y_assign_14_fminf_fu_2514_ap_return;
                    y_assign_15_reg_9401(30 downto 0) <= y_assign_15_fu_6063_p1(30 downto 0);
                    y_assign_16_reg_9417(30 downto 0) <= y_assign_16_fu_6089_p1(30 downto 0);
                y_assign_17_reg_9422 <= y_assign_17_fminf_fu_2526_ap_return;
                    y_assign_18_reg_9428(30 downto 0) <= y_assign_18_fu_6102_p1(30 downto 0);
                y_assign_19_reg_9439 <= y_assign_19_fminf_fu_2538_ap_return;
                    y_assign_1_reg_9296(30 downto 0) <= y_assign_1_fu_5946_p1(30 downto 0);
                    y_assign_20_reg_9445(30 downto 0) <= y_assign_20_fu_6115_p1(30 downto 0);
                y_assign_21_reg_9450 <= y_assign_21_fminf_fu_2544_ap_return;
                y_assign_22_reg_9456 <= y_assign_22_fminf_fu_2550_ap_return;
                y_assign_2_reg_9307 <= y_assign_2_fminf_fu_2466_ap_return;
                    y_assign_3_reg_9313(30 downto 0) <= y_assign_3_fu_5959_p1(30 downto 0);
                y_assign_4_reg_9318 <= y_assign_4_fminf_fu_2472_ap_return;
                y_assign_5_reg_9324 <= y_assign_5_fminf_fu_2478_ap_return;
                    y_assign_6_reg_9335(30 downto 0) <= y_assign_6_fu_5985_p1(30 downto 0);
                    y_assign_7_reg_9351(30 downto 0) <= y_assign_7_fu_6011_p1(30 downto 0);
                y_assign_8_reg_9356 <= y_assign_8_fminf_fu_2490_ap_return;
                    y_assign_9_reg_9269(30 downto 0) <= y_assign_9_fu_5907_p1(30 downto 0);
                y_assign_reg_9290 <= y_assign_fminf_fu_2454_ap_return;
                    y_assign_s_reg_9285(30 downto 0) <= y_assign_s_fu_5933_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0))) then
                ap_pipeline_reg_pp1_iter1_tmp_20_reg_9660 <= tmp_20_reg_9660;
                    ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669(7 downto 0) <= tmp_22_reg_9669(7 downto 0);
                tmp_20_reg_9660 <= tmp_20_fu_6553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = tmp_20_reg_9660))) then
                chk2var_1_0_dram_l_reg_9811 <= chk2var_1_0_dram_q0;
                chk2var_1_1_dram_l_reg_9823 <= chk2var_1_1_dram_q0;
                chk2var_1_2_dram_l_reg_9835 <= chk2var_1_2_dram_q0;
                chk2var_1_3_dram_l_reg_9847 <= chk2var_1_3_dram_q0;
                chk2var_1_4_dram_l_reg_9859 <= chk2var_1_4_dram_q0;
                chk2var_1_5_dram_l_reg_9871 <= chk2var_1_5_dram_q0;
                chk2var_2_0_dram_l_reg_9817 <= chk2var_2_0_dram_q0;
                chk2var_2_1_dram_l_reg_9829 <= chk2var_2_1_dram_q0;
                chk2var_2_2_dram_l_reg_9841 <= chk2var_2_2_dram_q0;
                chk2var_2_3_dram_l_reg_9853 <= chk2var_2_3_dram_q0;
                chk2var_2_4_dram_l_reg_9865 <= chk2var_2_4_dram_q0;
                chk2var_2_5_dram_l_reg_9877 <= chk2var_2_5_dram_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and (jdx_reg_2198 = ap_const_lv3_1))) then
                chk2var_shift_idx_0_1 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_1(7 downto 0) <= H_proto_shift_load_c_1_fu_3610_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and (jdx_reg_2198 = ap_const_lv3_2))) then
                chk2var_shift_idx_0_2 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_2(7 downto 0) <= H_proto_shift_load_c_2_fu_3600_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and (jdx_reg_2198 = ap_const_lv3_3))) then
                chk2var_shift_idx_0_3 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_3(7 downto 0) <= H_proto_shift_load_c_3_fu_3590_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and (jdx_reg_2198 = ap_const_lv3_4))) then
                chk2var_shift_idx_0_4 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_4(7 downto 0) <= H_proto_shift_load_c_4_fu_3580_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and not((jdx_reg_2198 = ap_const_lv3_0)) and not((jdx_reg_2198 = ap_const_lv3_1)) and not((jdx_reg_2198 = ap_const_lv3_2)) and not((jdx_reg_2198 = ap_const_lv3_3)) and not((jdx_reg_2198 = ap_const_lv3_4)))) then
                chk2var_shift_idx_0_5 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_5(7 downto 0) <= H_proto_shift_load_c_5_fu_3630_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv2_0 = idx_reg_2186) and (jdx_reg_2198 = ap_const_lv3_0))) then
                chk2var_shift_idx_0_s <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_0_s(7 downto 0) <= H_proto_shift_load_c_fu_3620_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_1) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_1 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_1(7 downto 0) <= H_proto_shift_load_c_7_fu_3550_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_2) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_2 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_2(7 downto 0) <= H_proto_shift_load_c_8_fu_3540_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_3) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_3 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_3(7 downto 0) <= H_proto_shift_load_c_9_fu_3530_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_4) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_4 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_4(7 downto 0) <= H_proto_shift_load_c_10_fu_3520_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((jdx_reg_2198 = ap_const_lv3_0)) and not((jdx_reg_2198 = ap_const_lv3_1)) and not((jdx_reg_2198 = ap_const_lv3_2)) and not((jdx_reg_2198 = ap_const_lv3_3)) and not((jdx_reg_2198 = ap_const_lv3_4)) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_5 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_5(7 downto 0) <= H_proto_shift_load_c_11_fu_3570_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_0) and (idx_reg_2186 = ap_const_lv2_1))) then
                chk2var_shift_idx_1_s <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_1_s(7 downto 0) <= H_proto_shift_load_c_6_fu_3560_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_1) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_1 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_1(7 downto 0) <= H_proto_shift_load_c_13_fu_3670_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_2) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_2 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_2(7 downto 0) <= H_proto_shift_load_c_14_fu_3660_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_3) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_3 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_3(7 downto 0) <= H_proto_shift_load_c_15_fu_3650_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_4) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_4 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_4(7 downto 0) <= H_proto_shift_load_c_16_fu_3640_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((jdx_reg_2198 = ap_const_lv3_0)) and not((jdx_reg_2198 = ap_const_lv3_1)) and not((jdx_reg_2198 = ap_const_lv3_2)) and not((jdx_reg_2198 = ap_const_lv3_3)) and not((jdx_reg_2198 = ap_const_lv3_4)) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_5 <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_5(7 downto 0) <= H_proto_shift_load_c_17_fu_3690_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (jdx_reg_2198 = ap_const_lv3_0) and not((ap_const_lv2_0 = idx_reg_2186)) and not((idx_reg_2186 = ap_const_lv2_1)))) then
                chk2var_shift_idx_2_s <= idx_assign_fu_3404_p3;
                    var2chk_shift_idx_2_s(7 downto 0) <= H_proto_shift_load_c_12_fu_3680_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state27) and not((ap_const_lv1_0 = tmp_13_fu_3773_p2)))) then
                    extLd10_reg_8943(7 downto 0) <= extLd10_fu_4023_p1(7 downto 0);
                    extLd11_reg_8948(7 downto 0) <= extLd11_fu_4031_p1(7 downto 0);
                    extLd12_reg_8954(7 downto 0) <= extLd12_fu_4039_p1(7 downto 0);
                    extLd13_reg_8959(7 downto 0) <= extLd13_fu_4047_p1(7 downto 0);
                    extLd14_reg_8964(7 downto 0) <= extLd14_fu_4055_p1(7 downto 0);
                    extLd15_reg_8970(7 downto 0) <= extLd15_fu_4063_p1(7 downto 0);
                    extLd16_reg_8975(7 downto 0) <= extLd16_fu_4071_p1(7 downto 0);
                    extLd17_reg_8980(7 downto 0) <= extLd17_fu_4079_p1(7 downto 0);
                    extLd1_reg_8890(7 downto 0) <= extLd1_fu_3943_p1(7 downto 0);
                    extLd2_reg_8895(7 downto 0) <= extLd2_fu_3951_p1(7 downto 0);
                    extLd3_reg_8906(7 downto 0) <= extLd3_fu_3967_p1(7 downto 0);
                    extLd4_reg_8911(7 downto 0) <= extLd4_fu_3975_p1(7 downto 0);
                    extLd5_reg_8916(7 downto 0) <= extLd5_fu_3983_p1(7 downto 0);
                    extLd6_reg_8922(7 downto 0) <= extLd6_fu_3991_p1(7 downto 0);
                    extLd7_reg_8927(7 downto 0) <= extLd7_fu_3999_p1(7 downto 0);
                    extLd8_reg_8932(7 downto 0) <= extLd8_fu_4007_p1(7 downto 0);
                    extLd9_reg_8938(7 downto 0) <= extLd9_fu_4015_p1(7 downto 0);
                    extLd_reg_8900(7 downto 0) <= extLd_fu_3959_p1(7 downto 0);
                    tmp_103_reg_8865(7 downto 0) <= tmp_103_fu_3903_p1(7 downto 0);
                    tmp_110_reg_8870(7 downto 0) <= tmp_110_fu_3911_p1(7 downto 0);
                    tmp_115_reg_8875(7 downto 0) <= tmp_115_fu_3919_p1(7 downto 0);
                    tmp_120_reg_8880(7 downto 0) <= tmp_120_fu_3927_p1(7 downto 0);
                    tmp_121_reg_8885(7 downto 0) <= tmp_121_fu_3935_p1(7 downto 0);
                    tmp_42_reg_8800(7 downto 0) <= tmp_42_fu_3799_p1(7 downto 0);
                    tmp_46_reg_8805(7 downto 0) <= tmp_46_fu_3807_p1(7 downto 0);
                    tmp_47_reg_8810(7 downto 0) <= tmp_47_fu_3815_p1(7 downto 0);
                    tmp_49_reg_8815(7 downto 0) <= tmp_49_fu_3823_p1(7 downto 0);
                    tmp_54_reg_8820(7 downto 0) <= tmp_54_fu_3831_p1(7 downto 0);
                    tmp_59_reg_8825(7 downto 0) <= tmp_59_fu_3839_p1(7 downto 0);
                    tmp_64_reg_8830(7 downto 0) <= tmp_64_fu_3847_p1(7 downto 0);
                    tmp_69_reg_8835(7 downto 0) <= tmp_69_fu_3855_p1(7 downto 0);
                    tmp_78_reg_8840(7 downto 0) <= tmp_78_fu_3863_p1(7 downto 0);
                    tmp_80_reg_8845(7 downto 0) <= tmp_80_fu_3871_p1(7 downto 0);
                    tmp_85_reg_8850(7 downto 0) <= tmp_85_fu_3879_p1(7 downto 0);
                    tmp_90_reg_8855(7 downto 0) <= tmp_90_fu_3887_p1(7 downto 0);
                    tmp_98_reg_8860(7 downto 0) <= tmp_98_fu_3895_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then
                hard_dec_tmp_0_V_lo_reg_10200 <= hard_dec_tmp_0_V_q0;
                hard_dec_tmp_1_V_lo_reg_10205 <= hard_dec_tmp_1_V_q0;
                hard_dec_tmp_2_V_lo_reg_10210 <= hard_dec_tmp_2_V_q0;
                hard_dec_tmp_3_V_lo_1_reg_10250 <= hard_dec_tmp_3_V_q1;
                hard_dec_tmp_3_V_lo_reg_10215 <= hard_dec_tmp_3_V_q0;
                hard_dec_tmp_4_V_lo_reg_10220 <= hard_dec_tmp_4_V_q0;
                hard_dec_tmp_5_V_lo_reg_10225 <= hard_dec_tmp_5_V_q0;
                syndrome_0_V_addr_1_reg_10195 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
                syndrome_1_V_addr_1_reg_10230 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
                syndrome_2_V_addr_1_reg_10265 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then
                idx_11_reg_10155 <= idx_11_fu_7730_p2;
                    idx_8_cast_reg_10137(7 downto 0) <= idx_8_cast_fu_7720_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state59) and (ap_const_lv1_0 = tmp_15_reg_8994))) then
                idx_12_reg_10303 <= idx_12_fu_8348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61) and not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))))) then
                idx_13_reg_10336 <= idx_13_fu_8391_p2;
                next_mul8_reg_10328 <= next_mul8_fu_8379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))))) then
                idx_14_reg_10397 <= idx_14_fu_8464_p2;
                next_mul1_reg_10389 <= next_mul1_fu_8452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                idx_15_reg_9007 <= idx_15_fu_4113_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                idx_1_reg_8524 <= idx_1_fu_3324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not(((tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_noisy_input_ARREADY))))) then
                idx_3_reg_8555 <= idx_3_fu_3712_p2;
                next_mul_reg_8547 <= next_mul_fu_3700_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state27))) then
                idx_4_reg_8765 <= idx_4_fu_3779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then
                idx_6_reg_9976 <= idx_6_fu_7201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then
                jdx_10_reg_10410 <= jdx_10_fu_8487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                jdx_3_reg_8627 <= jdx_3_fu_3757_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))))) then
                jdx_6_reg_8579 <= jdx_6_fu_3735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then
                jdx_7_reg_10084 <= jdx_7_fu_7427_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                jdx_8_reg_8537 <= jdx_8_fu_3366_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then
                jdx_9_reg_10349 <= jdx_9_fu_8414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30))) then
                n_iter_1_reg_8998 <= n_iter_1_fu_4101_p2;
                tmp_15_reg_8994 <= tmp_15_fu_4095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and (ap_const_lv1_0 = tmp_9_fu_3729_p2) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))))) then
                noisy_input_addr_rea_reg_8584 <= noisy_input_RDATA;
                noisy_input_vec_0_ad_reg_8594 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
                noisy_input_vec_1_ad_reg_8599 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
                noisy_input_vec_2_ad_reg_8604 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
                noisy_input_vec_3_ad_reg_8609 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
                noisy_input_vec_4_ad_reg_8614 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
                noisy_input_vec_5_ad_reg_8619 <= tmp_12_fu_3741_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                noisy_input_vec_0_lo_reg_8672 <= noisy_input_vec_0_q0;
                noisy_input_vec_1_lo_reg_8677 <= noisy_input_vec_1_q0;
                noisy_input_vec_2_lo_reg_8682 <= noisy_input_vec_2_q0;
                noisy_input_vec_3_lo_reg_8687 <= noisy_input_vec_3_q0;
                noisy_input_vec_4_lo_reg_8692 <= noisy_input_vec_4_q0;
                noisy_input_vec_5_lo_reg_8697 <= noisy_input_vec_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state28)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = tmp_20_reg_9660)))) then
                reg_3228 <= llr_vec_0_q0;
                reg_3236 <= llr_vec_1_q0;
                reg_3244 <= llr_vec_2_q0;
                reg_3252 <= llr_vec_3_q0;
                reg_3260 <= llr_vec_4_q0;
                reg_3268 <= llr_vec_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = tmp_20_reg_9660)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)))) then
                reg_3276 <= chk2var_0_0_dram_q0;
                reg_3283 <= chk2var_0_1_dram_q0;
                reg_3290 <= chk2var_0_2_dram_q0;
                reg_3297 <= chk2var_0_3_dram_q0;
                reg_3304 <= chk2var_0_4_dram_q0;
                reg_3311 <= chk2var_0_5_dram_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17))) then
                tmp_10_reg_8702 <= grp_fu_3060_p2;
                tmp_32_1_reg_8707 <= grp_fu_3065_p2;
                tmp_32_2_reg_8712 <= grp_fu_3070_p2;
                tmp_32_3_reg_8717 <= grp_fu_3075_p2;
                tmp_32_4_reg_8722 <= grp_fu_3080_p2;
                tmp_32_5_reg_8727 <= grp_fu_3085_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then
                tmp_11_reg_8732 <= grp_fu_3090_p2;
                tmp_33_1_reg_8737 <= grp_fu_3094_p2;
                tmp_33_2_reg_8742 <= grp_fu_3098_p2;
                tmp_33_3_reg_8747 <= grp_fu_3102_p2;
                tmp_33_4_reg_8752 <= grp_fu_3106_p2;
                tmp_33_5_reg_8757 <= grp_fu_3110_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state63))) then
                tmp_156_reg_10384 <= tmp_156_fu_8430_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state71))) then
                tmp_157_reg_10445 <= tmp_157_fu_8503_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_lv1_0 = tmp_20_fu_6553_p2))) then
                    tmp_22_reg_9669(7 downto 0) <= tmp_22_fu_6569_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state48) and (ap_const_lv1_0 = tmp_23_fu_7195_p2))) then
                    tmp_24_reg_9981(7 downto 0) <= tmp_24_fu_7207_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state53) and (ap_const_lv1_0 = tmp_28_fu_7421_p2))) then
                    tmp_29_reg_10089(7 downto 0) <= tmp_29_fu_7433_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_s_fu_3318_p2))) then
                    tmp_5_reg_8529(5 downto 1) <= tmp_5_fu_3354_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and (ap_const_lv1_0 = tmp_8_fu_3751_p2))) then
                    tmp_7_reg_8632(7 downto 0) <= tmp_7_fu_3763_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter4) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660))) then
                tmp_94_0_1_reg_9888 <= grp_fu_2850_p2;
                tmp_94_0_2_reg_9893 <= grp_fu_2856_p2;
                tmp_94_1_1_reg_9903 <= grp_fu_2868_p2;
                tmp_94_1_2_reg_9908 <= grp_fu_2874_p2;
                tmp_94_1_reg_9898 <= grp_fu_2862_p2;
                tmp_94_reg_9883 <= grp_fu_2844_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp1_iter3_tmp_20_reg_9660)) then
                tmp_94_2_1_reg_9918 <= grp_fu_2886_p2;
                tmp_94_2_2_reg_9923 <= grp_fu_2892_p2;
                tmp_94_2_reg_9913 <= grp_fu_2880_p2;
                tmp_94_3_1_reg_9933 <= grp_fu_2904_p2;
                tmp_94_3_2_reg_9938 <= grp_fu_2910_p2;
                tmp_94_3_reg_9928 <= grp_fu_2898_p2;
                tmp_94_4_1_reg_9948 <= grp_fu_2922_p2;
                tmp_94_4_2_reg_9953 <= grp_fu_2928_p2;
                tmp_94_4_reg_9943 <= grp_fu_2916_p2;
                tmp_94_5_1_reg_9963 <= grp_fu_2940_p2;
                tmp_94_5_2_reg_9968 <= grp_fu_2946_p2;
                tmp_94_5_reg_9958 <= grp_fu_2934_p2;
            end if;
        end if;
    end process;
    var2chk_shift_idx_0_1(9 downto 8) <= "00";
    var2chk_shift_idx_0_2(9 downto 8) <= "00";
    var2chk_shift_idx_0_3(9 downto 8) <= "00";
    var2chk_shift_idx_0_4(9 downto 8) <= "00";
    var2chk_shift_idx_0_5(9 downto 8) <= "00";
    var2chk_shift_idx_0_s(9 downto 8) <= "00";
    var2chk_shift_idx_1_1(9 downto 8) <= "00";
    var2chk_shift_idx_1_2(9 downto 8) <= "00";
    var2chk_shift_idx_1_3(9 downto 8) <= "00";
    var2chk_shift_idx_1_4(9 downto 8) <= "00";
    var2chk_shift_idx_1_5(9 downto 8) <= "00";
    var2chk_shift_idx_1_s(9 downto 8) <= "00";
    var2chk_shift_idx_2_1(9 downto 8) <= "00";
    var2chk_shift_idx_2_2(9 downto 8) <= "00";
    var2chk_shift_idx_2_3(9 downto 8) <= "00";
    var2chk_shift_idx_2_4(9 downto 8) <= "00";
    var2chk_shift_idx_2_5(9 downto 8) <= "00";
    var2chk_shift_idx_2_s(9 downto 8) <= "00";
    tmp_5_reg_8529(0) <= '0';
    tmp_7_reg_8632(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_42_reg_8800(8) <= '0';
    tmp_46_reg_8805(8) <= '0';
    tmp_47_reg_8810(8) <= '0';
    tmp_49_reg_8815(8) <= '0';
    tmp_54_reg_8820(8) <= '0';
    tmp_59_reg_8825(8) <= '0';
    tmp_64_reg_8830(8) <= '0';
    tmp_69_reg_8835(8) <= '0';
    tmp_78_reg_8840(8) <= '0';
    tmp_80_reg_8845(8) <= '0';
    tmp_85_reg_8850(8) <= '0';
    tmp_90_reg_8855(8) <= '0';
    tmp_98_reg_8860(8) <= '0';
    tmp_103_reg_8865(8) <= '0';
    tmp_110_reg_8870(8) <= '0';
    tmp_115_reg_8875(8) <= '0';
    tmp_120_reg_8880(8) <= '0';
    tmp_121_reg_8885(8) <= '0';
    extLd1_reg_8890(8) <= '0';
    extLd2_reg_8895(8) <= '0';
    extLd_reg_8900(8) <= '0';
    extLd3_reg_8906(8) <= '0';
    extLd4_reg_8911(8) <= '0';
    extLd5_reg_8916(8) <= '0';
    extLd6_reg_8922(8) <= '0';
    extLd7_reg_8927(8) <= '0';
    extLd8_reg_8932(8) <= '0';
    extLd9_reg_8938(8) <= '0';
    extLd10_reg_8943(8) <= '0';
    extLd11_reg_8948(8) <= '0';
    extLd12_reg_8954(8) <= '0';
    extLd13_reg_8959(8) <= '0';
    extLd14_reg_8964(8) <= '0';
    extLd15_reg_8970(8) <= '0';
    extLd16_reg_8975(8) <= '0';
    extLd17_reg_8980(8) <= '0';
    x_assign_s_reg_9264(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_s_reg_9264(31) <= '0';
    y_assign_9_reg_9269(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_9_reg_9269(31) <= '0';
    x_assign_2_reg_9280(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_2_reg_9280(31) <= '0';
    y_assign_s_reg_9285(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_s_reg_9285(31) <= '0';
    y_assign_1_reg_9296(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_1_reg_9296(31) <= '0';
    y_assign_3_reg_9313(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_3_reg_9313(31) <= '0';
    x_assign_10_reg_9330(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_10_reg_9330(31) <= '0';
    y_assign_6_reg_9335(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_6_reg_9335(31) <= '0';
    x_assign_12_reg_9346(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_12_reg_9346(31) <= '0';
    y_assign_7_reg_9351(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_7_reg_9351(31) <= '0';
    y_assign_10_reg_9362(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_10_reg_9362(31) <= '0';
    y_assign_12_reg_9379(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_12_reg_9379(31) <= '0';
    x_assign_20_reg_9396(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_20_reg_9396(31) <= '0';
    y_assign_15_reg_9401(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_15_reg_9401(31) <= '0';
    x_assign_22_reg_9412(31) <= '0';
    ap_pipeline_reg_pp0_iter3_x_assign_22_reg_9412(31) <= '0';
    y_assign_16_reg_9417(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_16_reg_9417(31) <= '0';
    y_assign_18_reg_9428(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_18_reg_9428(31) <= '0';
    y_assign_20_reg_9445(31) <= '0';
    ap_pipeline_reg_pp0_iter3_y_assign_20_reg_9445(31) <= '0';
    tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter1_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter2_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter3_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter4_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter5_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter6_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_24_reg_9981(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_29_reg_10089(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    idx_8_cast_reg_10137(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_2_fu_3706_p2, tmp_9_fu_3729_p2, tmp_38_fu_8458_p2, tmp_36_fu_8385_p2, noisy_input_RVALID, soft_dec_out_BVALID, hard_dec_out_BVALID, ap_enable_reg_pp1_iter1, tmp_s_fu_3318_p2, tmp_3_fu_3360_p2, ap_sig_ioackin_noisy_input_ARREADY, tmp_8_fu_3751_p2, tmp_13_fu_3773_p2, tmp_15_fu_4095_p2, tmp_15_reg_8994, tmp_17_fu_4107_p2, ap_enable_reg_pp0_iter0, tmp_20_fu_6553_p2, ap_enable_reg_pp1_iter0, tmp_23_fu_7195_p2, tmp_28_fu_7421_p2, tmp_32_fu_7724_p2, tmp_34_fu_8342_p2, ap_sig_ioackin_hard_dec_out_AWREADY, tmp_39_fu_8408_p2, ap_sig_ioackin_soft_dec_out_AWREADY, tmp_44_fu_8481_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, tmp_16_fu_4083_p2, p_1_phi_fu_2361_p4, tmp_30_fu_7701_p2, ap_sig_ioackin_hard_dec_out_WREADY, ap_sig_ioackin_soft_dec_out_WREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = tmp_s_fu_3318_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (not((ap_const_lv1_0 = tmp_3_fu_3360_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if ((not(((tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_noisy_input_ARREADY))) and not((tmp_2_fu_3706_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((tmp_2_fu_3706_p2 = ap_const_lv1_0) and not(((tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_noisy_input_ARREADY))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if ((not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))) and not((ap_const_lv1_0 = tmp_9_fu_3729_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_lv1_0 = tmp_9_fu_3729_p2) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                if (not((ap_const_lv1_0 = tmp_8_fu_3751_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state27 => 
                if (not((ap_const_lv1_0 = tmp_13_fu_3773_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (not((ap_const_lv1_0 = tmp_16_fu_4083_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if ((ap_const_lv1_0 = tmp_15_fu_4095_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter4)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = tmp_17_fu_4107_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = tmp_17_fu_4107_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter7)))) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = tmp_20_fu_6553_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = tmp_20_fu_6553_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (not((ap_const_lv1_0 = tmp_23_fu_7195_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state53 => 
                if (not((ap_const_lv1_0 = tmp_28_fu_7421_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state55 => 
                if (not((ap_const_lv1_0 = tmp_30_fu_7701_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                if (not((ap_const_lv1_0 = tmp_32_fu_7724_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state59 => 
                if ((not((ap_const_lv1_0 = tmp_15_reg_8994)) or (not((ap_const_lv1_0 = tmp_34_fu_8342_p2)) and not((ap_const_lv1_0 = p_1_phi_fu_2361_p4))))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                elsif (((ap_const_lv1_0 = tmp_15_reg_8994) and (ap_const_lv1_0 = p_1_phi_fu_2361_p4) and not((ap_const_lv1_0 = tmp_34_fu_8342_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state61 => 
                if ((not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_36_fu_8385_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                elsif (((ap_const_lv1_0 = tmp_36_fu_8385_p2) and not(((ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_AWREADY))))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                if (not((ap_const_lv1_0 = tmp_39_fu_8408_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_hard_dec_out_WREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (not((hard_dec_out_BVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                if ((not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_38_fu_8458_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_lv1_0 = tmp_38_fu_8458_p2) and not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                if (not((ap_const_lv1_0 = tmp_44_fu_8481_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_WREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (not((soft_dec_out_BVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    H_proto_shift_address0 <= tmp_197_cast_fu_3381_p1(5 - 1 downto 0);

    H_proto_shift_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            H_proto_shift_ce0 <= ap_const_logic_1;
        else 
            H_proto_shift_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    H_proto_shift_load_c_10_fu_3520_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_11_fu_3570_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_12_fu_3680_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_13_fu_3670_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_14_fu_3660_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_15_fu_3650_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_16_fu_3640_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_17_fu_3690_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_1_fu_3610_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_2_fu_3600_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_3_fu_3590_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_4_fu_3580_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_5_fu_3630_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_6_fu_3560_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_7_fu_3550_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_8_fu_3540_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_9_fu_3530_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    H_proto_shift_load_c_fu_3620_p1 <= std_logic_vector(resize(unsigned(H_proto_shift_q0),10));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state37 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state47 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state48 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state49 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state52 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state53 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state54 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state55 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state56 <= ap_CS_fsm(42 downto 42);
    ap_CS_fsm_state57 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state58 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state59 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state60 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state61 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_state62 <= ap_CS_fsm(48 downto 48);
    ap_CS_fsm_state63 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_state64 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state68 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state69 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state70 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state71 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state72 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state76 <= ap_CS_fsm(62 downto 62);

    ap_done_assign_proc : process(ap_CS_fsm_state69, tmp_38_fu_8458_p2, ap_sig_ioackin_soft_dec_out_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_38_fu_8458_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state69, tmp_38_fu_8458_p2, ap_sig_ioackin_soft_dec_out_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69) and not(((ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_sig_ioackin_soft_dec_out_AWREADY))) and not((ap_const_lv1_0 = tmp_38_fu_8458_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_hard_dec_out_AWREADY_assign_proc : process(hard_dec_out_AWREADY, ap_reg_ioackin_hard_dec_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_hard_dec_out_AWREADY)) then 
            ap_sig_ioackin_hard_dec_out_AWREADY <= hard_dec_out_AWREADY;
        else 
            ap_sig_ioackin_hard_dec_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_hard_dec_out_WREADY_assign_proc : process(hard_dec_out_WREADY, ap_reg_ioackin_hard_dec_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_hard_dec_out_WREADY)) then 
            ap_sig_ioackin_hard_dec_out_WREADY <= hard_dec_out_WREADY;
        else 
            ap_sig_ioackin_hard_dec_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_noisy_input_ARREADY_assign_proc : process(noisy_input_ARREADY, ap_reg_ioackin_noisy_input_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_noisy_input_ARREADY)) then 
            ap_sig_ioackin_noisy_input_ARREADY <= noisy_input_ARREADY;
        else 
            ap_sig_ioackin_noisy_input_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_soft_dec_out_AWREADY_assign_proc : process(soft_dec_out_AWREADY, ap_reg_ioackin_soft_dec_out_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_soft_dec_out_AWREADY)) then 
            ap_sig_ioackin_soft_dec_out_AWREADY <= soft_dec_out_AWREADY;
        else 
            ap_sig_ioackin_soft_dec_out_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_soft_dec_out_WREADY_assign_proc : process(soft_dec_out_WREADY, ap_reg_ioackin_soft_dec_out_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_soft_dec_out_WREADY)) then 
            ap_sig_ioackin_soft_dec_out_WREADY <= soft_dec_out_WREADY;
        else 
            ap_sig_ioackin_soft_dec_out_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    chk2var_0_0_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_reg_9127, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_77_fu_6121_p1, tmp_74_fu_6140_p1, tmp_93_0_1_1_fu_6676_p1, tmp_26_fu_7246_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_0_dram_address0 <= tmp_26_fu_7246_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_0_dram_address0 <= tmp_93_0_1_1_fu_6676_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)))) then 
            chk2var_0_0_dram_address0 <= tmp_74_fu_6140_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))) then 
            chk2var_0_0_dram_address0 <= tmp_77_fu_6121_p1(8 - 1 downto 0);
        else 
            chk2var_0_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_reg_9127, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))))) then 
            chk2var_0_0_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_0_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_reg_9127, tmp_i_reg_9552, ap_enable_reg_pp0_iter5, tmp_73_fu_6135_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))) then 
                chk2var_0_0_dram_d0 <= tmp_73_fu_6135_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) then 
                chk2var_0_0_dram_d0 <= tmp_i_reg_9552;
            else 
                chk2var_0_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_0_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_reg_9127, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_reg_9127))))) then 
            chk2var_0_0_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_1_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_86_0_1_fu_6145_p1, tmp_84_0_1_fu_6164_p1, tmp_93_1_1_1_fu_6778_p1, tmp_56_1_fu_7280_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_1_dram_address0 <= tmp_56_1_fu_7280_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_1_dram_address0 <= tmp_93_1_1_1_fu_6778_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)))) then 
            chk2var_0_1_dram_address0 <= tmp_84_0_1_fu_6164_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))) then 
            chk2var_0_1_dram_address0 <= tmp_86_0_1_fu_6145_p1(8 - 1 downto 0);
        else 
            chk2var_0_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))))) then 
            chk2var_0_1_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_1_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136, tmp_i5_reg_9558, ap_enable_reg_pp0_iter5, tmp_82_0_1_fu_6159_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))) then 
                chk2var_0_1_dram_d0 <= tmp_82_0_1_fu_6159_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) then 
                chk2var_0_1_dram_d0 <= tmp_i5_reg_9558;
            else 
                chk2var_0_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_1_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_1_reg_9136))))) then 
            chk2var_0_1_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_2_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_86_0_2_fu_6169_p1, tmp_84_0_2_fu_6188_p1, tmp_93_2_1_1_fu_6880_p1, tmp_56_2_fu_7314_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_2_dram_address0 <= tmp_56_2_fu_7314_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_2_dram_address0 <= tmp_93_2_1_1_fu_6880_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)))) then 
            chk2var_0_2_dram_address0 <= tmp_84_0_2_fu_6188_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))) then 
            chk2var_0_2_dram_address0 <= tmp_86_0_2_fu_6169_p1(8 - 1 downto 0);
        else 
            chk2var_0_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))))) then 
            chk2var_0_2_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_2_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140, tmp_i8_reg_9564, ap_enable_reg_pp0_iter5, tmp_82_0_2_fu_6183_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))) then 
                chk2var_0_2_dram_d0 <= tmp_82_0_2_fu_6183_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) then 
                chk2var_0_2_dram_d0 <= tmp_i8_reg_9564;
            else 
                chk2var_0_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_2_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_2_reg_9140))))) then 
            chk2var_0_2_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_3_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_86_0_3_fu_6193_p1, tmp_84_0_3_fu_6212_p1, tmp_93_3_1_1_fu_6982_p1, tmp_56_3_fu_7348_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_3_dram_address0 <= tmp_56_3_fu_7348_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_3_dram_address0 <= tmp_93_3_1_1_fu_6982_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)))) then 
            chk2var_0_3_dram_address0 <= tmp_84_0_3_fu_6212_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))) then 
            chk2var_0_3_dram_address0 <= tmp_86_0_3_fu_6193_p1(8 - 1 downto 0);
        else 
            chk2var_0_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))))) then 
            chk2var_0_3_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_3_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144, tmp_i1_reg_9570, ap_enable_reg_pp0_iter5, tmp_82_0_3_fu_6207_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))) then 
                chk2var_0_3_dram_d0 <= tmp_82_0_3_fu_6207_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) then 
                chk2var_0_3_dram_d0 <= tmp_i1_reg_9570;
            else 
                chk2var_0_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_3_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_3_reg_9144))))) then 
            chk2var_0_3_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_4_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_86_0_4_fu_6217_p1, tmp_84_0_4_fu_6236_p1, tmp_93_4_1_1_fu_7084_p1, tmp_56_4_fu_7382_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_4_dram_address0 <= tmp_56_4_fu_7382_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_4_dram_address0 <= tmp_93_4_1_1_fu_7084_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)))) then 
            chk2var_0_4_dram_address0 <= tmp_84_0_4_fu_6236_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))) then 
            chk2var_0_4_dram_address0 <= tmp_86_0_4_fu_6217_p1(8 - 1 downto 0);
        else 
            chk2var_0_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))))) then 
            chk2var_0_4_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_4_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148, tmp_i2_reg_9576, ap_enable_reg_pp0_iter5, tmp_82_0_4_fu_6231_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))) then 
                chk2var_0_4_dram_d0 <= tmp_82_0_4_fu_6231_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) then 
                chk2var_0_4_dram_d0 <= tmp_i2_reg_9576;
            else 
                chk2var_0_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_4_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_4_reg_9148))))) then 
            chk2var_0_4_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_5_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5, tmp_86_0_5_fu_6241_p1, tmp_84_0_5_fu_6260_p1, tmp_93_5_1_1_fu_7186_p1, tmp_56_5_fu_7416_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            chk2var_0_5_dram_address0 <= tmp_56_5_fu_7416_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_0_5_dram_address0 <= tmp_93_5_1_1_fu_7186_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)))) then 
            chk2var_0_5_dram_address0 <= tmp_84_0_5_fu_6260_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))) then 
            chk2var_0_5_dram_address0 <= tmp_86_0_5_fu_6241_p1(8 - 1 downto 0);
        else 
            chk2var_0_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_0_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152, ap_enable_reg_pp1_iter0, ap_CS_fsm_state48, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))))) then 
            chk2var_0_5_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_0_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_0_5_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152, tmp_i3_reg_9582, ap_enable_reg_pp0_iter5, tmp_82_0_5_fu_6255_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))) then 
                chk2var_0_5_dram_d0 <= tmp_82_0_5_fu_6255_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) then 
                chk2var_0_5_dram_d0 <= tmp_i3_reg_9582;
            else 
                chk2var_0_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_0_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_0_5_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_0_5_reg_9152))))) then 
            chk2var_0_5_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_0_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_0_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_fu_6265_p1, tmp_84_1_fu_6284_p1, tmp_93_fu_6608_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_0_dram_address0 <= tmp_93_fu_6608_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)))) then 
            chk2var_1_0_dram_address0 <= tmp_84_1_fu_6284_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))) then 
            chk2var_1_0_dram_address0 <= tmp_86_1_fu_6265_p1(8 - 1 downto 0);
        else 
            chk2var_1_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))))) then 
            chk2var_1_0_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_0_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181, tmp_i4_reg_9588, ap_enable_reg_pp0_iter5, tmp_82_1_fu_6279_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))) then 
                chk2var_1_0_dram_d0 <= tmp_82_1_fu_6279_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) then 
                chk2var_1_0_dram_d0 <= tmp_i4_reg_9588;
            else 
                chk2var_1_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_0_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_reg_9181))))) then 
            chk2var_1_0_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_1_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_1_fu_6289_p1, tmp_84_1_1_fu_6308_p1, tmp_93_1_fu_6710_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_1_dram_address0 <= tmp_93_1_fu_6710_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)))) then 
            chk2var_1_1_dram_address0 <= tmp_84_1_1_fu_6308_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))) then 
            chk2var_1_1_dram_address0 <= tmp_86_1_1_fu_6289_p1(8 - 1 downto 0);
        else 
            chk2var_1_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))))) then 
            chk2var_1_1_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_1_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190, tmp_i6_reg_9594, ap_enable_reg_pp0_iter5, tmp_82_1_1_fu_6303_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))) then 
                chk2var_1_1_dram_d0 <= tmp_82_1_1_fu_6303_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) then 
                chk2var_1_1_dram_d0 <= tmp_i6_reg_9594;
            else 
                chk2var_1_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_1_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_1_reg_9190))))) then 
            chk2var_1_1_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_2_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_2_fu_6313_p1, tmp_84_1_2_fu_6332_p1, tmp_93_2_fu_6812_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_2_dram_address0 <= tmp_93_2_fu_6812_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)))) then 
            chk2var_1_2_dram_address0 <= tmp_84_1_2_fu_6332_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))) then 
            chk2var_1_2_dram_address0 <= tmp_86_1_2_fu_6313_p1(8 - 1 downto 0);
        else 
            chk2var_1_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))))) then 
            chk2var_1_2_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_2_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194, tmp_i7_reg_9600, ap_enable_reg_pp0_iter5, tmp_82_1_2_fu_6327_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))) then 
                chk2var_1_2_dram_d0 <= tmp_82_1_2_fu_6327_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) then 
                chk2var_1_2_dram_d0 <= tmp_i7_reg_9600;
            else 
                chk2var_1_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_2_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_2_reg_9194))))) then 
            chk2var_1_2_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_3_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_3_fu_6337_p1, tmp_84_1_3_fu_6356_p1, tmp_93_3_fu_6914_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_3_dram_address0 <= tmp_93_3_fu_6914_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)))) then 
            chk2var_1_3_dram_address0 <= tmp_84_1_3_fu_6356_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))) then 
            chk2var_1_3_dram_address0 <= tmp_86_1_3_fu_6337_p1(8 - 1 downto 0);
        else 
            chk2var_1_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))))) then 
            chk2var_1_3_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_3_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198, tmp_i9_reg_9606, ap_enable_reg_pp0_iter5, tmp_82_1_3_fu_6351_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))) then 
                chk2var_1_3_dram_d0 <= tmp_82_1_3_fu_6351_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) then 
                chk2var_1_3_dram_d0 <= tmp_i9_reg_9606;
            else 
                chk2var_1_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_3_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_3_reg_9198))))) then 
            chk2var_1_3_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_4_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_4_fu_6361_p1, tmp_84_1_4_fu_6380_p1, tmp_93_4_fu_7016_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_4_dram_address0 <= tmp_93_4_fu_7016_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)))) then 
            chk2var_1_4_dram_address0 <= tmp_84_1_4_fu_6380_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))) then 
            chk2var_1_4_dram_address0 <= tmp_86_1_4_fu_6361_p1(8 - 1 downto 0);
        else 
            chk2var_1_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))))) then 
            chk2var_1_4_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_4_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202, tmp_i10_reg_9612, ap_enable_reg_pp0_iter5, tmp_82_1_4_fu_6375_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))) then 
                chk2var_1_4_dram_d0 <= tmp_82_1_4_fu_6375_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) then 
                chk2var_1_4_dram_d0 <= tmp_i10_reg_9612;
            else 
                chk2var_1_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_4_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_4_reg_9202))))) then 
            chk2var_1_4_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_5_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_1_5_fu_6385_p1, tmp_84_1_5_fu_6404_p1, tmp_93_5_fu_7118_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_1_5_dram_address0 <= tmp_93_5_fu_7118_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)))) then 
            chk2var_1_5_dram_address0 <= tmp_84_1_5_fu_6404_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))) then 
            chk2var_1_5_dram_address0 <= tmp_86_1_5_fu_6385_p1(8 - 1 downto 0);
        else 
            chk2var_1_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_1_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))))) then 
            chk2var_1_5_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_1_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_1_5_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206, tmp_i11_reg_9618, ap_enable_reg_pp0_iter5, tmp_82_1_5_fu_6399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))) then 
                chk2var_1_5_dram_d0 <= tmp_82_1_5_fu_6399_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) then 
                chk2var_1_5_dram_d0 <= tmp_i11_reg_9618;
            else 
                chk2var_1_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_1_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_1_5_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_1_5_reg_9206))))) then 
            chk2var_1_5_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_1_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_0_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_fu_6409_p1, tmp_84_2_fu_6428_p1, tmp_93_0_0_1_fu_6642_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_0_dram_address0 <= tmp_93_0_0_1_fu_6642_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)))) then 
            chk2var_2_0_dram_address0 <= tmp_84_2_fu_6428_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))) then 
            chk2var_2_0_dram_address0 <= tmp_86_2_fu_6409_p1(8 - 1 downto 0);
        else 
            chk2var_2_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))))) then 
            chk2var_2_0_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_0_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235, tmp_i12_reg_9624, ap_enable_reg_pp0_iter5, tmp_82_2_fu_6423_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))) then 
                chk2var_2_0_dram_d0 <= tmp_82_2_fu_6423_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) then 
                chk2var_2_0_dram_d0 <= tmp_i12_reg_9624;
            else 
                chk2var_2_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_0_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_reg_9235))))) then 
            chk2var_2_0_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_1_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_1_fu_6433_p1, tmp_84_2_1_fu_6452_p1, tmp_93_1_0_1_fu_6744_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_1_dram_address0 <= tmp_93_1_0_1_fu_6744_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)))) then 
            chk2var_2_1_dram_address0 <= tmp_84_2_1_fu_6452_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))) then 
            chk2var_2_1_dram_address0 <= tmp_86_2_1_fu_6433_p1(8 - 1 downto 0);
        else 
            chk2var_2_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))))) then 
            chk2var_2_1_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_1_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244, tmp_i13_reg_9630, ap_enable_reg_pp0_iter5, tmp_82_2_1_fu_6447_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))) then 
                chk2var_2_1_dram_d0 <= tmp_82_2_1_fu_6447_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) then 
                chk2var_2_1_dram_d0 <= tmp_i13_reg_9630;
            else 
                chk2var_2_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_1_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_1_reg_9244))))) then 
            chk2var_2_1_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_2_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_2_fu_6457_p1, tmp_84_2_2_fu_6476_p1, tmp_93_2_0_1_fu_6846_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_2_dram_address0 <= tmp_93_2_0_1_fu_6846_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)))) then 
            chk2var_2_2_dram_address0 <= tmp_84_2_2_fu_6476_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))) then 
            chk2var_2_2_dram_address0 <= tmp_86_2_2_fu_6457_p1(8 - 1 downto 0);
        else 
            chk2var_2_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))))) then 
            chk2var_2_2_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_2_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248, tmp_i14_reg_9636, ap_enable_reg_pp0_iter5, tmp_82_2_2_fu_6471_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))) then 
                chk2var_2_2_dram_d0 <= tmp_82_2_2_fu_6471_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) then 
                chk2var_2_2_dram_d0 <= tmp_i14_reg_9636;
            else 
                chk2var_2_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_2_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_2_reg_9248))))) then 
            chk2var_2_2_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_3_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_3_fu_6481_p1, tmp_84_2_3_fu_6500_p1, tmp_93_3_0_1_fu_6948_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_3_dram_address0 <= tmp_93_3_0_1_fu_6948_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)))) then 
            chk2var_2_3_dram_address0 <= tmp_84_2_3_fu_6500_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))) then 
            chk2var_2_3_dram_address0 <= tmp_86_2_3_fu_6481_p1(8 - 1 downto 0);
        else 
            chk2var_2_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))))) then 
            chk2var_2_3_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_3_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252, tmp_i15_reg_9642, ap_enable_reg_pp0_iter5, tmp_82_2_3_fu_6495_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))) then 
                chk2var_2_3_dram_d0 <= tmp_82_2_3_fu_6495_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) then 
                chk2var_2_3_dram_d0 <= tmp_i15_reg_9642;
            else 
                chk2var_2_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_3_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_3_reg_9252))))) then 
            chk2var_2_3_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_4_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_4_fu_6505_p1, tmp_84_2_4_fu_6524_p1, tmp_93_4_0_1_fu_7050_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_4_dram_address0 <= tmp_93_4_0_1_fu_7050_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)))) then 
            chk2var_2_4_dram_address0 <= tmp_84_2_4_fu_6524_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))) then 
            chk2var_2_4_dram_address0 <= tmp_86_2_4_fu_6505_p1(8 - 1 downto 0);
        else 
            chk2var_2_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))))) then 
            chk2var_2_4_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_4_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256, tmp_i16_reg_9648, ap_enable_reg_pp0_iter5, tmp_82_2_4_fu_6519_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))) then 
                chk2var_2_4_dram_d0 <= tmp_82_2_4_fu_6519_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) then 
                chk2var_2_4_dram_d0 <= tmp_i16_reg_9648;
            else 
                chk2var_2_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_4_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_4_reg_9256))))) then 
            chk2var_2_4_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_5_dram_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5, tmp_86_2_5_fu_6529_p1, tmp_84_2_5_fu_6548_p1, tmp_93_5_0_1_fu_7152_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            chk2var_2_5_dram_address0 <= tmp_93_5_0_1_fu_7152_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)))) then 
            chk2var_2_5_dram_address0 <= tmp_84_2_5_fu_6548_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))) then 
            chk2var_2_5_dram_address0 <= tmp_86_2_5_fu_6529_p1(8 - 1 downto 0);
        else 
            chk2var_2_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    chk2var_2_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))))) then 
            chk2var_2_5_dram_ce0 <= ap_const_logic_1;
        else 
            chk2var_2_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    chk2var_2_5_dram_d0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260, tmp_i17_reg_9654, ap_enable_reg_pp0_iter5, tmp_82_2_5_fu_6543_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter5)) then
            if (not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))) then 
                chk2var_2_5_dram_d0 <= tmp_82_2_5_fu_6543_p1;
            elsif ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) then 
                chk2var_2_5_dram_d0 <= tmp_i17_reg_9654;
            else 
                chk2var_2_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            chk2var_2_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    chk2var_2_5_dram_we0_assign_proc : process(ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter5) and not((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter4_sign_product_2_5_reg_9260))))) then 
            chk2var_2_5_dram_we0 <= ap_const_logic_1;
        else 
            chk2var_2_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;

    done_V_2_fu_8373_p2 <= (p_1_reg_2357 and tmp_119_fu_8367_p2);
    extLd10_fu_4023_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_3),9));
    extLd11_fu_4031_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_3),9));
    extLd12_fu_4039_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_4),9));
    extLd13_fu_4047_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_4),9));
    extLd14_fu_4055_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_4),9));
    extLd15_fu_4063_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_5),9));
    extLd16_fu_4071_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_5),9));
    extLd17_fu_4079_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_5),9));
    extLd1_fu_3943_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_s),9));
    extLd2_fu_3951_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_s),9));
    extLd3_fu_3967_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_1),9));
    extLd4_fu_3975_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_1),9));
    extLd5_fu_3983_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_1),9));
    extLd6_fu_3991_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_2),9));
    extLd7_fu_3999_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_2_2),9));
    extLd8_fu_4007_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_2),9));
    extLd9_fu_4015_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_1_3),9));
    extLd_fu_3959_p1 <= std_logic_vector(resize(unsigned(chk2var_shift_idx_0_s),9));

    grp_fu_2844_p0_assign_proc : process(llr_vec_0_q0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, chk2var_0_0_dram_q0, ap_CS_fsm_state49)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2844_p0 <= chk2var_0_0_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2844_p0 <= llr_vec_0_q0;
        else 
            grp_fu_2844_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2844_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_1_0_dram_q0, var2chk_0_0_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2844_p1 <= var2chk_0_0_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2844_p1 <= chk2var_1_0_dram_q0;
        else 
            grp_fu_2844_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2850_p0_assign_proc : process(llr_vec_0_q0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_0_1_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2850_p0 <= chk2var_0_1_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2850_p0 <= llr_vec_0_q0;
        else 
            grp_fu_2850_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2850_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_2_0_dram_q0, var2chk_0_1_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2850_p1 <= var2chk_0_1_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2850_p1 <= chk2var_2_0_dram_q0;
        else 
            grp_fu_2850_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2856_p0_assign_proc : process(llr_vec_0_q0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_0_2_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2856_p0 <= chk2var_0_2_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2856_p0 <= llr_vec_0_q0;
        else 
            grp_fu_2856_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2856_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, chk2var_0_0_dram_q0, ap_CS_fsm_state49, var2chk_0_2_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2856_p1 <= var2chk_0_2_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2856_p1 <= chk2var_0_0_dram_q0;
        else 
            grp_fu_2856_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2862_p0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, llr_vec_1_q0, ap_CS_fsm_state49, chk2var_0_3_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2862_p0 <= chk2var_0_3_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2862_p0 <= llr_vec_1_q0;
        else 
            grp_fu_2862_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2862_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_1_1_dram_q0, var2chk_0_3_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2862_p1 <= var2chk_0_3_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2862_p1 <= chk2var_1_1_dram_q0;
        else 
            grp_fu_2862_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2868_p0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, llr_vec_1_q0, ap_CS_fsm_state49, chk2var_0_4_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2868_p0 <= chk2var_0_4_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2868_p0 <= llr_vec_1_q0;
        else 
            grp_fu_2868_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2868_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_2_1_dram_q0, var2chk_0_4_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2868_p1 <= var2chk_0_4_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2868_p1 <= chk2var_2_1_dram_q0;
        else 
            grp_fu_2868_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2874_p0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, llr_vec_1_q0, ap_CS_fsm_state49, chk2var_0_5_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2874_p0 <= chk2var_0_5_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2874_p0 <= llr_vec_1_q0;
        else 
            grp_fu_2874_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2874_p1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state49, chk2var_0_1_dram_q0, var2chk_0_5_dram_q0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state49))) then 
            grp_fu_2874_p1 <= var2chk_0_5_dram_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            grp_fu_2874_p1 <= chk2var_0_1_dram_q0;
        else 
            grp_fu_2874_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3114_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_1_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_0_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3114_p0 <= soft_dec_tmp_0_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3114_p0 <= var2chk_0_1_dram_q0;
        else 
            grp_fu_3114_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3120_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_2_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_1_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3120_p0 <= soft_dec_tmp_1_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3120_p0 <= var2chk_0_2_dram_q0;
        else 
            grp_fu_3120_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3126_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_3_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_2_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3126_p0 <= soft_dec_tmp_2_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3126_p0 <= var2chk_0_3_dram_q0;
        else 
            grp_fu_3126_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3132_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_4_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_3_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3132_p0 <= soft_dec_tmp_3_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3132_p0 <= var2chk_0_4_dram_q0;
        else 
            grp_fu_3132_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3138_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_5_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_4_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3138_p0 <= soft_dec_tmp_4_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3138_p0 <= var2chk_0_5_dram_q0;
        else 
            grp_fu_3138_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3144_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, var2chk_0_0_dram_q0, ap_enable_reg_pp0_iter1, soft_dec_tmp_5_q0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            grp_fu_3144_p0 <= soft_dec_tmp_5_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_3144_p0 <= var2chk_0_0_dram_q0;
        else 
            grp_fu_3144_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hard_dec_out_AWADDR <= tmp_234_fu_8397_p1(32 - 1 downto 0);

    hard_dec_out_AWVALID_assign_proc : process(ap_CS_fsm_state61, tmp_36_fu_8385_p2, ap_reg_ioackin_hard_dec_out_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61) and (ap_const_lv1_0 = tmp_36_fu_8385_p2) and (ap_const_logic_0 = ap_reg_ioackin_hard_dec_out_AWREADY))) then 
            hard_dec_out_AWVALID <= ap_const_logic_1;
        else 
            hard_dec_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_out_BREADY_assign_proc : process(ap_CS_fsm_state68, hard_dec_out_BVALID)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state68) and not((hard_dec_out_BVALID = ap_const_logic_0)))) then 
            hard_dec_out_BREADY <= ap_const_logic_1;
        else 
            hard_dec_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_out_WDATA <= std_logic_vector(resize(unsigned(tmp_156_reg_10384),32));

    hard_dec_out_WVALID_assign_proc : process(ap_CS_fsm_state64, ap_reg_ioackin_hard_dec_out_WREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64) and (ap_const_logic_0 = ap_reg_ioackin_hard_dec_out_WREADY))) then 
            hard_dec_out_WVALID <= ap_const_logic_1;
        else 
            hard_dec_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_out_blk_n_AW_assign_proc : process(m_axi_hard_dec_out_AWREADY, ap_CS_fsm_state61, tmp_36_fu_8385_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state61) and (ap_const_lv1_0 = tmp_36_fu_8385_p2))) then 
            hard_dec_out_blk_n_AW <= m_axi_hard_dec_out_AWREADY;
        else 
            hard_dec_out_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    hard_dec_out_blk_n_B_assign_proc : process(m_axi_hard_dec_out_BVALID, ap_CS_fsm_state68)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state68))) then 
            hard_dec_out_blk_n_B <= m_axi_hard_dec_out_BVALID;
        else 
            hard_dec_out_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    hard_dec_out_blk_n_W_assign_proc : process(m_axi_hard_dec_out_WREADY, ap_CS_fsm_state64)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state64))) then 
            hard_dec_out_blk_n_W <= m_axi_hard_dec_out_WREADY;
        else 
            hard_dec_out_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    hard_dec_tmp_0_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54, tmp_109_fu_7766_p1, tmp_109_1_fu_7964_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_0_V_address0 <= tmp_109_1_fu_7964_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_0_V_address0 <= tmp_109_fu_7766_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_0_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_0_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_0_V_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62, tmp_109_2_fu_8113_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_0_V_address1 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_0_V_address1 <= tmp_109_2_fu_8113_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_0_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_0_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_0_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_0_V_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then 
            hard_dec_tmp_0_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_0_V_d0 <= (tmp_86_fu_7473_p2 and grp_fu_3114_p2);

    hard_dec_tmp_0_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_0_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_1_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54, tmp_109_0_1_fu_7797_p1, tmp_109_1_1_fu_7995_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_1_V_address0 <= tmp_109_1_1_fu_7995_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_1_V_address0 <= tmp_109_0_1_fu_7797_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_1_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_1_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_1_V_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62, tmp_109_2_1_fu_8142_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_1_V_address1 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_1_V_address1 <= tmp_109_2_1_fu_8142_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_1_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_1_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_1_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_1_V_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then 
            hard_dec_tmp_1_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_1_V_d0 <= (tmp_91_fu_7516_p2 and grp_fu_3120_p2);

    hard_dec_tmp_1_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_1_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_2_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54, tmp_109_0_2_fu_7829_p1, tmp_109_1_2_fu_8024_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_2_V_address0 <= tmp_109_1_2_fu_8024_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_2_V_address0 <= tmp_109_0_2_fu_7829_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_2_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_2_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_2_V_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62, tmp_109_2_2_fu_8173_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_2_V_address1 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_2_V_address1 <= tmp_109_2_2_fu_8173_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_2_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_2_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_2_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_2_V_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then 
            hard_dec_tmp_2_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_2_V_d0 <= (tmp_99_fu_7559_p2 and grp_fu_3126_p2);

    hard_dec_tmp_2_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_2_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_3_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state54, tmp_109_0_3_fu_7860_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_3_V_address0 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_3_V_address0 <= tmp_109_0_3_fu_7860_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_3_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_3_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_3_V_address1_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, tmp_109_0_1_fu_7797_p1, tmp_109_2_3_fu_8204_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_3_V_address1 <= tmp_109_2_3_fu_8204_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_3_V_address1 <= tmp_109_0_1_fu_7797_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_3_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_3_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state62, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_3_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_3_V_ce1_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)))) then 
            hard_dec_tmp_3_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_3_V_d0 <= (tmp_104_fu_7602_p2 and grp_fu_3132_p2);

    hard_dec_tmp_3_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_3_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_4_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54, tmp_109_0_4_fu_7891_p1, tmp_109_1_4_fu_8053_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_4_V_address0 <= tmp_109_1_4_fu_8053_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_4_V_address0 <= tmp_109_0_4_fu_7891_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_4_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_4_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_4_V_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62, tmp_33_fu_7927_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_4_V_address1 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_4_V_address1 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_4_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_4_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_4_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_4_V_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then 
            hard_dec_tmp_4_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_4_V_d0 <= (tmp_111_fu_7645_p2 and grp_fu_3138_p2);

    hard_dec_tmp_4_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_4_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_5_V_address0_assign_proc : process(tmp_29_reg_10089, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54, tmp_109_0_5_fu_7922_p1, tmp_109_1_5_fu_8082_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_5_V_address0 <= tmp_109_1_5_fu_8082_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            hard_dec_tmp_5_V_address0 <= tmp_109_0_5_fu_7922_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            hard_dec_tmp_5_V_address0 <= tmp_29_reg_10089(8 - 1 downto 0);
        else 
            hard_dec_tmp_5_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_5_V_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62, tmp_109_2_5_fu_8233_p1, tmp_41_fu_8420_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state62))) then 
            hard_dec_tmp_5_V_address1 <= tmp_41_fu_8420_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            hard_dec_tmp_5_V_address1 <= tmp_109_2_5_fu_8233_p1(8 - 1 downto 0);
        else 
            hard_dec_tmp_5_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    hard_dec_tmp_5_V_ce0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_5_V_ce0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hard_dec_tmp_5_V_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state62)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state62)))) then 
            hard_dec_tmp_5_V_ce1 <= ap_const_logic_1;
        else 
            hard_dec_tmp_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hard_dec_tmp_5_V_d0 <= (tmp_116_fu_7688_p2 and grp_fu_3144_p2);

    hard_dec_tmp_5_V_we0_assign_proc : process(ap_CS_fsm_state54)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state54)))) then 
            hard_dec_tmp_5_V_we0 <= ap_const_logic_1;
        else 
            hard_dec_tmp_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_assign_1_cast_fu_6565_p1 <= std_logic_vector(resize(unsigned(i_assign_1_reg_2301),9));
    i_assign_2_cast_fu_4119_p1 <= std_logic_vector(resize(unsigned(i_assign_2_phi_fu_2293_p4),9));

    i_assign_2_phi_fu_2293_p4_assign_proc : process(i_assign_2_reg_2289, ap_CS_fsm_pp0_stage0, tmp_17_reg_9003, idx_15_reg_9007, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_17_reg_9003))) then 
            i_assign_2_phi_fu_2293_p4 <= idx_15_reg_9007;
        else 
            i_assign_2_phi_fu_2293_p4 <= i_assign_2_reg_2289;
        end if; 
    end process;

    i_assign_cast_fu_7191_p1 <= std_logic_vector(resize(unsigned(i_assign_reg_2312),9));
    idx_10_fu_7707_p2 <= std_logic_vector(unsigned(idx_7_reg_2334) + unsigned(ap_const_lv8_1));
    idx_11_fu_7730_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_1));
    idx_12_fu_8348_p2 <= std_logic_vector(unsigned(idx_9_reg_2369) + unsigned(ap_const_lv8_1));
    idx_13_fu_8391_p2 <= std_logic_vector(unsigned(idx_0_i1_reg_2380) + unsigned(ap_const_lv3_1));
    idx_14_fu_8464_p2 <= std_logic_vector(unsigned(idx_1_i_reg_2414) + unsigned(ap_const_lv3_1));
    idx_15_fu_4113_p2 <= std_logic_vector(unsigned(i_assign_2_phi_fu_2293_p4) + unsigned(ap_const_lv8_1));
    idx_1_fu_3324_p2 <= std_logic_vector(unsigned(idx_reg_2186) + unsigned(ap_const_lv2_1));
    idx_3_fu_3712_p2 <= std_logic_vector(unsigned(idx_0_i_reg_2210) + unsigned(ap_const_lv3_1));
    idx_4_fu_3779_p2 <= std_logic_vector(unsigned(idx_2_reg_2255) + unsigned(ap_const_lv8_1));
    idx_5_fu_6559_p2 <= std_logic_vector(unsigned(i_assign_1_reg_2301) + unsigned(ap_const_lv8_1));
    idx_6_fu_7201_p2 <= std_logic_vector(unsigned(i_assign_reg_2312) + unsigned(ap_const_lv8_1));
    idx_8_cast_fu_7720_p1 <= std_logic_vector(resize(unsigned(idx_8_reg_2345),9));
    idx_assign_fu_3404_p3 <= 
        tmp_6_fu_3386_p2 when (tmp_37_fu_3392_p2(0) = '1') else 
        tmp_40_fu_3398_p2;
    jdx_10_fu_8487_p2 <= std_logic_vector(unsigned(jdx_1_i_reg_2437) + unsigned(ap_const_lv8_1));
    jdx_3_fu_3757_p2 <= std_logic_vector(unsigned(jdx_1_reg_2244) + unsigned(ap_const_lv8_1));
    jdx_4_fu_4089_p2 <= std_logic_vector(unsigned(jdx_2_reg_2267) + unsigned(ap_const_lv2_1));
    jdx_6_fu_3735_p2 <= std_logic_vector(unsigned(jdx_0_i_reg_2233) + unsigned(ap_const_lv8_1));
    jdx_7_fu_7427_p2 <= std_logic_vector(unsigned(jdx_5_reg_2323) + unsigned(ap_const_lv8_1));
    jdx_8_fu_3366_p2 <= std_logic_vector(unsigned(jdx_reg_2198) + unsigned(ap_const_lv3_1));
    jdx_9_fu_8414_p2 <= std_logic_vector(unsigned(jdx_0_i1_reg_2403) + unsigned(ap_const_lv8_1));

    llr_vec_0_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_0_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_0_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_0_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_0_ce0 <= ap_const_logic_1;
        else 
            llr_vec_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_0_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_0_we0 <= ap_const_logic_1;
        else 
            llr_vec_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_1_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_1_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_1_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_1_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_1_ce0 <= ap_const_logic_1;
        else 
            llr_vec_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_1_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_1_we0 <= ap_const_logic_1;
        else 
            llr_vec_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_2_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_2_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_2_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_2_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_2_ce0 <= ap_const_logic_1;
        else 
            llr_vec_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_2_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_2_we0 <= ap_const_logic_1;
        else 
            llr_vec_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_3_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_3_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_3_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_3_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_3_ce0 <= ap_const_logic_1;
        else 
            llr_vec_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_3_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_3_we0 <= ap_const_logic_1;
        else 
            llr_vec_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_4_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_4_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_4_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_4_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_4_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_4_ce0 <= ap_const_logic_1;
        else 
            llr_vec_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_4_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_4_we0 <= ap_const_logic_1;
        else 
            llr_vec_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_5_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, tmp_7_reg_8632, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, tmp_22_fu_6569_p1, ap_CS_fsm_state26, tmp_14_fu_3785_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then 
            llr_vec_5_address0 <= tmp_22_fu_6569_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            llr_vec_5_address0 <= tmp_14_fu_3785_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state26))) then 
            llr_vec_5_address0 <= tmp_7_reg_8632(8 - 1 downto 0);
        else 
            llr_vec_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    llr_vec_5_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state27, ap_enable_reg_pp1_iter0, ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_5_ce0 <= ap_const_logic_1;
        else 
            llr_vec_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    llr_vec_5_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26)))) then 
            llr_vec_5_we0 <= ap_const_logic_1;
        else 
            llr_vec_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    n_iter_1_fu_4101_p2 <= std_logic_vector(unsigned(n_iter_reg_2278) + unsigned(ap_const_lv5_1));
    next_mul1_fu_8452_p2 <= std_logic_vector(unsigned(phi_mul9_reg_2426) + unsigned(ap_const_lv10_A7));
    next_mul8_fu_8379_p2 <= std_logic_vector(unsigned(phi_mul7_reg_2392) + unsigned(ap_const_lv10_A7));
    next_mul_fu_3700_p2 <= std_logic_vector(unsigned(phi_mul_reg_2222) + unsigned(ap_const_lv10_A7));
    noisy_input_ARADDR <= tmp_18_fu_3718_p1(32 - 1 downto 0);

    noisy_input_ARVALID_assign_proc : process(ap_CS_fsm_state5, tmp_2_fu_3706_p2, ap_reg_ioackin_noisy_input_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (tmp_2_fu_3706_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_reg_ioackin_noisy_input_ARREADY))) then 
            noisy_input_ARVALID <= ap_const_logic_1;
        else 
            noisy_input_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_RREADY_assign_proc : process(ap_CS_fsm_state12, tmp_9_fu_3729_p2, noisy_input_RVALID)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12) and (ap_const_lv1_0 = tmp_9_fu_3729_p2) and not(((ap_const_lv1_0 = tmp_9_fu_3729_p2) and (noisy_input_RVALID = ap_const_logic_0))))) then 
            noisy_input_RREADY <= ap_const_logic_1;
        else 
            noisy_input_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_blk_n_AR_assign_proc : process(m_axi_noisy_input_ARREADY, ap_CS_fsm_state5, tmp_2_fu_3706_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (tmp_2_fu_3706_p2 = ap_const_lv1_0))) then 
            noisy_input_blk_n_AR <= m_axi_noisy_input_ARREADY;
        else 
            noisy_input_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    noisy_input_blk_n_R_assign_proc : process(m_axi_noisy_input_RVALID, ap_CS_fsm_state12, tmp_9_fu_3729_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12) and (ap_const_lv1_0 = tmp_9_fu_3729_p2))) then 
            noisy_input_blk_n_R <= m_axi_noisy_input_RVALID;
        else 
            noisy_input_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    noisy_input_vec_0_address0_assign_proc : process(noisy_input_vec_0_ad_reg_8594, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_0_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_0_address0 <= noisy_input_vec_0_ad_reg_8594;
        else 
            noisy_input_vec_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_0_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_0_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_0_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv3_0 = idx_0_i_reg_2210)))) then 
            noisy_input_vec_0_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_1_address0_assign_proc : process(noisy_input_vec_1_ad_reg_8599, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_1_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_1_address0 <= noisy_input_vec_1_ad_reg_8599;
        else 
            noisy_input_vec_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_1_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_1_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_1_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and (idx_0_i_reg_2210 = ap_const_lv3_1)))) then 
            noisy_input_vec_1_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_2_address0_assign_proc : process(noisy_input_vec_2_ad_reg_8604, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_2_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_2_address0 <= noisy_input_vec_2_ad_reg_8604;
        else 
            noisy_input_vec_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_2_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_2_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_2_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and (idx_0_i_reg_2210 = ap_const_lv3_2)))) then 
            noisy_input_vec_2_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_3_address0_assign_proc : process(noisy_input_vec_3_ad_reg_8609, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_3_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_3_address0 <= noisy_input_vec_3_ad_reg_8609;
        else 
            noisy_input_vec_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_3_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_3_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_3_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and (idx_0_i_reg_2210 = ap_const_lv3_3)))) then 
            noisy_input_vec_3_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_4_address0_assign_proc : process(noisy_input_vec_4_ad_reg_8614, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_4_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_4_address0 <= noisy_input_vec_4_ad_reg_8614;
        else 
            noisy_input_vec_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_4_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_4_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_4_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and (idx_0_i_reg_2210 = ap_const_lv3_4)))) then 
            noisy_input_vec_4_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_5_address0_assign_proc : process(noisy_input_vec_5_ad_reg_8619, ap_CS_fsm_state14, tmp_7_fu_3763_p1, ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            noisy_input_vec_5_address0 <= tmp_7_fu_3763_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            noisy_input_vec_5_address0 <= noisy_input_vec_5_ad_reg_8619;
        else 
            noisy_input_vec_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    noisy_input_vec_5_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            noisy_input_vec_5_ce0 <= ap_const_logic_1;
        else 
            noisy_input_vec_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    noisy_input_vec_5_we0_assign_proc : process(idx_0_i_reg_2210, ap_CS_fsm_state13)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv3_0 = idx_0_i_reg_2210)) and not((idx_0_i_reg_2210 = ap_const_lv3_1)) and not((idx_0_i_reg_2210 = ap_const_lv3_2)) and not((idx_0_i_reg_2210 = ap_const_lv3_3)) and not((idx_0_i_reg_2210 = ap_const_lv3_4))))) then 
            noisy_input_vec_5_we0 <= ap_const_logic_1;
        else 
            noisy_input_vec_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    notlhs10_fu_7633_p2 <= "0" when (tmp_107_fu_7619_p4 = ap_const_lv8_FF) else "1";
    notlhs11_fu_7676_p2 <= "0" when (tmp_114_fu_7662_p4 = ap_const_lv8_FF) else "1";
    notlhs12_fu_5173_p2 <= "0" when (tmp_125_fu_5159_p4 = ap_const_lv8_FF) else "1";
    notlhs13_fu_5211_p2 <= "0" when (tmp_130_fu_5197_p4 = ap_const_lv8_FF) else "1";
    notlhs14_fu_5249_p2 <= "0" when (tmp_135_fu_5235_p4 = ap_const_lv8_FF) else "1";
    notlhs15_fu_5287_p2 <= "0" when (tmp_140_fu_5273_p4 = ap_const_lv8_FF) else "1";
    notlhs16_fu_5325_p2 <= "0" when (tmp_145_fu_5311_p4 = ap_const_lv8_FF) else "1";
    notlhs17_fu_5395_p2 <= "0" when (tmp_151_fu_5381_p4 = ap_const_lv8_FF) else "1";
    notlhs18_fu_5557_p2 <= "0" when (tmp_163_fu_5543_p4 = ap_const_lv8_FF) else "1";
    notlhs19_fu_5595_p2 <= "0" when (tmp_168_fu_5581_p4 = ap_const_lv8_FF) else "1";
    notlhs1_fu_4827_p2 <= "0" when (tmp_53_fu_4813_p4 = ap_const_lv8_FF) else "1";
    notlhs20_fu_5633_p2 <= "0" when (tmp_173_fu_5619_p4 = ap_const_lv8_FF) else "1";
    notlhs21_fu_5671_p2 <= "0" when (tmp_178_fu_5657_p4 = ap_const_lv8_FF) else "1";
    notlhs22_fu_5709_p2 <= "0" when (tmp_183_fu_5695_p4 = ap_const_lv8_FF) else "1";
    notlhs23_fu_5779_p2 <= "0" when (tmp_189_fu_5765_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_4865_p2 <= "0" when (tmp_58_fu_4851_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_4903_p2 <= "0" when (tmp_63_fu_4889_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_4941_p2 <= "0" when (tmp_68_fu_4927_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_5011_p2 <= "0" when (tmp_79_fu_4997_p4 = ap_const_lv8_FF) else "1";
    notlhs6_fu_7461_p2 <= "0" when (tmp_84_fu_7447_p4 = ap_const_lv8_FF) else "1";
    notlhs7_fu_7504_p2 <= "0" when (tmp_89_fu_7490_p4 = ap_const_lv8_FF) else "1";
    notlhs8_fu_7547_p2 <= "0" when (tmp_97_fu_7533_p4 = ap_const_lv8_FF) else "1";
    notlhs9_fu_7590_p2 <= "0" when (tmp_102_fu_7576_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_4789_p2 <= "0" when (tmp_48_fu_4775_p4 = ap_const_lv8_FF) else "1";
    notrhs10_fu_7639_p2 <= "1" when (tmp_169_fu_7629_p1 = ap_const_lv23_0) else "0";
    notrhs11_fu_7682_p2 <= "1" when (tmp_174_fu_7672_p1 = ap_const_lv23_0) else "0";
    notrhs12_fu_5179_p2 <= "1" when (tmp_227_fu_5169_p1 = ap_const_lv23_0) else "0";
    notrhs13_fu_5217_p2 <= "1" when (tmp_228_fu_5207_p1 = ap_const_lv23_0) else "0";
    notrhs14_fu_5255_p2 <= "1" when (tmp_229_fu_5245_p1 = ap_const_lv23_0) else "0";
    notrhs15_fu_5293_p2 <= "1" when (tmp_230_fu_5283_p1 = ap_const_lv23_0) else "0";
    notrhs16_fu_5331_p2 <= "1" when (tmp_231_fu_5321_p1 = ap_const_lv23_0) else "0";
    notrhs17_fu_5401_p2 <= "1" when (tmp_233_fu_5391_p1 = ap_const_lv23_0) else "0";
    notrhs18_fu_5563_p2 <= "1" when (tmp_241_fu_5553_p1 = ap_const_lv23_0) else "0";
    notrhs19_fu_5601_p2 <= "1" when (tmp_242_fu_5591_p1 = ap_const_lv23_0) else "0";
    notrhs1_fu_4833_p2 <= "1" when (tmp_141_fu_4823_p1 = ap_const_lv23_0) else "0";
    notrhs20_fu_5639_p2 <= "1" when (tmp_243_fu_5629_p1 = ap_const_lv23_0) else "0";
    notrhs21_fu_5677_p2 <= "1" when (tmp_244_fu_5667_p1 = ap_const_lv23_0) else "0";
    notrhs22_fu_5715_p2 <= "1" when (tmp_245_fu_5705_p1 = ap_const_lv23_0) else "0";
    notrhs23_fu_5785_p2 <= "1" when (tmp_247_fu_5775_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_4871_p2 <= "1" when (tmp_146_fu_4861_p1 = ap_const_lv23_0) else "0";
    notrhs3_fu_4909_p2 <= "1" when (tmp_150_fu_4899_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_4947_p2 <= "1" when (tmp_152_fu_4937_p1 = ap_const_lv23_0) else "0";
    notrhs5_fu_5017_p2 <= "1" when (tmp_159_fu_5007_p1 = ap_const_lv23_0) else "0";
    notrhs6_fu_7467_p2 <= "1" when (tmp_160_fu_7457_p1 = ap_const_lv23_0) else "0";
    notrhs7_fu_7510_p2 <= "1" when (tmp_161_fu_7500_p1 = ap_const_lv23_0) else "0";
    notrhs8_fu_7553_p2 <= "1" when (tmp_162_fu_7543_p1 = ap_const_lv23_0) else "0";
    notrhs9_fu_7596_p2 <= "1" when (tmp_164_fu_7586_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_4795_p2 <= "1" when (tmp_136_fu_4785_p1 = ap_const_lv23_0) else "0";
    p_1_phi_fu_2361_p4 <= p_1_reg_2357;
    p_Result_10_fu_6017_p3 <= (ap_const_lv1_0 & tmp_226_reg_9176);
    p_Result_11_fu_6030_p3 <= (ap_const_lv1_0 & tmp_232_reg_9185);
    p_Result_12_fu_6043_p3 <= (ap_const_lv1_0 & tmp_236_reg_9210);
    p_Result_13_fu_6056_p3 <= (ap_const_lv1_0 & tmp_237_reg_9215);
    p_Result_14_fu_6069_p3 <= (ap_const_lv1_0 & tmp_238_reg_9220);
    p_Result_15_fu_6082_p3 <= (ap_const_lv1_0 & tmp_239_reg_9225);
    p_Result_16_fu_6095_p3 <= (ap_const_lv1_0 & tmp_240_reg_9230);
    p_Result_17_fu_6108_p3 <= (ap_const_lv1_0 & tmp_246_reg_9239);
    p_Result_1_fu_5900_p3 <= (ap_const_lv1_0 & tmp_123_reg_9107);
    p_Result_2_fu_5913_p3 <= (ap_const_lv1_0 & tmp_124_reg_9112);
    p_Result_3_fu_5926_p3 <= (ap_const_lv1_0 & tmp_126_reg_9117);
    p_Result_4_fu_5939_p3 <= (ap_const_lv1_0 & tmp_131_reg_9122);
    p_Result_5_fu_5952_p3 <= (ap_const_lv1_0 & tmp_158_reg_9131);
    p_Result_6_fu_5965_p3 <= (ap_const_lv1_0 & tmp_222_reg_9156);
    p_Result_7_fu_5978_p3 <= (ap_const_lv1_0 & tmp_223_reg_9161);
    p_Result_8_fu_5991_p3 <= (ap_const_lv1_0 & tmp_224_reg_9166);
    p_Result_9_fu_6004_p3 <= (ap_const_lv1_0 & tmp_225_reg_9171);
    p_Result_s_fu_5887_p3 <= (ap_const_lv1_0 & tmp_122_reg_9102);
    p_Val2_10_fu_5151_p1 <= var2chk_1_5_dram_q0;
    p_Val2_11_fu_5373_p1 <= var2chk_1_0_dram_q0;
    p_Val2_12_fu_5503_p1 <= var2chk_2_1_dram_q0;
    p_Val2_13_fu_5511_p1 <= var2chk_2_2_dram_q0;
    p_Val2_14_fu_5519_p1 <= var2chk_2_3_dram_q0;
    p_Val2_15_fu_5527_p1 <= var2chk_2_4_dram_q0;
    p_Val2_16_fu_5535_p1 <= var2chk_2_5_dram_q0;
    p_Val2_17_fu_5757_p1 <= var2chk_2_0_dram_q0;
    p_Val2_1_fu_4743_p1 <= var2chk_0_2_dram_q0;
    p_Val2_2_fu_4751_p1 <= var2chk_0_3_dram_q0;
    p_Val2_3_fu_4759_p1 <= var2chk_0_4_dram_q0;
    p_Val2_4_fu_4767_p1 <= var2chk_0_5_dram_q0;
    p_Val2_5_fu_4989_p1 <= var2chk_0_0_dram_q0;
    p_Val2_6_fu_5119_p1 <= var2chk_1_1_dram_q0;
    p_Val2_7_fu_5127_p1 <= var2chk_1_2_dram_q0;
    p_Val2_8_fu_5135_p1 <= var2chk_1_3_dram_q0;
    p_Val2_9_fu_5143_p1 <= var2chk_1_4_dram_q0;
    p_Val2_s_fu_4735_p1 <= var2chk_0_1_dram_q0;
    p_shl6_cast_fu_3350_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_3342_p3),6));
    p_shl_cast_fu_3338_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_3330_p3),6));
    sign_product_0_1_fu_5053_p2 <= (tmp5_fu_5047_p2 xor tmp4_fu_5035_p2);
    sign_product_0_2_fu_5077_p2 <= (tmp8_fu_5071_p2 xor tmp7_fu_5059_p2);
    sign_product_0_3_fu_5089_p2 <= (tmp11_fu_5083_p2 xor tmp3_fu_4971_p2);
    sign_product_0_4_fu_5101_p2 <= (tmp14_fu_5095_p2 xor tmp6_fu_5041_p2);
    sign_product_0_5_fu_5113_p2 <= (tmp17_fu_5107_p2 xor tmp9_fu_5065_p2);
    sign_product_1_1_fu_5437_p2 <= (tmp23_fu_5431_p2 xor tmp22_fu_5419_p2);
    sign_product_1_2_fu_5461_p2 <= (tmp26_fu_5455_p2 xor tmp25_fu_5443_p2);
    sign_product_1_3_fu_5473_p2 <= (tmp29_fu_5467_p2 xor tmp21_fu_5355_p2);
    sign_product_1_4_fu_5485_p2 <= (tmp32_fu_5479_p2 xor tmp24_fu_5425_p2);
    sign_product_1_5_fu_5497_p2 <= (tmp35_fu_5491_p2 xor tmp27_fu_5449_p2);
    sign_product_1_fu_5367_p2 <= (tmp20_fu_5361_p2 xor tmp19_fu_5349_p2);
    sign_product_2_1_fu_5821_p2 <= (tmp41_fu_5815_p2 xor tmp40_fu_5803_p2);
    sign_product_2_2_fu_5845_p2 <= (tmp44_fu_5839_p2 xor tmp43_fu_5827_p2);
    sign_product_2_3_fu_5857_p2 <= (tmp47_fu_5851_p2 xor tmp39_fu_5739_p2);
    sign_product_2_4_fu_5869_p2 <= (tmp50_fu_5863_p2 xor tmp42_fu_5809_p2);
    sign_product_2_5_fu_5881_p2 <= (tmp53_fu_5875_p2 xor tmp45_fu_5833_p2);
    sign_product_2_fu_5751_p2 <= (tmp38_fu_5745_p2 xor tmp37_fu_5733_p2);
    sign_product_fu_4983_p2 <= (tmp2_fu_4977_p2 xor tmp1_fu_4965_p2);
    soft_dec_out_AWADDR <= tmp_235_fu_8470_p1(32 - 1 downto 0);

    soft_dec_out_AWVALID_assign_proc : process(ap_CS_fsm_state69, tmp_38_fu_8458_p2, ap_reg_ioackin_soft_dec_out_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69) and (ap_const_lv1_0 = tmp_38_fu_8458_p2) and (ap_const_logic_0 = ap_reg_ioackin_soft_dec_out_AWREADY))) then 
            soft_dec_out_AWVALID <= ap_const_logic_1;
        else 
            soft_dec_out_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_out_BREADY_assign_proc : process(ap_CS_fsm_state76, soft_dec_out_BVALID)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76) and not((soft_dec_out_BVALID = ap_const_logic_0)))) then 
            soft_dec_out_BREADY <= ap_const_logic_1;
        else 
            soft_dec_out_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_out_WVALID_assign_proc : process(ap_CS_fsm_state72, ap_reg_ioackin_soft_dec_out_WREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state72) and (ap_const_logic_0 = ap_reg_ioackin_soft_dec_out_WREADY))) then 
            soft_dec_out_WVALID <= ap_const_logic_1;
        else 
            soft_dec_out_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_out_blk_n_AW_assign_proc : process(m_axi_soft_dec_out_AWREADY, ap_CS_fsm_state69, tmp_38_fu_8458_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state69) and (ap_const_lv1_0 = tmp_38_fu_8458_p2))) then 
            soft_dec_out_blk_n_AW <= m_axi_soft_dec_out_AWREADY;
        else 
            soft_dec_out_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    soft_dec_out_blk_n_B_assign_proc : process(m_axi_soft_dec_out_BVALID, ap_CS_fsm_state76)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state76))) then 
            soft_dec_out_blk_n_B <= m_axi_soft_dec_out_BVALID;
        else 
            soft_dec_out_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    soft_dec_out_blk_n_W_assign_proc : process(m_axi_soft_dec_out_WREADY, ap_CS_fsm_state72)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state72))) then 
            soft_dec_out_blk_n_W <= m_axi_soft_dec_out_WREADY;
        else 
            soft_dec_out_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    soft_dec_tmp_0_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_0_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_0_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_0_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_0_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_0_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_0_load_2_fu_7443_p1 <= soft_dec_tmp_0_q0;

    soft_dec_tmp_0_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_0_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_tmp_1_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_1_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_1_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_1_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_1_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_1_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_1_load_2_fu_7486_p1 <= soft_dec_tmp_1_q0;

    soft_dec_tmp_1_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_1_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_tmp_2_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_2_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_2_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_2_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_2_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_2_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_2_load_2_fu_7529_p1 <= soft_dec_tmp_2_q0;

    soft_dec_tmp_2_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_2_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_tmp_3_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_3_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_3_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_3_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_3_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_3_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_3_load_2_fu_7572_p1 <= soft_dec_tmp_3_q0;

    soft_dec_tmp_3_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_3_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_tmp_4_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_4_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_4_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_4_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_4_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_4_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_4_load_2_fu_7615_p1 <= soft_dec_tmp_4_q0;

    soft_dec_tmp_4_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_4_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    soft_dec_tmp_5_address0_assign_proc : process(tmp_24_reg_9981, ap_CS_fsm_state53, tmp_29_fu_7433_p1, ap_CS_fsm_state70, ap_CS_fsm_state52, tmp_45_fu_8493_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state70))) then 
            soft_dec_tmp_5_address0 <= tmp_45_fu_8493_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
            soft_dec_tmp_5_address0 <= tmp_29_fu_7433_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state52))) then 
            soft_dec_tmp_5_address0 <= tmp_24_reg_9981(8 - 1 downto 0);
        else 
            soft_dec_tmp_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    soft_dec_tmp_5_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state70, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state70)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_5_ce0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    soft_dec_tmp_5_load_2_fu_7658_p1 <= soft_dec_tmp_5_q0;

    soft_dec_tmp_5_we0_assign_proc : process(ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            soft_dec_tmp_5_we0 <= ap_const_logic_1;
        else 
            soft_dec_tmp_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_0_V_address0_assign_proc : process(ap_CS_fsm_state55, syndrome_0_V_addr_1_reg_10195, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state58, tmp_31_fu_7713_p1, tmp_33_fu_7927_p1, tmp_35_fu_8354_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            syndrome_0_V_address0 <= tmp_35_fu_8354_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_0_V_address0 <= syndrome_0_V_addr_1_reg_10195;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            syndrome_0_V_address0 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_0_V_address0 <= tmp_31_fu_7713_p1(8 - 1 downto 0);
        else 
            syndrome_0_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    syndrome_0_V_ce0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state59)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_0_V_ce0 <= ap_const_logic_1;
        else 
            syndrome_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_0_V_d0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state58, tmp_110_0_5_fu_8262_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_0_V_d0 <= tmp_110_0_5_fu_8262_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_0_V_d0 <= ap_const_lv1_1;
        else 
            syndrome_0_V_d0 <= "X";
        end if; 
    end process;


    syndrome_0_V_we0_assign_proc : process(ap_CS_fsm_state55, tmp_30_fu_7701_p2, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55) and (ap_const_lv1_0 = tmp_30_fu_7701_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_0_V_we0 <= ap_const_logic_1;
        else 
            syndrome_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_1_V_address0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state57, syndrome_1_V_addr_1_reg_10230, ap_CS_fsm_state59, ap_CS_fsm_state58, tmp_31_fu_7713_p1, tmp_33_fu_7927_p1, tmp_35_fu_8354_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            syndrome_1_V_address0 <= tmp_35_fu_8354_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_1_V_address0 <= syndrome_1_V_addr_1_reg_10230;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            syndrome_1_V_address0 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_1_V_address0 <= tmp_31_fu_7713_p1(8 - 1 downto 0);
        else 
            syndrome_1_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    syndrome_1_V_ce0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state59)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_1_V_ce0 <= ap_const_logic_1;
        else 
            syndrome_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_1_V_d0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state58, tmp_110_1_5_fu_8298_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_1_V_d0 <= tmp_110_1_5_fu_8298_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_1_V_d0 <= ap_const_lv1_1;
        else 
            syndrome_1_V_d0 <= "X";
        end if; 
    end process;


    syndrome_1_V_we0_assign_proc : process(ap_CS_fsm_state55, tmp_30_fu_7701_p2, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55) and (ap_const_lv1_0 = tmp_30_fu_7701_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_1_V_we0 <= ap_const_logic_1;
        else 
            syndrome_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_2_V_address0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state57, syndrome_2_V_addr_1_reg_10265, ap_CS_fsm_state59, ap_CS_fsm_state58, tmp_31_fu_7713_p1, tmp_33_fu_7927_p1, tmp_35_fu_8354_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state59))) then 
            syndrome_2_V_address0 <= tmp_35_fu_8354_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_2_V_address0 <= syndrome_2_V_addr_1_reg_10265;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            syndrome_2_V_address0 <= tmp_33_fu_7927_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_2_V_address0 <= tmp_31_fu_7713_p1(8 - 1 downto 0);
        else 
            syndrome_2_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    syndrome_2_V_ce0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state59)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_2_V_ce0 <= ap_const_logic_1;
        else 
            syndrome_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    syndrome_2_V_d0_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state58, tmp_110_2_5_fu_8335_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state58))) then 
            syndrome_2_V_d0 <= tmp_110_2_5_fu_8335_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            syndrome_2_V_d0 <= ap_const_lv1_1;
        else 
            syndrome_2_V_d0 <= "X";
        end if; 
    end process;


    syndrome_2_V_we0_assign_proc : process(ap_CS_fsm_state55, tmp_30_fu_7701_p2, ap_CS_fsm_state58)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state55) and (ap_const_lv1_0 = tmp_30_fu_7701_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)))) then 
            syndrome_2_V_we0 <= ap_const_logic_1;
        else 
            syndrome_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp11_fu_5083_p2 <= (tmp1_fu_4965_p2 xor tmp_83_fu_5029_p2);
    tmp14_fu_5095_p2 <= (tmp4_fu_5035_p2 xor tmp_52_fu_4807_p2);
    tmp17_fu_5107_p2 <= (tmp7_fu_5059_p2 xor tmp_57_fu_4845_p2);
    tmp19_fu_5349_p2 <= (tmp_129_fu_5191_p2 xor tmp_134_fu_5229_p2);
    tmp1_fu_4965_p2 <= (tmp_52_fu_4807_p2 xor tmp_57_fu_4845_p2);
    tmp20_fu_5361_p2 <= (tmp21_fu_5355_p2 xor tmp_139_fu_5267_p2);
    tmp21_fu_5355_p2 <= (tmp_144_fu_5305_p2 xor tmp_149_fu_5343_p2);
    tmp22_fu_5419_p2 <= (tmp_134_fu_5229_p2 xor tmp_139_fu_5267_p2);
    tmp23_fu_5431_p2 <= (tmp24_fu_5425_p2 xor tmp_144_fu_5305_p2);
    tmp24_fu_5425_p2 <= (tmp_149_fu_5343_p2 xor tmp_155_fu_5413_p2);
    tmp25_fu_5443_p2 <= (tmp_139_fu_5267_p2 xor tmp_144_fu_5305_p2);
    tmp26_fu_5455_p2 <= (tmp27_fu_5449_p2 xor tmp_149_fu_5343_p2);
    tmp27_fu_5449_p2 <= (tmp_155_fu_5413_p2 xor tmp_129_fu_5191_p2);
    tmp29_fu_5467_p2 <= (tmp19_fu_5349_p2 xor tmp_155_fu_5413_p2);
    tmp2_fu_4977_p2 <= (tmp3_fu_4971_p2 xor tmp_62_fu_4883_p2);
    tmp32_fu_5479_p2 <= (tmp22_fu_5419_p2 xor tmp_129_fu_5191_p2);
    tmp35_fu_5491_p2 <= (tmp25_fu_5443_p2 xor tmp_134_fu_5229_p2);
    tmp37_fu_5733_p2 <= (tmp_167_fu_5575_p2 xor tmp_172_fu_5613_p2);
    tmp38_fu_5745_p2 <= (tmp39_fu_5739_p2 xor tmp_177_fu_5651_p2);
    tmp39_fu_5739_p2 <= (tmp_182_fu_5689_p2 xor tmp_187_fu_5727_p2);
    tmp3_fu_4971_p2 <= (tmp_67_fu_4921_p2 xor tmp_72_fu_4959_p2);
    tmp40_fu_5803_p2 <= (tmp_172_fu_5613_p2 xor tmp_177_fu_5651_p2);
    tmp41_fu_5815_p2 <= (tmp42_fu_5809_p2 xor tmp_182_fu_5689_p2);
    tmp42_fu_5809_p2 <= (tmp_187_fu_5727_p2 xor tmp_193_fu_5797_p2);
    tmp43_fu_5827_p2 <= (tmp_177_fu_5651_p2 xor tmp_182_fu_5689_p2);
    tmp44_fu_5839_p2 <= (tmp45_fu_5833_p2 xor tmp_187_fu_5727_p2);
    tmp45_fu_5833_p2 <= (tmp_193_fu_5797_p2 xor tmp_167_fu_5575_p2);
    tmp47_fu_5851_p2 <= (tmp37_fu_5733_p2 xor tmp_193_fu_5797_p2);
    tmp4_fu_5035_p2 <= (tmp_57_fu_4845_p2 xor tmp_62_fu_4883_p2);
    tmp50_fu_5863_p2 <= (tmp40_fu_5803_p2 xor tmp_167_fu_5575_p2);
    tmp53_fu_5875_p2 <= (tmp43_fu_5827_p2 xor tmp_172_fu_5613_p2);
    tmp55_fu_8242_p2 <= (tmp56_fu_8238_p2 xor syndrome_0_V_q0);
    tmp56_fu_8238_p2 <= (hard_dec_tmp_0_V_lo_reg_10200 xor hard_dec_tmp_1_V_lo_reg_10205);
    tmp57_fu_8256_p2 <= (tmp59_fu_8252_p2 xor tmp58_fu_8248_p2);
    tmp58_fu_8248_p2 <= (hard_dec_tmp_2_V_lo_reg_10210 xor hard_dec_tmp_3_V_lo_reg_10215);
    tmp59_fu_8252_p2 <= (hard_dec_tmp_4_V_lo_reg_10220 xor hard_dec_tmp_5_V_lo_reg_10225);
    tmp5_fu_5047_p2 <= (tmp6_fu_5041_p2 xor tmp_67_fu_4921_p2);
    tmp60_fu_8275_p2 <= (tmp61_fu_8269_p2 xor syndrome_1_V_q0);
    tmp61_fu_8269_p2 <= (hard_dec_tmp_0_V_q0 xor hard_dec_tmp_1_V_q0);
    tmp62_fu_8292_p2 <= (tmp64_fu_8286_p2 xor tmp63_fu_8281_p2);
    tmp63_fu_8281_p2 <= (hard_dec_tmp_2_V_q0 xor hard_dec_tmp_3_V_lo_1_reg_10250);
    tmp64_fu_8286_p2 <= (hard_dec_tmp_4_V_q0 xor hard_dec_tmp_5_V_q0);
    tmp65_fu_8311_p2 <= (tmp66_fu_8305_p2 xor syndrome_2_V_q0);
    tmp66_fu_8305_p2 <= (hard_dec_tmp_0_V_q1 xor hard_dec_tmp_1_V_q1);
    tmp67_fu_8329_p2 <= (tmp69_fu_8323_p2 xor tmp68_fu_8317_p2);
    tmp68_fu_8317_p2 <= (hard_dec_tmp_2_V_q1 xor hard_dec_tmp_3_V_q1);
    tmp69_fu_8323_p2 <= (hard_dec_tmp_4_V_q1 xor hard_dec_tmp_5_V_q1);
    tmp6_fu_5041_p2 <= (tmp_72_fu_4959_p2 xor tmp_83_fu_5029_p2);
    tmp70_fu_8361_p2 <= (syndrome_1_V_q0 and syndrome_2_V_q0);
    tmp7_fu_5059_p2 <= (tmp_62_fu_4883_p2 xor tmp_67_fu_4921_p2);
    tmp8_fu_5071_p2 <= (tmp9_fu_5065_p2 xor tmp_72_fu_4959_p2);
    tmp9_fu_5065_p2 <= (tmp_83_fu_5029_p2 xor tmp_52_fu_4807_p2);
    tmp_102_fu_7576_p4 <= soft_dec_tmp_3_load_2_fu_7572_p1(30 downto 23);
    tmp_103_fu_3903_p1 <= var2chk_shift_idx_2_2(9 - 1 downto 0);
    tmp_104_fu_7602_p2 <= (notrhs9_fu_7596_p2 or notlhs9_fu_7590_p2);
    tmp_107_fu_7619_p4 <= soft_dec_tmp_4_load_2_fu_7615_p1(30 downto 23);
    tmp_108_0_1_fu_7771_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_D));
    tmp_108_0_2_fu_7803_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_19));
    tmp_108_0_3_fu_7834_p2 <= std_logic_vector(unsigned(idx_8_cast_fu_7720_p1) + unsigned(ap_const_lv9_A6));
    tmp_108_0_4_fu_7865_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_11));
    tmp_108_0_5_fu_7896_p2 <= std_logic_vector(unsigned(idx_8_cast_fu_7720_p1) + unsigned(ap_const_lv9_81));
    tmp_108_1_1_fu_7969_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_26));
    tmp_108_1_2_fu_8000_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_89));
    tmp_108_1_4_fu_8029_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_A0));
    tmp_108_1_5_fu_8058_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_88));
    tmp_108_1_fu_7935_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_7C));
    tmp_108_2_1_fu_8118_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_98));
    tmp_108_2_2_fu_8147_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_59));
    tmp_108_2_3_fu_8178_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_49));
    tmp_108_2_5_fu_8209_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_91));
    tmp_108_2_fu_8087_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_4B));
    tmp_108_fu_7736_p2 <= std_logic_vector(unsigned(idx_8_cast_fu_7720_p1) + unsigned(ap_const_lv9_73));
    tmp_109_0_1_fu_7797_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_0_1_fu_7789_p3),64));
    tmp_109_0_2_fu_7829_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_0_2_fu_7821_p3),64));
    tmp_109_0_3_fu_7860_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_0_3_fu_7852_p3),64));
    tmp_109_0_4_fu_7891_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_0_4_fu_7883_p3),64));
    tmp_109_0_5_fu_7922_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_0_5_fu_7914_p3),64));
    tmp_109_1_1_fu_7995_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_1_1_fu_7987_p3),64));
    tmp_109_1_2_fu_8024_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_1_2_fu_8016_p3),64));
    tmp_109_1_4_fu_8053_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_1_4_fu_8045_p3),64));
    tmp_109_1_5_fu_8082_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_1_5_fu_8074_p3),64));
    tmp_109_1_fu_7964_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_1_fu_7956_p3),64));
    tmp_109_2_1_fu_8142_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_2_1_fu_8134_p3),64));
    tmp_109_2_2_fu_8173_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_2_2_fu_8165_p3),64));
    tmp_109_2_3_fu_8204_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_2_3_fu_8196_p3),64));
    tmp_109_2_5_fu_8233_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_2_5_fu_8225_p3),64));
    tmp_109_2_fu_8113_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_2_fu_8105_p3),64));
    tmp_109_fu_7766_p1 <= std_logic_vector(resize(unsigned(tmp_idx_9_fu_7758_p3),64));
    tmp_110_0_5_fu_8262_p2 <= (tmp57_fu_8256_p2 xor tmp55_fu_8242_p2);
    tmp_110_1_5_fu_8298_p2 <= (tmp62_fu_8292_p2 xor tmp60_fu_8275_p2);
    tmp_110_2_5_fu_8335_p2 <= (tmp67_fu_8329_p2 xor tmp65_fu_8311_p2);
    tmp_110_fu_3911_p1 <= var2chk_shift_idx_2_3(9 - 1 downto 0);
    tmp_111_fu_7645_p2 <= (notrhs10_fu_7639_p2 or notlhs10_fu_7633_p2);
    tmp_114_fu_7662_p4 <= soft_dec_tmp_5_load_2_fu_7658_p1(30 downto 23);
    tmp_115_fu_3919_p1 <= var2chk_shift_idx_2_4(9 - 1 downto 0);
    tmp_116_fu_7688_p2 <= (notrhs11_fu_7682_p2 or notlhs11_fu_7676_p2);
    tmp_119_fu_8367_p2 <= (tmp70_fu_8361_p2 and syndrome_0_V_q0);
    tmp_120_fu_3927_p1 <= var2chk_shift_idx_2_5(9 - 1 downto 0);
    tmp_121_fu_3935_p1 <= var2chk_shift_idx_2_s(9 - 1 downto 0);
    tmp_122_fu_4739_p1 <= p_Val2_s_fu_4735_p1(31 - 1 downto 0);
    tmp_123_fu_4747_p1 <= p_Val2_1_fu_4743_p1(31 - 1 downto 0);
    tmp_124_fu_4755_p1 <= p_Val2_2_fu_4751_p1(31 - 1 downto 0);
    tmp_125_fu_5159_p4 <= p_Val2_6_fu_5119_p1(30 downto 23);
    tmp_126_fu_4763_p1 <= p_Val2_3_fu_4759_p1(31 - 1 downto 0);
    tmp_127_fu_5185_p2 <= (notrhs12_fu_5179_p2 or notlhs12_fu_5173_p2);
    tmp_129_fu_5191_p2 <= (tmp_127_fu_5185_p2 and tmp_128_fu_3150_p2);
    tmp_12_fu_3741_p1 <= std_logic_vector(resize(unsigned(jdx_0_i_reg_2233),64));
    tmp_130_fu_5197_p4 <= p_Val2_7_fu_5127_p1(30 downto 23);
    tmp_131_fu_4771_p1 <= p_Val2_4_fu_4767_p1(31 - 1 downto 0);
    tmp_132_fu_5223_p2 <= (notrhs13_fu_5217_p2 or notlhs13_fu_5211_p2);
    tmp_134_fu_5229_p2 <= (tmp_132_fu_5223_p2 and tmp_133_fu_3156_p2);
    tmp_135_fu_5235_p4 <= p_Val2_8_fu_5135_p1(30 downto 23);
    tmp_136_fu_4785_p1 <= p_Val2_s_fu_4735_p1(23 - 1 downto 0);
    tmp_137_fu_5261_p2 <= (notrhs14_fu_5255_p2 or notlhs14_fu_5249_p2);
    tmp_139_fu_5267_p2 <= (tmp_137_fu_5261_p2 and tmp_138_fu_3162_p2);
    tmp_13_fu_3773_p2 <= "1" when (idx_2_reg_2255 = ap_const_lv8_A7) else "0";
    tmp_140_fu_5273_p4 <= p_Val2_9_fu_5143_p1(30 downto 23);
    tmp_141_fu_4823_p1 <= p_Val2_1_fu_4743_p1(23 - 1 downto 0);
    tmp_142_fu_5299_p2 <= (notrhs15_fu_5293_p2 or notlhs15_fu_5287_p2);
    tmp_144_fu_5305_p2 <= (tmp_142_fu_5299_p2 and tmp_143_fu_3168_p2);
    tmp_145_fu_5311_p4 <= p_Val2_10_fu_5151_p1(30 downto 23);
    tmp_146_fu_4861_p1 <= p_Val2_2_fu_4751_p1(23 - 1 downto 0);
    tmp_147_fu_5337_p2 <= (notrhs16_fu_5331_p2 or notlhs16_fu_5325_p2);
    tmp_149_fu_5343_p2 <= (tmp_147_fu_5337_p2 and tmp_148_fu_3174_p2);
    tmp_14_fu_3785_p1 <= std_logic_vector(resize(unsigned(idx_2_reg_2255),64));
    tmp_150_fu_4899_p1 <= p_Val2_3_fu_4759_p1(23 - 1 downto 0);
    tmp_151_fu_5381_p4 <= p_Val2_11_fu_5373_p1(30 downto 23);
    tmp_152_fu_4937_p1 <= p_Val2_4_fu_4767_p1(23 - 1 downto 0);
    tmp_153_fu_5407_p2 <= (notrhs17_fu_5401_p2 or notlhs17_fu_5395_p2);
    tmp_155_fu_5413_p2 <= (tmp_153_fu_5407_p2 and tmp_154_fu_3180_p2);
    tmp_158_fu_4993_p1 <= p_Val2_5_fu_4989_p1(31 - 1 downto 0);
    tmp_159_fu_5007_p1 <= p_Val2_5_fu_4989_p1(23 - 1 downto 0);
    tmp_15_fu_4095_p2 <= "1" when (n_iter_reg_2278 = ap_const_lv5_14) else "0";
    tmp_160_fu_7457_p1 <= soft_dec_tmp_0_load_2_fu_7443_p1(23 - 1 downto 0);
    tmp_161_fu_7500_p1 <= soft_dec_tmp_1_load_2_fu_7486_p1(23 - 1 downto 0);
    tmp_162_fu_7543_p1 <= soft_dec_tmp_2_load_2_fu_7529_p1(23 - 1 downto 0);
    tmp_163_fu_5543_p4 <= p_Val2_12_fu_5503_p1(30 downto 23);
    tmp_164_fu_7586_p1 <= soft_dec_tmp_3_load_2_fu_7572_p1(23 - 1 downto 0);
    tmp_165_fu_5569_p2 <= (notrhs18_fu_5563_p2 or notlhs18_fu_5557_p2);
    tmp_167_fu_5575_p2 <= (tmp_165_fu_5569_p2 and tmp_166_fu_3186_p2);
    tmp_168_fu_5581_p4 <= p_Val2_13_fu_5511_p1(30 downto 23);
    tmp_169_fu_7629_p1 <= soft_dec_tmp_4_load_2_fu_7615_p1(23 - 1 downto 0);
    tmp_16_fu_4083_p2 <= "1" when (jdx_2_reg_2267 = ap_const_lv2_3) else "0";
    tmp_170_fu_5607_p2 <= (notrhs19_fu_5601_p2 or notlhs19_fu_5595_p2);
    tmp_172_fu_5613_p2 <= (tmp_170_fu_5607_p2 and tmp_171_fu_3192_p2);
    tmp_173_fu_5619_p4 <= p_Val2_14_fu_5519_p1(30 downto 23);
    tmp_174_fu_7672_p1 <= soft_dec_tmp_5_load_2_fu_7658_p1(23 - 1 downto 0);
    tmp_175_fu_5645_p2 <= (notrhs20_fu_5639_p2 or notlhs20_fu_5633_p2);
    tmp_177_fu_5651_p2 <= (tmp_175_fu_5645_p2 and tmp_176_fu_3198_p2);
    tmp_178_fu_5657_p4 <= p_Val2_15_fu_5527_p1(30 downto 23);
    tmp_179_fu_7742_p2 <= "1" when (unsigned(tmp_108_fu_7736_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_17_fu_4107_p2 <= "1" when (i_assign_2_phi_fu_2293_p4 = ap_const_lv8_A7) else "0";
    tmp_180_fu_5683_p2 <= (notrhs21_fu_5677_p2 or notlhs21_fu_5671_p2);
    tmp_182_fu_5689_p2 <= (tmp_180_fu_5683_p2 and tmp_181_fu_3204_p2);
    tmp_183_fu_5695_p4 <= p_Val2_16_fu_5535_p1(30 downto 23);
    tmp_184_fu_7748_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_CC));
    tmp_185_fu_5721_p2 <= (notrhs22_fu_5715_p2 or notlhs22_fu_5709_p2);
    tmp_187_fu_5727_p2 <= (tmp_185_fu_5721_p2 and tmp_186_fu_3210_p2);
    tmp_188_fu_7777_p2 <= "1" when (unsigned(tmp_108_0_1_fu_7771_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_189_fu_5765_p4 <= p_Val2_17_fu_5757_p1(30 downto 23);
    tmp_18_fu_3718_p1 <= std_logic_vector(resize(unsigned(phi_mul_reg_2222),64));
    tmp_190_fu_7783_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_66));
    tmp_191_fu_5791_p2 <= (notrhs23_fu_5785_p2 or notlhs23_fu_5779_p2);
    tmp_193_fu_5797_p2 <= (tmp_191_fu_5791_p2 and tmp_192_fu_3216_p2);
    tmp_194_fu_7809_p2 <= "1" when (unsigned(tmp_108_0_2_fu_7803_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_195_fu_7815_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_72));
    tmp_196_fu_7840_p2 <= "1" when (unsigned(tmp_108_0_3_fu_7834_p2) < unsigned(ap_const_lv9_A7)) else "0";
        tmp_197_cast_fu_3381_p1 <= std_logic_vector(resize(signed(tmp_19_fu_3376_p2),64));

    tmp_197_fu_7846_p2 <= std_logic_vector(unsigned(idx_8_cast_fu_7720_p1) + unsigned(ap_const_lv9_1FF));
    tmp_198_fu_7871_p2 <= "1" when (unsigned(tmp_108_0_4_fu_7865_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_199_fu_7877_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_6A));
    tmp_19_fu_3376_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_3372_p1) + unsigned(tmp_5_reg_8529));
    tmp_1_fu_3330_p3 <= (idx_reg_2186 & ap_const_lv3_0);
    tmp_200_fu_7902_p2 <= "1" when (unsigned(tmp_108_0_5_fu_7896_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_201_fu_7908_p2 <= std_logic_vector(unsigned(idx_8_cast_fu_7720_p1) + unsigned(ap_const_lv9_1DA));
        tmp_202_cast_fu_7754_p1 <= std_logic_vector(resize(signed(tmp_184_fu_7748_p2),9));

    tmp_202_fu_7940_p2 <= "1" when (unsigned(tmp_108_1_fu_7935_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_203_fu_7946_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_D5));
    tmp_204_fu_7975_p2 <= "1" when (unsigned(tmp_108_1_1_fu_7969_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_205_fu_7981_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_7F));
    tmp_206_fu_8005_p2 <= "1" when (unsigned(tmp_108_1_2_fu_8000_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_207_fu_8011_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_1E2));
    tmp_208_fu_8034_p2 <= "1" when (unsigned(tmp_108_1_4_fu_8029_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_209_fu_8040_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_1F9));
    tmp_20_fu_6553_p2 <= "1" when (i_assign_1_reg_2301 = ap_const_lv8_A7) else "0";
    tmp_210_fu_8063_p2 <= "1" when (unsigned(tmp_108_1_5_fu_8058_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_211_fu_8069_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_1E1));
    tmp_212_fu_8093_p2 <= "1" when (unsigned(tmp_108_2_fu_8087_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_213_fu_8099_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_A4));
        tmp_214_cast_fu_7952_p1 <= std_logic_vector(resize(signed(tmp_203_fu_7946_p2),9));

    tmp_214_fu_8123_p2 <= "1" when (unsigned(tmp_108_2_1_fu_8118_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_215_fu_8129_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_1F1));
    tmp_216_fu_8153_p2 <= "1" when (unsigned(tmp_108_2_2_fu_8147_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_217_fu_8159_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_B2));
    tmp_218_fu_8184_p2 <= "1" when (unsigned(tmp_108_2_3_fu_8178_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_219_fu_8190_p2 <= std_logic_vector(unsigned(idx_8_reg_2345) + unsigned(ap_const_lv8_A2));
    tmp_220_fu_8214_p2 <= "1" when (unsigned(tmp_108_2_5_fu_8209_p2) < unsigned(ap_const_lv9_A7)) else "0";
    tmp_221_fu_8220_p2 <= std_logic_vector(unsigned(idx_8_cast_reg_10137) + unsigned(ap_const_lv9_1EA));
    tmp_222_fu_5123_p1 <= p_Val2_6_fu_5119_p1(31 - 1 downto 0);
    tmp_223_fu_5131_p1 <= p_Val2_7_fu_5127_p1(31 - 1 downto 0);
    tmp_224_fu_5139_p1 <= p_Val2_8_fu_5135_p1(31 - 1 downto 0);
    tmp_225_fu_5147_p1 <= p_Val2_9_fu_5143_p1(31 - 1 downto 0);
    tmp_226_fu_5155_p1 <= p_Val2_10_fu_5151_p1(31 - 1 downto 0);
    tmp_227_fu_5169_p1 <= p_Val2_6_fu_5119_p1(23 - 1 downto 0);
    tmp_228_fu_5207_p1 <= p_Val2_7_fu_5127_p1(23 - 1 downto 0);
    tmp_229_fu_5245_p1 <= p_Val2_8_fu_5135_p1(23 - 1 downto 0);
    tmp_22_fu_6569_p1 <= std_logic_vector(resize(unsigned(i_assign_1_reg_2301),64));
    tmp_230_fu_5283_p1 <= p_Val2_9_fu_5143_p1(23 - 1 downto 0);
    tmp_231_fu_5321_p1 <= p_Val2_10_fu_5151_p1(23 - 1 downto 0);
    tmp_232_fu_5377_p1 <= p_Val2_11_fu_5373_p1(31 - 1 downto 0);
    tmp_233_fu_5391_p1 <= p_Val2_11_fu_5373_p1(23 - 1 downto 0);
    tmp_234_fu_8397_p1 <= std_logic_vector(resize(unsigned(phi_mul7_reg_2392),64));
    tmp_235_fu_8470_p1 <= std_logic_vector(resize(unsigned(phi_mul9_reg_2426),64));
    tmp_236_fu_5507_p1 <= p_Val2_12_fu_5503_p1(31 - 1 downto 0);
    tmp_237_fu_5515_p1 <= p_Val2_13_fu_5511_p1(31 - 1 downto 0);
    tmp_238_fu_5523_p1 <= p_Val2_14_fu_5519_p1(31 - 1 downto 0);
    tmp_239_fu_5531_p1 <= p_Val2_15_fu_5527_p1(31 - 1 downto 0);
    tmp_23_fu_7195_p2 <= "1" when (i_assign_reg_2312 = ap_const_lv8_A7) else "0";
    tmp_240_fu_5539_p1 <= p_Val2_16_fu_5535_p1(31 - 1 downto 0);
    tmp_241_fu_5553_p1 <= p_Val2_12_fu_5503_p1(23 - 1 downto 0);
    tmp_242_fu_5591_p1 <= p_Val2_13_fu_5511_p1(23 - 1 downto 0);
    tmp_243_fu_5629_p1 <= p_Val2_14_fu_5519_p1(23 - 1 downto 0);
    tmp_244_fu_5667_p1 <= p_Val2_15_fu_5527_p1(23 - 1 downto 0);
    tmp_245_fu_5705_p1 <= p_Val2_16_fu_5535_p1(23 - 1 downto 0);
    tmp_246_fu_5761_p1 <= p_Val2_17_fu_5757_p1(31 - 1 downto 0);
    tmp_247_fu_5775_p1 <= p_Val2_17_fu_5757_p1(23 - 1 downto 0);
    tmp_24_fu_7207_p1 <= std_logic_vector(resize(unsigned(i_assign_reg_2312),64));
    tmp_25_fu_7222_p2 <= "1" when (unsigned(tmp_idx_fu_7217_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_26_fu_7246_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_cast_fu_7242_p1),64));
    tmp_28_fu_7421_p2 <= "1" when (jdx_5_reg_2323 = ap_const_lv8_A7) else "0";
    tmp_29_fu_7433_p1 <= std_logic_vector(resize(unsigned(jdx_5_reg_2323),64));
    tmp_2_fu_3706_p2 <= "1" when (idx_0_i_reg_2210 = ap_const_lv3_6) else "0";
    tmp_30_fu_7701_p2 <= "1" when (idx_7_reg_2334 = ap_const_lv8_A7) else "0";
    tmp_31_fu_7713_p1 <= std_logic_vector(resize(unsigned(idx_7_reg_2334),64));
    tmp_32_fu_7724_p2 <= "1" when (idx_8_reg_2345 = ap_const_lv8_A7) else "0";
    tmp_33_fu_7927_p1 <= std_logic_vector(resize(unsigned(idx_8_reg_2345),64));
    tmp_34_fu_8342_p2 <= "1" when (idx_9_reg_2369 = ap_const_lv8_A7) else "0";
    tmp_35_fu_8354_p1 <= std_logic_vector(resize(unsigned(idx_9_reg_2369),64));
    tmp_36_fu_8385_p2 <= "1" when (idx_0_i1_reg_2380 = ap_const_lv3_6) else "0";
    tmp_37_fu_3392_p2 <= "1" when (unsigned(tmp_6_fu_3386_p2) < unsigned(ap_const_lv8_A7)) else "0";
    tmp_38_fu_8458_p2 <= "1" when (idx_1_i_reg_2414 = ap_const_lv3_6) else "0";
    tmp_39_fu_8408_p2 <= "1" when (jdx_0_i1_reg_2403 = ap_const_lv8_A7) else "0";
    tmp_3_fu_3360_p2 <= "1" when (jdx_reg_2198 = ap_const_lv3_6) else "0";
    tmp_40_fu_3398_p2 <= std_logic_vector(unsigned(tmp_6_fu_3386_p2) + unsigned(ap_const_lv8_59));
    tmp_41_fu_8420_p1 <= std_logic_vector(resize(unsigned(jdx_0_i1_reg_2403),64));
    tmp_42_fu_3799_p1 <= var2chk_shift_idx_0_1(9 - 1 downto 0);
    tmp_44_fu_8481_p2 <= "1" when (jdx_1_i_reg_2437 = ap_const_lv8_A7) else "0";
    tmp_45_fu_8493_p1 <= std_logic_vector(resize(unsigned(jdx_1_i_reg_2437),64));
    tmp_46_fu_3807_p1 <= var2chk_shift_idx_0_2(9 - 1 downto 0);
    tmp_47_fu_3815_p1 <= var2chk_shift_idx_0_3(9 - 1 downto 0);
    tmp_48_fu_4775_p4 <= p_Val2_s_fu_4735_p1(30 downto 23);
    tmp_49_fu_3823_p1 <= var2chk_shift_idx_0_4(9 - 1 downto 0);
    tmp_4_fu_3342_p3 <= (idx_reg_2186 & ap_const_lv1_0);
    tmp_50_fu_4801_p2 <= (notrhs_fu_4795_p2 or notlhs_fu_4789_p2);
    tmp_52_fu_4807_p2 <= (tmp_50_fu_4801_p2 and grp_fu_3114_p2);
    tmp_53_fu_4813_p4 <= p_Val2_1_fu_4743_p1(30 downto 23);
    tmp_54_fu_3831_p1 <= var2chk_shift_idx_0_5(9 - 1 downto 0);
    tmp_55_1_fu_7256_p2 <= "1" when (unsigned(tmp_idx_s_fu_7251_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_55_2_fu_7290_p2 <= "1" when (unsigned(tmp_idx_6_fu_7285_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_55_3_fu_7324_p2 <= "1" when (unsigned(tmp_idx_3_fu_7319_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_55_4_fu_7358_p2 <= "1" when (unsigned(tmp_idx_4_fu_7353_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_55_5_fu_7392_p2 <= "1" when (unsigned(tmp_idx_5_fu_7387_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_55_fu_4839_p2 <= (notrhs1_fu_4833_p2 or notlhs1_fu_4827_p2);
    tmp_56_1_fu_7280_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_1_cast_fu_7276_p1),64));
    tmp_56_2_fu_7314_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_2_cast_fu_7310_p1),64));
    tmp_56_3_fu_7348_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_3_cast_fu_7344_p1),64));
    tmp_56_4_fu_7382_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_4_cast_fu_7378_p1),64));
    tmp_56_5_fu_7416_p1 <= std_logic_vector(resize(unsigned(tmp_idx_2_5_cast_fu_7412_p1),64));
    tmp_57_fu_4845_p2 <= (tmp_55_fu_4839_p2 and grp_fu_3120_p2);
    tmp_58_fu_4851_p4 <= p_Val2_2_fu_4751_p1(30 downto 23);
    tmp_59_fu_3839_p1 <= var2chk_shift_idx_0_s(9 - 1 downto 0);
    tmp_5_cast_fu_3372_p1 <= std_logic_vector(resize(unsigned(jdx_reg_2198),6));
    tmp_5_fu_3354_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_3338_p1) - unsigned(p_shl6_cast_fu_3350_p1));
    tmp_60_fu_4877_p2 <= (notrhs2_fu_4871_p2 or notlhs2_fu_4865_p2);
    tmp_62_fu_4883_p2 <= (tmp_60_fu_4877_p2 and grp_fu_3126_p2);
    tmp_63_fu_4889_p4 <= p_Val2_3_fu_4759_p1(30 downto 23);
    tmp_64_fu_3847_p1 <= var2chk_shift_idx_1_1(9 - 1 downto 0);
    tmp_65_fu_4915_p2 <= (notrhs3_fu_4909_p2 or notlhs3_fu_4903_p2);
    tmp_67_fu_4921_p2 <= (tmp_65_fu_4915_p2 and grp_fu_3132_p2);
    tmp_68_fu_4927_p4 <= p_Val2_4_fu_4767_p1(30 downto 23);
    tmp_69_fu_3855_p1 <= var2chk_shift_idx_1_2(9 - 1 downto 0);
    tmp_6_fu_3386_p2 <= std_logic_vector(signed(ap_const_lv8_A7) - signed(H_proto_shift_q0));
    tmp_70_fu_4953_p2 <= (notrhs4_fu_4947_p2 or notlhs4_fu_4941_p2);
    tmp_72_fu_4959_p2 <= (tmp_70_fu_4953_p2 and grp_fu_3138_p2);
    tmp_73_fu_6135_p1 <= tmp_82_neg_fu_6129_p2;
    tmp_74_fu_6140_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_75_0_0_1_fu_4162_p2 <= "1" when (unsigned(tmp_idx_3_0_0_1_fu_4157_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_0_0_2_fu_4196_p2 <= "1" when (unsigned(tmp_idx_3_0_0_2_fu_4191_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_0_0_3_fu_4230_p2 <= "1" when (unsigned(tmp_idx_3_0_0_3_fu_4225_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_0_0_4_fu_4264_p2 <= "1" when (unsigned(tmp_idx_3_0_0_4_fu_4259_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_0_1_4_fu_4298_p2 <= "1" when (unsigned(tmp_idx_3_0_1_4_fu_4293_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_0_1_fu_4366_p2 <= "1" when (unsigned(tmp_idx_3_1_0_1_fu_4361_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_0_2_fu_4400_p2 <= "1" when (unsigned(tmp_idx_3_1_0_2_fu_4395_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_0_3_fu_4434_p2 <= "1" when (unsigned(tmp_idx_3_1_0_3_fu_4429_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_0_4_fu_4468_p2 <= "1" when (unsigned(tmp_idx_3_1_0_4_fu_4463_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_1_4_fu_4502_p2 <= "1" when (unsigned(tmp_idx_3_1_1_4_fu_4497_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_1_fu_4332_p2 <= "1" when (unsigned(tmp_idx_3_1_fu_4327_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_0_1_fu_4570_p2 <= "1" when (unsigned(tmp_idx_3_2_0_1_fu_4565_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_0_2_fu_4604_p2 <= "1" when (unsigned(tmp_idx_3_2_0_2_fu_4599_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_0_3_fu_4638_p2 <= "1" when (unsigned(tmp_idx_3_2_0_3_fu_4633_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_0_4_fu_4672_p2 <= "1" when (unsigned(tmp_idx_3_2_0_4_fu_4667_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_1_4_fu_4706_p2 <= "1" when (unsigned(tmp_idx_3_2_1_4_fu_4701_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_2_fu_4536_p2 <= "1" when (unsigned(tmp_idx_3_2_fu_4531_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_75_fu_4128_p2 <= "1" when (unsigned(tmp_idx_10_fu_4123_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_76_0_0_1_fu_4186_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_0_1_cast_fu_4182_p1),64));
    tmp_76_0_0_2_fu_4220_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_0_2_cast_fu_4216_p1),64));
    tmp_76_0_0_3_fu_4254_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_0_3_cast_fu_4250_p1),64));
    tmp_76_0_0_4_fu_4288_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_0_4_cast_fu_4284_p1),64));
    tmp_76_0_1_4_fu_4322_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_1_4_cast_fu_4318_p1),64));
    tmp_76_1_0_1_fu_4390_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_0_1_cast_fu_4386_p1),64));
    tmp_76_1_0_2_fu_4424_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_0_2_cast_fu_4420_p1),64));
    tmp_76_1_0_3_fu_4458_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_0_3_cast_fu_4454_p1),64));
    tmp_76_1_0_4_fu_4492_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_0_4_cast_fu_4488_p1),64));
    tmp_76_1_1_4_fu_4526_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_1_4_cast_fu_4522_p1),64));
    tmp_76_1_fu_4356_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_1_cast_fu_4352_p1),64));
    tmp_76_2_0_1_fu_4594_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_0_1_cast_fu_4590_p1),64));
    tmp_76_2_0_2_fu_4628_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_0_2_cast_fu_4624_p1),64));
    tmp_76_2_0_3_fu_4662_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_0_3_cast_fu_4658_p1),64));
    tmp_76_2_0_4_fu_4696_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_0_4_cast_fu_4692_p1),64));
    tmp_76_2_1_4_fu_4730_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_1_4_cast_fu_4726_p1),64));
    tmp_76_2_fu_4560_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_2_cast_fu_4556_p1),64));
    tmp_76_fu_4152_p1 <= std_logic_vector(resize(unsigned(tmp_idx_5_0_cast_fu_4148_p1),64));
    tmp_77_fu_6121_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_78_fu_3863_p1 <= var2chk_shift_idx_1_3(9 - 1 downto 0);
    tmp_79_fu_4997_p4 <= p_Val2_5_fu_4989_p1(30 downto 23);
    tmp_7_fu_3763_p1 <= std_logic_vector(resize(unsigned(jdx_1_reg_2244),64));
    tmp_80_fu_3871_p1 <= var2chk_shift_idx_1_4(9 - 1 downto 0);
    tmp_81_fu_5023_p2 <= (notrhs5_fu_5017_p2 or notlhs5_fu_5011_p2);
    tmp_82_0_1_fu_6159_p1 <= tmp_82_neg_0_1_fu_6153_p2;
    tmp_82_0_2_fu_6183_p1 <= tmp_82_neg_0_2_fu_6177_p2;
    tmp_82_0_3_fu_6207_p1 <= tmp_82_neg_0_3_fu_6201_p2;
    tmp_82_0_4_fu_6231_p1 <= tmp_82_neg_0_4_fu_6225_p2;
    tmp_82_0_5_fu_6255_p1 <= tmp_82_neg_0_5_fu_6249_p2;
    tmp_82_1_1_fu_6303_p1 <= tmp_82_neg_1_1_fu_6297_p2;
    tmp_82_1_2_fu_6327_p1 <= tmp_82_neg_1_2_fu_6321_p2;
    tmp_82_1_3_fu_6351_p1 <= tmp_82_neg_1_3_fu_6345_p2;
    tmp_82_1_4_fu_6375_p1 <= tmp_82_neg_1_4_fu_6369_p2;
    tmp_82_1_5_fu_6399_p1 <= tmp_82_neg_1_5_fu_6393_p2;
    tmp_82_1_fu_6279_p1 <= tmp_82_neg_1_fu_6273_p2;
    tmp_82_2_1_fu_6447_p1 <= tmp_82_neg_2_1_fu_6441_p2;
    tmp_82_2_2_fu_6471_p1 <= tmp_82_neg_2_2_fu_6465_p2;
    tmp_82_2_3_fu_6495_p1 <= tmp_82_neg_2_3_fu_6489_p2;
    tmp_82_2_4_fu_6519_p1 <= tmp_82_neg_2_4_fu_6513_p2;
    tmp_82_2_5_fu_6543_p1 <= tmp_82_neg_2_5_fu_6537_p2;
    tmp_82_2_fu_6423_p1 <= tmp_82_neg_2_fu_6417_p2;
    tmp_82_neg_0_1_fu_6153_p2 <= (tmp_82_to_int_0_1_fu_6150_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_0_2_fu_6177_p2 <= (tmp_82_to_int_0_2_fu_6174_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_0_3_fu_6201_p2 <= (tmp_82_to_int_0_3_fu_6198_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_0_4_fu_6225_p2 <= (tmp_82_to_int_0_4_fu_6222_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_0_5_fu_6249_p2 <= (tmp_82_to_int_0_5_fu_6246_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_1_fu_6297_p2 <= (tmp_82_to_int_1_1_fu_6294_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_2_fu_6321_p2 <= (tmp_82_to_int_1_2_fu_6318_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_3_fu_6345_p2 <= (tmp_82_to_int_1_3_fu_6342_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_4_fu_6369_p2 <= (tmp_82_to_int_1_4_fu_6366_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_5_fu_6393_p2 <= (tmp_82_to_int_1_5_fu_6390_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_1_fu_6273_p2 <= (tmp_82_to_int_1_fu_6270_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_1_fu_6441_p2 <= (tmp_82_to_int_2_1_fu_6438_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_2_fu_6465_p2 <= (tmp_82_to_int_2_2_fu_6462_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_3_fu_6489_p2 <= (tmp_82_to_int_2_3_fu_6486_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_4_fu_6513_p2 <= (tmp_82_to_int_2_4_fu_6510_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_5_fu_6537_p2 <= (tmp_82_to_int_2_5_fu_6534_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_2_fu_6417_p2 <= (tmp_82_to_int_2_fu_6414_p1 xor ap_const_lv32_80000000);
    tmp_82_neg_fu_6129_p2 <= (tmp_82_to_int_fu_6126_p1 xor ap_const_lv32_80000000);
    tmp_82_to_int_0_1_fu_6150_p1 <= tmp_i5_reg_9558;
    tmp_82_to_int_0_2_fu_6174_p1 <= tmp_i8_reg_9564;
    tmp_82_to_int_0_3_fu_6198_p1 <= tmp_i1_reg_9570;
    tmp_82_to_int_0_4_fu_6222_p1 <= tmp_i2_reg_9576;
    tmp_82_to_int_0_5_fu_6246_p1 <= tmp_i3_reg_9582;
    tmp_82_to_int_1_1_fu_6294_p1 <= tmp_i6_reg_9594;
    tmp_82_to_int_1_2_fu_6318_p1 <= tmp_i7_reg_9600;
    tmp_82_to_int_1_3_fu_6342_p1 <= tmp_i9_reg_9606;
    tmp_82_to_int_1_4_fu_6366_p1 <= tmp_i10_reg_9612;
    tmp_82_to_int_1_5_fu_6390_p1 <= tmp_i11_reg_9618;
    tmp_82_to_int_1_fu_6270_p1 <= tmp_i4_reg_9588;
    tmp_82_to_int_2_1_fu_6438_p1 <= tmp_i13_reg_9630;
    tmp_82_to_int_2_2_fu_6462_p1 <= tmp_i14_reg_9636;
    tmp_82_to_int_2_3_fu_6486_p1 <= tmp_i15_reg_9642;
    tmp_82_to_int_2_4_fu_6510_p1 <= tmp_i16_reg_9648;
    tmp_82_to_int_2_5_fu_6534_p1 <= tmp_i17_reg_9654;
    tmp_82_to_int_2_fu_6414_p1 <= tmp_i12_reg_9624;
    tmp_82_to_int_fu_6126_p1 <= tmp_i_reg_9552;
    tmp_83_fu_5029_p2 <= (tmp_81_fu_5023_p2 and grp_fu_3144_p2);
    tmp_84_0_1_fu_6164_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_0_2_fu_6188_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_0_3_fu_6212_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_0_4_fu_6236_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_0_5_fu_6260_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_1_fu_6308_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_2_fu_6332_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_3_fu_6356_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_4_fu_6380_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_5_fu_6404_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_1_fu_6284_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_1_fu_6452_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_2_fu_6476_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_3_fu_6500_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_4_fu_6524_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_5_fu_6548_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_2_fu_6428_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_84_fu_7447_p4 <= soft_dec_tmp_0_load_2_fu_7443_p1(30 downto 23);
    tmp_85_fu_3879_p1 <= var2chk_shift_idx_1_5(9 - 1 downto 0);
    tmp_86_0_1_fu_6145_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_0_2_fu_6169_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_0_3_fu_6193_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_0_4_fu_6217_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_0_5_fu_6241_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_1_fu_6289_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_2_fu_6313_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_3_fu_6337_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_4_fu_6361_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_5_fu_6385_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_1_fu_6265_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_1_fu_6433_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_2_fu_6457_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_3_fu_6481_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_4_fu_6505_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_5_fu_6529_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_2_fu_6409_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter4_i_assign_2_reg_2289),64));
    tmp_86_fu_7473_p2 <= (notrhs6_fu_7467_p2 or notlhs6_fu_7461_p2);
    tmp_89_fu_7490_p4 <= soft_dec_tmp_1_load_2_fu_7486_p1(30 downto 23);
    tmp_8_fu_3751_p2 <= "1" when (jdx_1_reg_2244 = ap_const_lv8_A7) else "0";
    tmp_90_fu_3887_p1 <= var2chk_shift_idx_1_s(9 - 1 downto 0);
    tmp_91_fu_7516_p2 <= (notrhs7_fu_7510_p2 or notlhs7_fu_7504_p2);
    tmp_92_0_0_1_fu_6618_p2 <= "1" when (unsigned(tmp_idx_6_0_0_1_fu_6613_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_0_1_1_fu_6652_p2 <= "1" when (unsigned(tmp_idx_6_0_1_1_fu_6647_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_1_0_1_fu_6720_p2 <= "1" when (unsigned(tmp_idx_6_1_0_1_fu_6715_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_1_1_1_fu_6754_p2 <= "1" when (unsigned(tmp_idx_6_1_1_1_fu_6749_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_1_fu_6686_p2 <= "1" when (unsigned(tmp_idx_6_1_fu_6681_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_2_0_1_fu_6822_p2 <= "1" when (unsigned(tmp_idx_6_2_0_1_fu_6817_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_2_1_1_fu_6856_p2 <= "1" when (unsigned(tmp_idx_6_2_1_1_fu_6851_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_2_fu_6788_p2 <= "1" when (unsigned(tmp_idx_6_2_fu_6783_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_3_0_1_fu_6924_p2 <= "1" when (unsigned(tmp_idx_6_3_0_1_fu_6919_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_3_1_1_fu_6958_p2 <= "1" when (unsigned(tmp_idx_6_3_1_1_fu_6953_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_3_fu_6890_p2 <= "1" when (unsigned(tmp_idx_6_3_fu_6885_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_4_0_1_fu_7026_p2 <= "1" when (unsigned(tmp_idx_6_4_0_1_fu_7021_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_4_1_1_fu_7060_p2 <= "1" when (unsigned(tmp_idx_6_4_1_1_fu_7055_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_4_fu_6992_p2 <= "1" when (unsigned(tmp_idx_6_4_fu_6987_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_5_0_1_fu_7128_p2 <= "1" when (unsigned(tmp_idx_6_5_0_1_fu_7123_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_5_1_1_fu_7162_p2 <= "1" when (unsigned(tmp_idx_6_5_1_1_fu_7157_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_5_fu_7094_p2 <= "1" when (unsigned(tmp_idx_6_5_fu_7089_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_92_fu_6584_p2 <= "1" when (unsigned(tmp_idx_13_fu_6579_p2) > unsigned(ap_const_lv9_A6)) else "0";
    tmp_93_0_0_1_fu_6642_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_0_0_1_cast_fu_6638_p1),64));
    tmp_93_0_1_1_fu_6676_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_0_1_1_cast_fu_6672_p1),64));
    tmp_93_1_0_1_fu_6744_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_1_0_1_cast_fu_6740_p1),64));
    tmp_93_1_1_1_fu_6778_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_1_1_1_cast_fu_6774_p1),64));
    tmp_93_1_fu_6710_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_1_cast_fu_6706_p1),64));
    tmp_93_2_0_1_fu_6846_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_2_0_1_cast_fu_6842_p1),64));
    tmp_93_2_1_1_fu_6880_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_2_1_1_cast_fu_6876_p1),64));
    tmp_93_2_fu_6812_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_2_cast_fu_6808_p1),64));
    tmp_93_3_0_1_fu_6948_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_3_0_1_cast_fu_6944_p1),64));
    tmp_93_3_1_1_fu_6982_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_3_1_1_cast_fu_6978_p1),64));
    tmp_93_3_fu_6914_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_3_cast_fu_6910_p1),64));
    tmp_93_4_0_1_fu_7050_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_4_0_1_cast_fu_7046_p1),64));
    tmp_93_4_1_1_fu_7084_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_4_1_1_cast_fu_7080_p1),64));
    tmp_93_4_fu_7016_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_4_cast_fu_7012_p1),64));
    tmp_93_5_0_1_fu_7152_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_5_0_1_cast_fu_7148_p1),64));
    tmp_93_5_1_1_fu_7186_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_5_1_1_cast_fu_7182_p1),64));
    tmp_93_5_fu_7118_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_5_cast_fu_7114_p1),64));
    tmp_93_fu_6608_p1 <= std_logic_vector(resize(unsigned(tmp_idx_8_0_cast_fu_6604_p1),64));
    tmp_97_fu_7533_p4 <= soft_dec_tmp_2_load_2_fu_7529_p1(30 downto 23);
    tmp_98_fu_3895_p1 <= var2chk_shift_idx_2_1(9 - 1 downto 0);
    tmp_99_fu_7559_p2 <= (notrhs8_fu_7553_p2 or notlhs8_fu_7547_p2);
    tmp_9_fu_3729_p2 <= "1" when (jdx_0_i_reg_2233 = ap_const_lv8_A7) else "0";
    tmp_idx_10_fu_4123_p2 <= std_logic_vector(unsigned(tmp_42_reg_8800) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_11_fu_4134_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_10_fu_4123_p2));
    tmp_idx_12_fu_4140_p3 <= 
        tmp_idx_11_fu_4134_p2 when (tmp_75_fu_4128_p2(0) = '1') else 
        tmp_idx_10_fu_4123_p2;
    tmp_idx_13_fu_6579_p2 <= std_logic_vector(unsigned(extLd1_reg_8890) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_1_1_fu_7262_p2 <= std_logic_vector(unsigned(tmp_idx_s_fu_7251_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_1_2_fu_7296_p2 <= std_logic_vector(unsigned(tmp_idx_6_fu_7285_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_1_3_fu_7330_p2 <= std_logic_vector(unsigned(tmp_idx_3_fu_7319_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_1_4_fu_7364_p2 <= std_logic_vector(unsigned(tmp_idx_4_fu_7353_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_1_5_fu_7398_p2 <= std_logic_vector(unsigned(tmp_idx_5_fu_7387_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_1_fu_7228_p2 <= std_logic_vector(unsigned(tmp_idx_fu_7217_p2) + unsigned(ap_const_lv9_159));
        tmp_idx_2_1_cast_fu_7276_p1 <= std_logic_vector(resize(signed(tmp_idx_2_1_fu_7268_p3),32));

    tmp_idx_2_1_fu_7268_p3 <= 
        tmp_idx_1_1_fu_7262_p2 when (tmp_55_1_fu_7256_p2(0) = '1') else 
        tmp_idx_s_fu_7251_p2;
        tmp_idx_2_2_cast_fu_7310_p1 <= std_logic_vector(resize(signed(tmp_idx_2_2_fu_7302_p3),32));

    tmp_idx_2_2_fu_7302_p3 <= 
        tmp_idx_1_2_fu_7296_p2 when (tmp_55_2_fu_7290_p2(0) = '1') else 
        tmp_idx_6_fu_7285_p2;
        tmp_idx_2_3_cast_fu_7344_p1 <= std_logic_vector(resize(signed(tmp_idx_2_3_fu_7336_p3),32));

    tmp_idx_2_3_fu_7336_p3 <= 
        tmp_idx_1_3_fu_7330_p2 when (tmp_55_3_fu_7324_p2(0) = '1') else 
        tmp_idx_3_fu_7319_p2;
        tmp_idx_2_4_cast_fu_7378_p1 <= std_logic_vector(resize(signed(tmp_idx_2_4_fu_7370_p3),32));

    tmp_idx_2_4_fu_7370_p3 <= 
        tmp_idx_1_4_fu_7364_p2 when (tmp_55_4_fu_7358_p2(0) = '1') else 
        tmp_idx_4_fu_7353_p2;
        tmp_idx_2_5_cast_fu_7412_p1 <= std_logic_vector(resize(signed(tmp_idx_2_5_fu_7404_p3),32));

    tmp_idx_2_5_fu_7404_p3 <= 
        tmp_idx_1_5_fu_7398_p2 when (tmp_55_5_fu_7392_p2(0) = '1') else 
        tmp_idx_5_fu_7387_p2;
        tmp_idx_2_cast_fu_7242_p1 <= std_logic_vector(resize(signed(tmp_idx_2_fu_7234_p3),32));

    tmp_idx_2_fu_7234_p3 <= 
        tmp_idx_1_fu_7228_p2 when (tmp_25_fu_7222_p2(0) = '1') else 
        tmp_idx_fu_7217_p2;
    tmp_idx_3_0_0_1_fu_4157_p2 <= std_logic_vector(unsigned(tmp_46_reg_8805) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_0_0_2_fu_4191_p2 <= std_logic_vector(unsigned(tmp_47_reg_8810) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_0_0_3_fu_4225_p2 <= std_logic_vector(unsigned(tmp_49_reg_8815) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_0_0_4_fu_4259_p2 <= std_logic_vector(unsigned(tmp_54_reg_8820) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_0_1_4_fu_4293_p2 <= std_logic_vector(unsigned(tmp_59_reg_8825) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_0_1_fu_4361_p2 <= std_logic_vector(unsigned(tmp_69_reg_8835) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_0_2_fu_4395_p2 <= std_logic_vector(unsigned(tmp_78_reg_8840) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_0_3_fu_4429_p2 <= std_logic_vector(unsigned(tmp_80_reg_8845) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_0_4_fu_4463_p2 <= std_logic_vector(unsigned(tmp_85_reg_8850) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_1_4_fu_4497_p2 <= std_logic_vector(unsigned(tmp_90_reg_8855) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_1_fu_4327_p2 <= std_logic_vector(unsigned(tmp_64_reg_8830) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_0_1_fu_4565_p2 <= std_logic_vector(unsigned(tmp_103_reg_8865) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_0_2_fu_4599_p2 <= std_logic_vector(unsigned(tmp_110_reg_8870) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_0_3_fu_4633_p2 <= std_logic_vector(unsigned(tmp_115_reg_8875) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_0_4_fu_4667_p2 <= std_logic_vector(unsigned(tmp_120_reg_8880) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_1_4_fu_4701_p2 <= std_logic_vector(unsigned(tmp_121_reg_8885) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_2_fu_4531_p2 <= std_logic_vector(unsigned(tmp_98_reg_8860) + unsigned(i_assign_2_cast_fu_4119_p1));
    tmp_idx_3_fu_7319_p2 <= std_logic_vector(unsigned(extLd11_reg_8948) + unsigned(i_assign_cast_fu_7191_p1));
    tmp_idx_4_0_0_1_fu_4168_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_0_0_1_fu_4157_p2));
    tmp_idx_4_0_0_2_fu_4202_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_0_0_2_fu_4191_p2));
    tmp_idx_4_0_0_3_fu_4236_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_0_0_3_fu_4225_p2));
    tmp_idx_4_0_0_4_fu_4270_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_0_0_4_fu_4259_p2));
    tmp_idx_4_0_1_4_fu_4304_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_0_1_4_fu_4293_p2));
    tmp_idx_4_1_0_1_fu_4372_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_0_1_fu_4361_p2));
    tmp_idx_4_1_0_2_fu_4406_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_0_2_fu_4395_p2));
    tmp_idx_4_1_0_3_fu_4440_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_0_3_fu_4429_p2));
    tmp_idx_4_1_0_4_fu_4474_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_0_4_fu_4463_p2));
    tmp_idx_4_1_1_4_fu_4508_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_1_4_fu_4497_p2));
    tmp_idx_4_1_fu_4338_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_1_fu_4327_p2));
    tmp_idx_4_2_0_1_fu_4576_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_0_1_fu_4565_p2));
    tmp_idx_4_2_0_2_fu_4610_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_0_2_fu_4599_p2));
    tmp_idx_4_2_0_3_fu_4644_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_0_3_fu_4633_p2));
    tmp_idx_4_2_0_4_fu_4678_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_0_4_fu_4667_p2));
    tmp_idx_4_2_1_4_fu_4712_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_1_4_fu_4701_p2));
    tmp_idx_4_2_fu_4542_p2 <= std_logic_vector(signed(ap_const_lv9_159) + signed(tmp_idx_3_2_fu_4531_p2));
    tmp_idx_4_fu_7353_p2 <= std_logic_vector(unsigned(extLd14_reg_8964) + unsigned(i_assign_cast_fu_7191_p1));
        tmp_idx_5_0_0_1_cast_fu_4182_p1 <= std_logic_vector(resize(signed(tmp_idx_5_0_0_1_fu_4174_p3),32));

    tmp_idx_5_0_0_1_fu_4174_p3 <= 
        tmp_idx_4_0_0_1_fu_4168_p2 when (tmp_75_0_0_1_fu_4162_p2(0) = '1') else 
        tmp_idx_3_0_0_1_fu_4157_p2;
        tmp_idx_5_0_0_2_cast_fu_4216_p1 <= std_logic_vector(resize(signed(tmp_idx_5_0_0_2_fu_4208_p3),32));

    tmp_idx_5_0_0_2_fu_4208_p3 <= 
        tmp_idx_4_0_0_2_fu_4202_p2 when (tmp_75_0_0_2_fu_4196_p2(0) = '1') else 
        tmp_idx_3_0_0_2_fu_4191_p2;
        tmp_idx_5_0_0_3_cast_fu_4250_p1 <= std_logic_vector(resize(signed(tmp_idx_5_0_0_3_fu_4242_p3),32));

    tmp_idx_5_0_0_3_fu_4242_p3 <= 
        tmp_idx_4_0_0_3_fu_4236_p2 when (tmp_75_0_0_3_fu_4230_p2(0) = '1') else 
        tmp_idx_3_0_0_3_fu_4225_p2;
        tmp_idx_5_0_0_4_cast_fu_4284_p1 <= std_logic_vector(resize(signed(tmp_idx_5_0_0_4_fu_4276_p3),32));

    tmp_idx_5_0_0_4_fu_4276_p3 <= 
        tmp_idx_4_0_0_4_fu_4270_p2 when (tmp_75_0_0_4_fu_4264_p2(0) = '1') else 
        tmp_idx_3_0_0_4_fu_4259_p2;
        tmp_idx_5_0_1_4_cast_fu_4318_p1 <= std_logic_vector(resize(signed(tmp_idx_5_0_1_4_fu_4310_p3),32));

    tmp_idx_5_0_1_4_fu_4310_p3 <= 
        tmp_idx_4_0_1_4_fu_4304_p2 when (tmp_75_0_1_4_fu_4298_p2(0) = '1') else 
        tmp_idx_3_0_1_4_fu_4293_p2;
        tmp_idx_5_0_cast_fu_4148_p1 <= std_logic_vector(resize(signed(tmp_idx_12_fu_4140_p3),32));

        tmp_idx_5_1_0_1_cast_fu_4386_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_0_1_fu_4378_p3),32));

    tmp_idx_5_1_0_1_fu_4378_p3 <= 
        tmp_idx_4_1_0_1_fu_4372_p2 when (tmp_75_1_0_1_fu_4366_p2(0) = '1') else 
        tmp_idx_3_1_0_1_fu_4361_p2;
        tmp_idx_5_1_0_2_cast_fu_4420_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_0_2_fu_4412_p3),32));

    tmp_idx_5_1_0_2_fu_4412_p3 <= 
        tmp_idx_4_1_0_2_fu_4406_p2 when (tmp_75_1_0_2_fu_4400_p2(0) = '1') else 
        tmp_idx_3_1_0_2_fu_4395_p2;
        tmp_idx_5_1_0_3_cast_fu_4454_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_0_3_fu_4446_p3),32));

    tmp_idx_5_1_0_3_fu_4446_p3 <= 
        tmp_idx_4_1_0_3_fu_4440_p2 when (tmp_75_1_0_3_fu_4434_p2(0) = '1') else 
        tmp_idx_3_1_0_3_fu_4429_p2;
        tmp_idx_5_1_0_4_cast_fu_4488_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_0_4_fu_4480_p3),32));

    tmp_idx_5_1_0_4_fu_4480_p3 <= 
        tmp_idx_4_1_0_4_fu_4474_p2 when (tmp_75_1_0_4_fu_4468_p2(0) = '1') else 
        tmp_idx_3_1_0_4_fu_4463_p2;
        tmp_idx_5_1_1_4_cast_fu_4522_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_1_4_fu_4514_p3),32));

    tmp_idx_5_1_1_4_fu_4514_p3 <= 
        tmp_idx_4_1_1_4_fu_4508_p2 when (tmp_75_1_1_4_fu_4502_p2(0) = '1') else 
        tmp_idx_3_1_1_4_fu_4497_p2;
        tmp_idx_5_1_cast_fu_4352_p1 <= std_logic_vector(resize(signed(tmp_idx_5_1_fu_4344_p3),32));

    tmp_idx_5_1_fu_4344_p3 <= 
        tmp_idx_4_1_fu_4338_p2 when (tmp_75_1_fu_4332_p2(0) = '1') else 
        tmp_idx_3_1_fu_4327_p2;
        tmp_idx_5_2_0_1_cast_fu_4590_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_0_1_fu_4582_p3),32));

    tmp_idx_5_2_0_1_fu_4582_p3 <= 
        tmp_idx_4_2_0_1_fu_4576_p2 when (tmp_75_2_0_1_fu_4570_p2(0) = '1') else 
        tmp_idx_3_2_0_1_fu_4565_p2;
        tmp_idx_5_2_0_2_cast_fu_4624_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_0_2_fu_4616_p3),32));

    tmp_idx_5_2_0_2_fu_4616_p3 <= 
        tmp_idx_4_2_0_2_fu_4610_p2 when (tmp_75_2_0_2_fu_4604_p2(0) = '1') else 
        tmp_idx_3_2_0_2_fu_4599_p2;
        tmp_idx_5_2_0_3_cast_fu_4658_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_0_3_fu_4650_p3),32));

    tmp_idx_5_2_0_3_fu_4650_p3 <= 
        tmp_idx_4_2_0_3_fu_4644_p2 when (tmp_75_2_0_3_fu_4638_p2(0) = '1') else 
        tmp_idx_3_2_0_3_fu_4633_p2;
        tmp_idx_5_2_0_4_cast_fu_4692_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_0_4_fu_4684_p3),32));

    tmp_idx_5_2_0_4_fu_4684_p3 <= 
        tmp_idx_4_2_0_4_fu_4678_p2 when (tmp_75_2_0_4_fu_4672_p2(0) = '1') else 
        tmp_idx_3_2_0_4_fu_4667_p2;
        tmp_idx_5_2_1_4_cast_fu_4726_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_1_4_fu_4718_p3),32));

    tmp_idx_5_2_1_4_fu_4718_p3 <= 
        tmp_idx_4_2_1_4_fu_4712_p2 when (tmp_75_2_1_4_fu_4706_p2(0) = '1') else 
        tmp_idx_3_2_1_4_fu_4701_p2;
        tmp_idx_5_2_cast_fu_4556_p1 <= std_logic_vector(resize(signed(tmp_idx_5_2_fu_4548_p3),32));

    tmp_idx_5_2_fu_4548_p3 <= 
        tmp_idx_4_2_fu_4542_p2 when (tmp_75_2_fu_4536_p2(0) = '1') else 
        tmp_idx_3_2_fu_4531_p2;
    tmp_idx_5_fu_7387_p2 <= std_logic_vector(unsigned(extLd17_reg_8980) + unsigned(i_assign_cast_fu_7191_p1));
    tmp_idx_6_0_0_1_fu_6613_p2 <= std_logic_vector(unsigned(extLd2_reg_8895) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_0_1_1_fu_6647_p2 <= std_logic_vector(unsigned(extLd_reg_8900) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_1_0_1_fu_6715_p2 <= std_logic_vector(unsigned(extLd4_reg_8911) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_1_1_1_fu_6749_p2 <= std_logic_vector(unsigned(extLd5_reg_8916) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_1_fu_6681_p2 <= std_logic_vector(unsigned(extLd3_reg_8906) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_2_0_1_fu_6817_p2 <= std_logic_vector(unsigned(extLd7_reg_8927) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_2_1_1_fu_6851_p2 <= std_logic_vector(unsigned(extLd8_reg_8932) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_2_fu_6783_p2 <= std_logic_vector(unsigned(extLd6_reg_8922) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_3_0_1_fu_6919_p2 <= std_logic_vector(unsigned(extLd10_reg_8943) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_3_1_1_fu_6953_p2 <= std_logic_vector(unsigned(extLd11_reg_8948) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_3_fu_6885_p2 <= std_logic_vector(unsigned(extLd9_reg_8938) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_4_0_1_fu_7021_p2 <= std_logic_vector(unsigned(extLd13_reg_8959) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_4_1_1_fu_7055_p2 <= std_logic_vector(unsigned(extLd14_reg_8964) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_4_fu_6987_p2 <= std_logic_vector(unsigned(extLd12_reg_8954) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_5_0_1_fu_7123_p2 <= std_logic_vector(unsigned(extLd16_reg_8975) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_5_1_1_fu_7157_p2 <= std_logic_vector(unsigned(extLd17_reg_8980) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_5_fu_7089_p2 <= std_logic_vector(unsigned(extLd15_reg_8970) + unsigned(i_assign_1_cast_fu_6565_p1));
    tmp_idx_6_fu_7285_p2 <= std_logic_vector(unsigned(extLd8_reg_8932) + unsigned(i_assign_cast_fu_7191_p1));
    tmp_idx_7_0_0_1_fu_6624_p2 <= std_logic_vector(unsigned(tmp_idx_6_0_0_1_fu_6613_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_0_1_1_fu_6658_p2 <= std_logic_vector(unsigned(tmp_idx_6_0_1_1_fu_6647_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_1_0_1_fu_6726_p2 <= std_logic_vector(unsigned(tmp_idx_6_1_0_1_fu_6715_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_1_1_1_fu_6760_p2 <= std_logic_vector(unsigned(tmp_idx_6_1_1_1_fu_6749_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_1_fu_6692_p2 <= std_logic_vector(unsigned(tmp_idx_6_1_fu_6681_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_2_0_1_fu_6828_p2 <= std_logic_vector(unsigned(tmp_idx_6_2_0_1_fu_6817_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_2_1_1_fu_6862_p2 <= std_logic_vector(unsigned(tmp_idx_6_2_1_1_fu_6851_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_2_fu_6794_p2 <= std_logic_vector(unsigned(tmp_idx_6_2_fu_6783_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_3_0_1_fu_6930_p2 <= std_logic_vector(unsigned(tmp_idx_6_3_0_1_fu_6919_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_3_1_1_fu_6964_p2 <= std_logic_vector(unsigned(tmp_idx_6_3_1_1_fu_6953_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_3_fu_6896_p2 <= std_logic_vector(unsigned(tmp_idx_6_3_fu_6885_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_4_0_1_fu_7032_p2 <= std_logic_vector(unsigned(tmp_idx_6_4_0_1_fu_7021_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_4_1_1_fu_7066_p2 <= std_logic_vector(unsigned(tmp_idx_6_4_1_1_fu_7055_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_4_fu_6998_p2 <= std_logic_vector(unsigned(tmp_idx_6_4_fu_6987_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_5_0_1_fu_7134_p2 <= std_logic_vector(unsigned(tmp_idx_6_5_0_1_fu_7123_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_5_1_1_fu_7168_p2 <= std_logic_vector(unsigned(tmp_idx_6_5_1_1_fu_7157_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_5_fu_7100_p2 <= std_logic_vector(unsigned(tmp_idx_6_5_fu_7089_p2) + unsigned(ap_const_lv9_159));
    tmp_idx_7_fu_6590_p2 <= std_logic_vector(unsigned(tmp_idx_13_fu_6579_p2) + unsigned(ap_const_lv9_159));
        tmp_idx_8_0_0_1_cast_fu_6638_p1 <= std_logic_vector(resize(signed(tmp_idx_8_0_0_1_fu_6630_p3),32));

    tmp_idx_8_0_0_1_fu_6630_p3 <= 
        tmp_idx_7_0_0_1_fu_6624_p2 when (tmp_92_0_0_1_fu_6618_p2(0) = '1') else 
        tmp_idx_6_0_0_1_fu_6613_p2;
        tmp_idx_8_0_1_1_cast_fu_6672_p1 <= std_logic_vector(resize(signed(tmp_idx_8_0_1_1_fu_6664_p3),32));

    tmp_idx_8_0_1_1_fu_6664_p3 <= 
        tmp_idx_7_0_1_1_fu_6658_p2 when (tmp_92_0_1_1_fu_6652_p2(0) = '1') else 
        tmp_idx_6_0_1_1_fu_6647_p2;
        tmp_idx_8_0_cast_fu_6604_p1 <= std_logic_vector(resize(signed(tmp_idx_8_fu_6596_p3),32));

        tmp_idx_8_1_0_1_cast_fu_6740_p1 <= std_logic_vector(resize(signed(tmp_idx_8_1_0_1_fu_6732_p3),32));

    tmp_idx_8_1_0_1_fu_6732_p3 <= 
        tmp_idx_7_1_0_1_fu_6726_p2 when (tmp_92_1_0_1_fu_6720_p2(0) = '1') else 
        tmp_idx_6_1_0_1_fu_6715_p2;
        tmp_idx_8_1_1_1_cast_fu_6774_p1 <= std_logic_vector(resize(signed(tmp_idx_8_1_1_1_fu_6766_p3),32));

    tmp_idx_8_1_1_1_fu_6766_p3 <= 
        tmp_idx_7_1_1_1_fu_6760_p2 when (tmp_92_1_1_1_fu_6754_p2(0) = '1') else 
        tmp_idx_6_1_1_1_fu_6749_p2;
        tmp_idx_8_1_cast_fu_6706_p1 <= std_logic_vector(resize(signed(tmp_idx_8_1_fu_6698_p3),32));

    tmp_idx_8_1_fu_6698_p3 <= 
        tmp_idx_7_1_fu_6692_p2 when (tmp_92_1_fu_6686_p2(0) = '1') else 
        tmp_idx_6_1_fu_6681_p2;
        tmp_idx_8_2_0_1_cast_fu_6842_p1 <= std_logic_vector(resize(signed(tmp_idx_8_2_0_1_fu_6834_p3),32));

    tmp_idx_8_2_0_1_fu_6834_p3 <= 
        tmp_idx_7_2_0_1_fu_6828_p2 when (tmp_92_2_0_1_fu_6822_p2(0) = '1') else 
        tmp_idx_6_2_0_1_fu_6817_p2;
        tmp_idx_8_2_1_1_cast_fu_6876_p1 <= std_logic_vector(resize(signed(tmp_idx_8_2_1_1_fu_6868_p3),32));

    tmp_idx_8_2_1_1_fu_6868_p3 <= 
        tmp_idx_7_2_1_1_fu_6862_p2 when (tmp_92_2_1_1_fu_6856_p2(0) = '1') else 
        tmp_idx_6_2_1_1_fu_6851_p2;
        tmp_idx_8_2_cast_fu_6808_p1 <= std_logic_vector(resize(signed(tmp_idx_8_2_fu_6800_p3),32));

    tmp_idx_8_2_fu_6800_p3 <= 
        tmp_idx_7_2_fu_6794_p2 when (tmp_92_2_fu_6788_p2(0) = '1') else 
        tmp_idx_6_2_fu_6783_p2;
        tmp_idx_8_3_0_1_cast_fu_6944_p1 <= std_logic_vector(resize(signed(tmp_idx_8_3_0_1_fu_6936_p3),32));

    tmp_idx_8_3_0_1_fu_6936_p3 <= 
        tmp_idx_7_3_0_1_fu_6930_p2 when (tmp_92_3_0_1_fu_6924_p2(0) = '1') else 
        tmp_idx_6_3_0_1_fu_6919_p2;
        tmp_idx_8_3_1_1_cast_fu_6978_p1 <= std_logic_vector(resize(signed(tmp_idx_8_3_1_1_fu_6970_p3),32));

    tmp_idx_8_3_1_1_fu_6970_p3 <= 
        tmp_idx_7_3_1_1_fu_6964_p2 when (tmp_92_3_1_1_fu_6958_p2(0) = '1') else 
        tmp_idx_6_3_1_1_fu_6953_p2;
        tmp_idx_8_3_cast_fu_6910_p1 <= std_logic_vector(resize(signed(tmp_idx_8_3_fu_6902_p3),32));

    tmp_idx_8_3_fu_6902_p3 <= 
        tmp_idx_7_3_fu_6896_p2 when (tmp_92_3_fu_6890_p2(0) = '1') else 
        tmp_idx_6_3_fu_6885_p2;
        tmp_idx_8_4_0_1_cast_fu_7046_p1 <= std_logic_vector(resize(signed(tmp_idx_8_4_0_1_fu_7038_p3),32));

    tmp_idx_8_4_0_1_fu_7038_p3 <= 
        tmp_idx_7_4_0_1_fu_7032_p2 when (tmp_92_4_0_1_fu_7026_p2(0) = '1') else 
        tmp_idx_6_4_0_1_fu_7021_p2;
        tmp_idx_8_4_1_1_cast_fu_7080_p1 <= std_logic_vector(resize(signed(tmp_idx_8_4_1_1_fu_7072_p3),32));

    tmp_idx_8_4_1_1_fu_7072_p3 <= 
        tmp_idx_7_4_1_1_fu_7066_p2 when (tmp_92_4_1_1_fu_7060_p2(0) = '1') else 
        tmp_idx_6_4_1_1_fu_7055_p2;
        tmp_idx_8_4_cast_fu_7012_p1 <= std_logic_vector(resize(signed(tmp_idx_8_4_fu_7004_p3),32));

    tmp_idx_8_4_fu_7004_p3 <= 
        tmp_idx_7_4_fu_6998_p2 when (tmp_92_4_fu_6992_p2(0) = '1') else 
        tmp_idx_6_4_fu_6987_p2;
        tmp_idx_8_5_0_1_cast_fu_7148_p1 <= std_logic_vector(resize(signed(tmp_idx_8_5_0_1_fu_7140_p3),32));

    tmp_idx_8_5_0_1_fu_7140_p3 <= 
        tmp_idx_7_5_0_1_fu_7134_p2 when (tmp_92_5_0_1_fu_7128_p2(0) = '1') else 
        tmp_idx_6_5_0_1_fu_7123_p2;
        tmp_idx_8_5_1_1_cast_fu_7182_p1 <= std_logic_vector(resize(signed(tmp_idx_8_5_1_1_fu_7174_p3),32));

    tmp_idx_8_5_1_1_fu_7174_p3 <= 
        tmp_idx_7_5_1_1_fu_7168_p2 when (tmp_92_5_1_1_fu_7162_p2(0) = '1') else 
        tmp_idx_6_5_1_1_fu_7157_p2;
        tmp_idx_8_5_cast_fu_7114_p1 <= std_logic_vector(resize(signed(tmp_idx_8_5_fu_7106_p3),32));

    tmp_idx_8_5_fu_7106_p3 <= 
        tmp_idx_7_5_fu_7100_p2 when (tmp_92_5_fu_7094_p2(0) = '1') else 
        tmp_idx_6_5_fu_7089_p2;
    tmp_idx_8_fu_6596_p3 <= 
        tmp_idx_7_fu_6590_p2 when (tmp_92_fu_6584_p2(0) = '1') else 
        tmp_idx_13_fu_6579_p2;
    tmp_idx_9_0_1_fu_7789_p3 <= 
        tmp_108_0_1_fu_7771_p2 when (tmp_188_fu_7777_p2(0) = '1') else 
        tmp_190_fu_7783_p2;
    tmp_idx_9_0_2_fu_7821_p3 <= 
        tmp_108_0_2_fu_7803_p2 when (tmp_194_fu_7809_p2(0) = '1') else 
        tmp_195_fu_7815_p2;
    tmp_idx_9_0_3_fu_7852_p3 <= 
        tmp_108_0_3_fu_7834_p2 when (tmp_196_fu_7840_p2(0) = '1') else 
        tmp_197_fu_7846_p2;
    tmp_idx_9_0_4_fu_7883_p3 <= 
        tmp_108_0_4_fu_7865_p2 when (tmp_198_fu_7871_p2(0) = '1') else 
        tmp_199_fu_7877_p2;
    tmp_idx_9_0_5_fu_7914_p3 <= 
        tmp_108_0_5_fu_7896_p2 when (tmp_200_fu_7902_p2(0) = '1') else 
        tmp_201_fu_7908_p2;
    tmp_idx_9_1_1_fu_7987_p3 <= 
        tmp_108_1_1_fu_7969_p2 when (tmp_204_fu_7975_p2(0) = '1') else 
        tmp_205_fu_7981_p2;
    tmp_idx_9_1_2_fu_8016_p3 <= 
        tmp_108_1_2_fu_8000_p2 when (tmp_206_fu_8005_p2(0) = '1') else 
        tmp_207_fu_8011_p2;
    tmp_idx_9_1_4_fu_8045_p3 <= 
        tmp_108_1_4_fu_8029_p2 when (tmp_208_fu_8034_p2(0) = '1') else 
        tmp_209_fu_8040_p2;
    tmp_idx_9_1_5_fu_8074_p3 <= 
        tmp_108_1_5_fu_8058_p2 when (tmp_210_fu_8063_p2(0) = '1') else 
        tmp_211_fu_8069_p2;
    tmp_idx_9_1_fu_7956_p3 <= 
        tmp_108_1_fu_7935_p2 when (tmp_202_fu_7940_p2(0) = '1') else 
        tmp_214_cast_fu_7952_p1;
    tmp_idx_9_2_1_fu_8134_p3 <= 
        tmp_108_2_1_fu_8118_p2 when (tmp_214_fu_8123_p2(0) = '1') else 
        tmp_215_fu_8129_p2;
    tmp_idx_9_2_2_fu_8165_p3 <= 
        tmp_108_2_2_fu_8147_p2 when (tmp_216_fu_8153_p2(0) = '1') else 
        tmp_217_fu_8159_p2;
    tmp_idx_9_2_3_fu_8196_p3 <= 
        tmp_108_2_3_fu_8178_p2 when (tmp_218_fu_8184_p2(0) = '1') else 
        tmp_219_fu_8190_p2;
    tmp_idx_9_2_5_fu_8225_p3 <= 
        tmp_108_2_5_fu_8209_p2 when (tmp_220_fu_8214_p2(0) = '1') else 
        tmp_221_fu_8220_p2;
    tmp_idx_9_2_fu_8105_p3 <= 
        tmp_108_2_fu_8087_p2 when (tmp_212_fu_8093_p2(0) = '1') else 
        tmp_213_fu_8099_p2;
    tmp_idx_9_fu_7758_p3 <= 
        tmp_108_fu_7736_p2 when (tmp_179_fu_7742_p2(0) = '1') else 
        tmp_202_cast_fu_7754_p1;
    tmp_idx_fu_7217_p2 <= std_logic_vector(unsigned(extLd_reg_8900) + unsigned(i_assign_cast_fu_7191_p1));
    tmp_idx_s_fu_7251_p2 <= std_logic_vector(unsigned(extLd5_reg_8916) + unsigned(i_assign_cast_fu_7191_p1));
    tmp_s_fu_3318_p2 <= "1" when (idx_reg_2186 = ap_const_lv2_3) else "0";

    var2chk_0_0_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_0_1_4_fu_4322_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_0_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_0_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_0_dram_address0 <= tmp_76_0_1_4_fu_4322_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_0_dram_address0 <= StgValue_531_set_dram_fu_2772_circular_ram_0_dram_address0;
        else 
            var2chk_0_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_0_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_0_dram_ce0 <= StgValue_531_set_dram_fu_2772_circular_ram_0_dram_ce0;
        else 
            var2chk_0_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_0_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_2952_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_0_dram_d0 <= grp_fu_2952_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_0_dram_d0 <= StgValue_531_set_dram_fu_2772_circular_ram_0_dram_d0;
        else 
            var2chk_0_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_0_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_0_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_0_dram_we0 <= StgValue_531_set_dram_fu_2772_circular_ram_0_dram_we0;
        else 
            var2chk_0_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_1_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_fu_4152_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_1_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_1_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_1_dram_address0 <= tmp_76_fu_4152_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_1_dram_address0 <= StgValue_532_set_dram_fu_2784_circular_ram_0_dram_address0;
        else 
            var2chk_0_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_1_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_1_dram_ce0 <= StgValue_532_set_dram_fu_2784_circular_ram_0_dram_ce0;
        else 
            var2chk_0_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_1_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_2967_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_1_dram_d0 <= grp_fu_2967_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_1_dram_d0 <= StgValue_532_set_dram_fu_2784_circular_ram_0_dram_d0;
        else 
            var2chk_0_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_1_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_1_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_1_dram_we0 <= StgValue_532_set_dram_fu_2784_circular_ram_0_dram_we0;
        else 
            var2chk_0_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_2_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_0_0_1_fu_4186_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_2_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_2_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_2_dram_address0 <= tmp_76_0_0_1_fu_4186_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_2_dram_address0 <= StgValue_533_set_dram_fu_2796_circular_ram_0_dram_address0;
        else 
            var2chk_0_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_2_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_2_dram_ce0 <= StgValue_533_set_dram_fu_2796_circular_ram_0_dram_ce0;
        else 
            var2chk_0_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_2_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_2982_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_2_dram_d0 <= grp_fu_2982_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_2_dram_d0 <= StgValue_533_set_dram_fu_2796_circular_ram_0_dram_d0;
        else 
            var2chk_0_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_2_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_2_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_2_dram_we0 <= StgValue_533_set_dram_fu_2796_circular_ram_0_dram_we0;
        else 
            var2chk_0_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_3_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_0_0_2_fu_4220_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_3_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_3_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_3_dram_address0 <= tmp_76_0_0_2_fu_4220_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_3_dram_address0 <= StgValue_534_set_dram_fu_2808_circular_ram_0_dram_address0;
        else 
            var2chk_0_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_3_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_3_dram_ce0 <= StgValue_534_set_dram_fu_2808_circular_ram_0_dram_ce0;
        else 
            var2chk_0_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_3_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_2997_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_3_dram_d0 <= grp_fu_2997_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_3_dram_d0 <= StgValue_534_set_dram_fu_2808_circular_ram_0_dram_d0;
        else 
            var2chk_0_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_3_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_3_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_3_dram_we0 <= StgValue_534_set_dram_fu_2808_circular_ram_0_dram_we0;
        else 
            var2chk_0_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_4_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_0_0_3_fu_4254_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_4_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_4_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_4_dram_address0 <= tmp_76_0_0_3_fu_4254_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_4_dram_address0 <= StgValue_535_set_dram_fu_2820_circular_ram_0_dram_address0;
        else 
            var2chk_0_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_4_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_4_dram_ce0 <= StgValue_535_set_dram_fu_2820_circular_ram_0_dram_ce0;
        else 
            var2chk_0_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_4_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_3012_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_4_dram_d0 <= grp_fu_3012_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_4_dram_d0 <= StgValue_535_set_dram_fu_2820_circular_ram_0_dram_d0;
        else 
            var2chk_0_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_4_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_4_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_4_dram_we0 <= StgValue_535_set_dram_fu_2820_circular_ram_0_dram_we0;
        else 
            var2chk_0_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_5_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_CS_fsm_state48, tmp_24_fu_7207_p1, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0, tmp_16_fu_4083_p2, tmp_76_0_0_4_fu_4288_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state48))) then 
            var2chk_0_5_dram_address0 <= tmp_24_fu_7207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_5_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_0_5_dram_address0 <= tmp_76_0_0_4_fu_4288_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_5_dram_address0 <= StgValue_536_set_dram_fu_2832_circular_ram_0_dram_address0;
        else 
            var2chk_0_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_0_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_CS_fsm_state48, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_0_5_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_5_dram_ce0 <= StgValue_536_set_dram_fu_2832_circular_ram_0_dram_ce0;
        else 
            var2chk_0_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_0_5_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0, tmp_16_fu_4083_p2, grp_fu_3027_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_0_5_dram_d0 <= grp_fu_3027_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_5_dram_d0 <= StgValue_536_set_dram_fu_2832_circular_ram_0_dram_d0;
        else 
            var2chk_0_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_0_5_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_0_5_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_0_5_dram_we0 <= StgValue_536_set_dram_fu_2832_circular_ram_0_dram_we0;
        else 
            var2chk_0_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_0_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_1_4_fu_4526_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_0_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_0_dram_address0 <= tmp_76_1_1_4_fu_4526_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_0_dram_address0 <= StgValue_531_set_dram_fu_2772_circular_ram_1_dram_address0;
        else 
            var2chk_1_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_0_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_0_dram_ce0 <= StgValue_531_set_dram_fu_2772_circular_ram_1_dram_ce0;
        else 
            var2chk_1_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_0_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_2957_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_0_dram_d0 <= grp_fu_2957_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_0_dram_d0 <= StgValue_531_set_dram_fu_2772_circular_ram_1_dram_d0;
        else 
            var2chk_1_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_0_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_0_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_0_dram_we0 <= StgValue_531_set_dram_fu_2772_circular_ram_1_dram_we0;
        else 
            var2chk_1_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_1_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_fu_4356_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_1_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_1_dram_address0 <= tmp_76_1_fu_4356_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_1_dram_address0 <= StgValue_532_set_dram_fu_2784_circular_ram_1_dram_address0;
        else 
            var2chk_1_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_1_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_1_dram_ce0 <= StgValue_532_set_dram_fu_2784_circular_ram_1_dram_ce0;
        else 
            var2chk_1_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_1_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_2972_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_1_dram_d0 <= grp_fu_2972_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_1_dram_d0 <= StgValue_532_set_dram_fu_2784_circular_ram_1_dram_d0;
        else 
            var2chk_1_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_1_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_1_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_1_dram_we0 <= StgValue_532_set_dram_fu_2784_circular_ram_1_dram_we0;
        else 
            var2chk_1_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_2_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_0_1_fu_4390_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_2_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_2_dram_address0 <= tmp_76_1_0_1_fu_4390_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_2_dram_address0 <= StgValue_533_set_dram_fu_2796_circular_ram_1_dram_address0;
        else 
            var2chk_1_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_2_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_2_dram_ce0 <= StgValue_533_set_dram_fu_2796_circular_ram_1_dram_ce0;
        else 
            var2chk_1_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_2_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_2987_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_2_dram_d0 <= grp_fu_2987_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_2_dram_d0 <= StgValue_533_set_dram_fu_2796_circular_ram_1_dram_d0;
        else 
            var2chk_1_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_2_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_2_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_2_dram_we0 <= StgValue_533_set_dram_fu_2796_circular_ram_1_dram_we0;
        else 
            var2chk_1_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_3_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_0_2_fu_4424_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_3_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_3_dram_address0 <= tmp_76_1_0_2_fu_4424_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_3_dram_address0 <= StgValue_534_set_dram_fu_2808_circular_ram_1_dram_address0;
        else 
            var2chk_1_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_3_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_3_dram_ce0 <= StgValue_534_set_dram_fu_2808_circular_ram_1_dram_ce0;
        else 
            var2chk_1_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_3_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_3002_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_3_dram_d0 <= grp_fu_3002_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_3_dram_d0 <= StgValue_534_set_dram_fu_2808_circular_ram_1_dram_d0;
        else 
            var2chk_1_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_3_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_3_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_3_dram_we0 <= StgValue_534_set_dram_fu_2808_circular_ram_1_dram_we0;
        else 
            var2chk_1_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_4_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_0_3_fu_4458_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_4_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_4_dram_address0 <= tmp_76_1_0_3_fu_4458_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_4_dram_address0 <= StgValue_535_set_dram_fu_2820_circular_ram_1_dram_address0;
        else 
            var2chk_1_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_4_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_4_dram_ce0 <= StgValue_535_set_dram_fu_2820_circular_ram_1_dram_ce0;
        else 
            var2chk_1_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_4_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_3017_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_4_dram_d0 <= grp_fu_3017_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_4_dram_d0 <= StgValue_535_set_dram_fu_2820_circular_ram_1_dram_d0;
        else 
            var2chk_1_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_4_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_4_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_4_dram_we0 <= StgValue_535_set_dram_fu_2820_circular_ram_1_dram_we0;
        else 
            var2chk_1_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_5_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0, tmp_16_fu_4083_p2, tmp_76_1_0_4_fu_4492_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_5_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_1_5_dram_address0 <= tmp_76_1_0_4_fu_4492_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_5_dram_address0 <= StgValue_536_set_dram_fu_2832_circular_ram_1_dram_address0;
        else 
            var2chk_1_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_1_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_1_5_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_5_dram_ce0 <= StgValue_536_set_dram_fu_2832_circular_ram_1_dram_ce0;
        else 
            var2chk_1_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_1_5_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0, tmp_16_fu_4083_p2, grp_fu_3032_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_1_5_dram_d0 <= grp_fu_3032_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_5_dram_d0 <= StgValue_536_set_dram_fu_2832_circular_ram_1_dram_d0;
        else 
            var2chk_1_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_1_5_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_1_5_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_1_5_dram_we0 <= StgValue_536_set_dram_fu_2832_circular_ram_1_dram_we0;
        else 
            var2chk_1_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_0_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_1_4_fu_4730_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_0_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_0_dram_address0 <= tmp_76_2_1_4_fu_4730_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_0_dram_address0 <= StgValue_531_set_dram_fu_2772_circular_ram_2_dram_address0;
        else 
            var2chk_2_0_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_0_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_0_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_0_dram_ce0 <= StgValue_531_set_dram_fu_2772_circular_ram_2_dram_ce0;
        else 
            var2chk_2_0_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_0_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_2962_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_0_dram_d0 <= grp_fu_2962_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_0_dram_d0 <= StgValue_531_set_dram_fu_2772_circular_ram_2_dram_d0;
        else 
            var2chk_2_0_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_0_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_0_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_0_dram_we0 <= StgValue_531_set_dram_fu_2772_circular_ram_2_dram_we0;
        else 
            var2chk_2_0_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_1_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_fu_4560_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_1_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_1_dram_address0 <= tmp_76_2_fu_4560_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_1_dram_address0 <= StgValue_532_set_dram_fu_2784_circular_ram_2_dram_address0;
        else 
            var2chk_2_1_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_1_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_1_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_1_dram_ce0 <= StgValue_532_set_dram_fu_2784_circular_ram_2_dram_ce0;
        else 
            var2chk_2_1_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_1_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_2977_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_1_dram_d0 <= grp_fu_2977_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_1_dram_d0 <= StgValue_532_set_dram_fu_2784_circular_ram_2_dram_d0;
        else 
            var2chk_2_1_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_1_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_1_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_1_dram_we0 <= StgValue_532_set_dram_fu_2784_circular_ram_2_dram_we0;
        else 
            var2chk_2_1_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_2_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_0_1_fu_4594_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_2_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_2_dram_address0 <= tmp_76_2_0_1_fu_4594_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_2_dram_address0 <= StgValue_533_set_dram_fu_2796_circular_ram_2_dram_address0;
        else 
            var2chk_2_2_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_2_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_2_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_2_dram_ce0 <= StgValue_533_set_dram_fu_2796_circular_ram_2_dram_ce0;
        else 
            var2chk_2_2_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_2_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_2992_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_2_dram_d0 <= grp_fu_2992_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_2_dram_d0 <= StgValue_533_set_dram_fu_2796_circular_ram_2_dram_d0;
        else 
            var2chk_2_2_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_2_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_2_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_2_dram_we0 <= StgValue_533_set_dram_fu_2796_circular_ram_2_dram_we0;
        else 
            var2chk_2_2_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_3_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_0_2_fu_4628_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_3_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_3_dram_address0 <= tmp_76_2_0_2_fu_4628_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_3_dram_address0 <= StgValue_534_set_dram_fu_2808_circular_ram_2_dram_address0;
        else 
            var2chk_2_3_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_3_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_3_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_3_dram_ce0 <= StgValue_534_set_dram_fu_2808_circular_ram_2_dram_ce0;
        else 
            var2chk_2_3_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_3_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_3007_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_3_dram_d0 <= grp_fu_3007_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_3_dram_d0 <= StgValue_534_set_dram_fu_2808_circular_ram_2_dram_d0;
        else 
            var2chk_2_3_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_3_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_3_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_3_dram_we0 <= StgValue_534_set_dram_fu_2808_circular_ram_2_dram_we0;
        else 
            var2chk_2_3_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_4_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_0_3_fu_4662_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_4_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_4_dram_address0 <= tmp_76_2_0_3_fu_4662_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_4_dram_address0 <= StgValue_535_set_dram_fu_2820_circular_ram_2_dram_address0;
        else 
            var2chk_2_4_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_4_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_4_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_4_dram_ce0 <= StgValue_535_set_dram_fu_2820_circular_ram_2_dram_ce0;
        else 
            var2chk_2_4_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_4_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_3022_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_4_dram_d0 <= grp_fu_3022_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_4_dram_d0 <= StgValue_535_set_dram_fu_2820_circular_ram_2_dram_d0;
        else 
            var2chk_2_4_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_4_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_4_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_4_dram_we0 <= StgValue_535_set_dram_fu_2820_circular_ram_2_dram_we0;
        else 
            var2chk_2_4_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_5_dram_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0, tmp_16_fu_4083_p2, tmp_76_2_0_4_fu_4696_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_5_dram_address0 <= ap_pipeline_reg_pp1_iter7_tmp_22_reg_9669(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            var2chk_2_5_dram_address0 <= tmp_76_2_0_4_fu_4696_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_5_dram_address0 <= StgValue_536_set_dram_fu_2832_circular_ram_2_dram_address0;
        else 
            var2chk_2_5_dram_address0 <= "XXXXXXXX";
        end if; 
    end process;


    var2chk_2_5_dram_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state29, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_enable_reg_pp1_iter8))) then 
            var2chk_2_5_dram_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_5_dram_ce0 <= StgValue_536_set_dram_fu_2832_circular_ram_2_dram_ce0;
        else 
            var2chk_2_5_dram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var2chk_2_5_dram_d0_assign_proc : process(ap_CS_fsm_state29, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0, tmp_16_fu_4083_p2, grp_fu_3037_p2)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter8)) then 
            var2chk_2_5_dram_d0 <= grp_fu_3037_p2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_5_dram_d0 <= StgValue_536_set_dram_fu_2832_circular_ram_2_dram_d0;
        else 
            var2chk_2_5_dram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    var2chk_2_5_dram_we0_assign_proc : process(ap_CS_fsm_state29, ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660, ap_enable_reg_pp1_iter8, StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0, tmp_16_fu_4083_p2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter8) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter7_tmp_20_reg_9660)))) then 
            var2chk_2_5_dram_we0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = tmp_16_fu_4083_p2))) then 
            var2chk_2_5_dram_we0 <= StgValue_536_set_dram_fu_2832_circular_ram_2_dram_we0;
        else 
            var2chk_2_5_dram_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_assign_10_fu_5972_p1 <= p_Result_6_fu_5965_p3;
    x_assign_12_fu_5998_p1 <= p_Result_8_fu_5991_p3;
    x_assign_20_fu_6050_p1 <= p_Result_12_fu_6043_p3;
    x_assign_22_fu_6076_p1 <= p_Result_14_fu_6069_p3;
    x_assign_2_fu_5920_p1 <= p_Result_2_fu_5913_p3;
    x_assign_s_fu_5894_p1 <= p_Result_s_fu_5887_p3;
    y_assign_10_fu_6024_p1 <= p_Result_10_fu_6017_p3;
    y_assign_12_fu_6037_p1 <= p_Result_11_fu_6030_p3;
    y_assign_15_fu_6063_p1 <= p_Result_13_fu_6056_p3;
    y_assign_16_fu_6089_p1 <= p_Result_15_fu_6082_p3;
    y_assign_18_fu_6102_p1 <= p_Result_16_fu_6095_p3;
    y_assign_1_fu_5946_p1 <= p_Result_4_fu_5939_p3;
    y_assign_20_fu_6115_p1 <= p_Result_17_fu_6108_p3;
    y_assign_3_fu_5959_p1 <= p_Result_5_fu_5952_p3;
    y_assign_6_fu_5985_p1 <= p_Result_7_fu_5978_p3;
    y_assign_7_fu_6011_p1 <= p_Result_9_fu_6004_p3;
    y_assign_9_fu_5907_p1 <= p_Result_1_fu_5900_p3;
    y_assign_s_fu_5933_p1 <= p_Result_3_fu_5926_p3;
end behav;
